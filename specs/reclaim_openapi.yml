openapi: 3.0.1
info:
  title: Reclaim API
  description: Reclaim's awesome API
  contact:
    name: Reclaim.ai Inc.
    url: http://reclaim.ai
    email: info@reclaim.ai
  license:
    name: Reclaim 9.9
    url: http://reclaim.ai
  version: "0.1"
paths:
  /api/account-time-schemes:
    get:
      tags:
      - account-time-schemes
      operationId: fetchAccountTimeSchemes
      responses:
        "200":
          description: fetchAccountTimeSchemes 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountTimeSchemeView"
      security:
      - Authorization: []
    post:
      tags:
      - account-time-schemes
      operationId: createAccountTimeScheme
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountTimeSchemeCreateRequest"
        required: true
      responses:
        "200":
          description: createAccountTimeScheme 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountTimeSchemeView"
      security:
      - Authorization: []
  /api/account-time-schemes/{accountTimeSchemeId}:
    patch:
      tags:
      - account-time-schemes
      operationId: patchAccountTimeScheme
      parameters:
      - name: accountTimeSchemeId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountTimeSchemePatchRequest"
        required: true
      responses:
        "200":
          description: patchAccountTimeScheme 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountTimeSchemeView"
      security:
      - Authorization: []
  /api/accounts:
    get:
      tags:
      - accounts
      operationId: list
      responses:
        "200":
          description: list 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConnectedAccount"
      security:
      - Authorization: []
  /api/accounts/validate:
    post:
      tags:
      - accounts
      operationId: validateAll
      responses:
        "200":
          description: validateAll 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/accounts/{accountId}/calendars:
    get:
      tags:
      - accounts
      operationId: getCalendars
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getCalendars 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CalendarView"
      security:
      - Authorization: []
  /api/accounts/{accountId}/calendars/connected:
    put:
      tags:
      - accounts
      operationId: setAvailability
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: setAvailability 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
    post:
      tags:
      - accounts
      operationId: postConnectedCalendar
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectedCalendarCreateRequest"
        required: true
      responses:
        "200":
          description: postConnectedCalendar 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarView"
      security:
      - Authorization: []
  /api/accounts/{accountId}/calendars/connected/{calendarId}:
    get:
      tags:
      - accounts
      operationId: getConnectedCalendar
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getConnectedCalendar 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarView"
      security:
      - Authorization: []
    put:
      tags:
      - accounts
      operationId: putConnectedCalendar
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: "#/components/schemas/ConnectedCalendarUpdateRequest"
        required: true
      responses:
        "200":
          description: putConnectedCalendar 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarView"
      security:
      - Authorization: []
    delete:
      tags:
      - accounts
      operationId: deleteConnectedCalendar
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: deleteConnectedCalendar 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/accounts/{accountId}/main:
    post:
      tags:
      - accounts
      operationId: switchMain
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: switchMain 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/accounts/{id}:
    delete:
      tags:
      - accounts
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: delete 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/accounts/{id}/validate:
    post:
      tags:
      - accounts
      operationId: validate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: validate 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/admin/users:
    post:
      operationId: admin_createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPayload"
        required: true
      responses:
        "200":
          description: admin_createUser 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserView"
      security:
      - Authorization:
        - ROLE_API
  /api/admin/users/{username}:
    delete:
      operationId: admin_deleteUser
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: admin_deleteUser 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization:
        - ROLE_API
  /api/admin/users/{username}/accounts:
    get:
      operationId: admin_listAccounts
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: admin_listAccounts 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConnectedAccount"
      security:
      - Authorization:
        - ROLE_API
    post:
      operationId: admin_createAccount
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectedAccountPayload"
        required: true
      responses:
        "200":
          description: admin_createAccount 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectedAccount"
      security:
      - Authorization:
        - ROLE_API
  /api/admin/users/{username}/accounts/{accountId}/main:
    post:
      operationId: admin_switchMainAccount
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: accountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: admin_switchMainAccount 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization:
        - ROLE_API
  /api/admin/users/{username}/calendar-syncs:
    get:
      operationId: admin_getCalendarSyncs
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: admin_getCalendarSyncs 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CalendarSync"
      security:
      - Authorization:
        - ROLE_API
    post:
      operationId: admin_createCalendarSync
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCalendarSyncRequest"
        required: true
      responses:
        "200":
          description: admin_createCalendarSync 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarSync"
      security:
      - Authorization:
        - ROLE_API
  /api/admin/users/{username}/calendar-syncs/{sourceId}/to/{targetId}:
    delete:
      operationId: admin_deleteSync
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: sourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: targetId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: admin_deleteSync 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization:
        - ROLE_API
    patch:
      operationId: admin_patchSync
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: sourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: targetId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
        required: true
      responses:
        "200":
          description: admin_patchSync 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarSync"
      security:
      - Authorization:
        - ROLE_API
  /api/admin/users/{username}/orgMetadata:
    patch:
      operationId: admin_patchOrgMetadata
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrgMetadata"
        required: true
      responses:
        "200":
          description: admin_patchOrgMetadata 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      security:
      - Authorization:
        - ROLE_API
  /api/analytics/focus/insights/V3:
    get:
      tags:
      - analytics
      operationId: analytics_focusInsights_v3
      parameters:
      - name: start
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: end
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: useAggregation
        in: query
        schema:
          type: boolean
          nullable: true
      - name: countingStyle
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/FocusTimeCountingStyle"
      responses:
        "200":
          description: analytics_focusInsights_v3 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FocusInsightsViewV3"
      security:
      - Authorization: []
  /api/analytics/team:
    get:
      tags:
      - analytics
      operationId: analytics_teamAnalytics
      parameters:
      - name: start
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: end
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: metricName
        in: query
        required: true
        schema:
          type: array
          items:
            $ref: "#/components/schemas/AnalyticsMetricName"
      - name: groupingInterval
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/AnalyticsGroupingInterval"
      responses:
        "200":
          description: analytics_teamAnalytics 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsResults"
      security:
      - Authorization: []
  /api/analytics/team/V3:
    get:
      tags:
      - analytics
      operationId: analytics_teamAnalyticsV3
      parameters:
      - name: start
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: end
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: metricName
        in: query
        required: true
        schema:
          type: array
          items:
            $ref: "#/components/schemas/AnalyticsMetricName"
      - name: groupingInterval
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/AnalyticsGroupingInterval"
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: analytics_teamAnalyticsV3 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsResultView"
      security:
      - Authorization: []
  /api/analytics/user:
    get:
      tags:
      - analytics
      operationId: analytics_userAnalytics
      parameters:
      - name: start
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: end
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: metricName
        in: query
        required: true
        schema:
          type: array
          items:
            $ref: "#/components/schemas/AnalyticsMetricName"
      - name: groupingInterval
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/AnalyticsGroupingInterval"
      responses:
        "200":
          description: analytics_userAnalytics 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsResults"
      security:
      - Authorization: []
  /api/analytics/user/V3:
    get:
      tags:
      - analytics
      operationId: analytics_userAnalyticsV3
      parameters:
      - name: start
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: end
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: metricName
        in: query
        required: true
        schema:
          type: array
          items:
            $ref: "#/components/schemas/AnalyticsMetricName"
      - name: groupingInterval
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/AnalyticsGroupingInterval"
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: analytics_userAnalyticsV3 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsResultView"
      security:
      - Authorization: []
  /api/anonymous/flags:
    get:
      operationId: ok
      responses:
        "200":
          description: ok 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnonymousFlags"
  /api/api-management/api-key:
    post:
      tags:
      - api-management
      operationId: createApiKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKey"
        required: true
      responses:
        "200":
          description: createApiKey 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKey"
      security:
      - Authorization: []
    patch:
      tags:
      - api-management
      operationId: updateApiKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKey"
        required: true
      responses:
        "200":
          description: updateApiKey 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKey"
      security:
      - Authorization: []
  /api/api-management/api-key/reissue/{id}:
    patch:
      tags:
      - api-management
      operationId: reissueApiKey
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: reissueApiKey 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKey"
      security:
      - Authorization: []
  /api/api-management/api-key/{id}:
    get:
      tags:
      - api-management
      operationId: listApiKey
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listApiKey 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKey"
      security:
      - Authorization: []
    delete:
      tags:
      - api-management
      operationId: deleteApiKey
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: deleteApiKey 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/api-management/api-keys:
    get:
      tags:
      - api-management
      operationId: listApiKey_1
      responses:
        "200":
          description: listApiKey_1 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiKey"
      security:
      - Authorization: []
  /api/asana/integrations:
    get:
      tags:
      - asana
      - integration
      - private
      operationId: integrations
      responses:
        "200":
          description: integrations 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AsanaIntegration"
      security:
      - Authorization: []
    delete:
      tags:
      - asana
      - integration
      - private
      operationId: deleteIntegration
      responses:
        "200":
          description: deleteIntegration 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AsanaIntegration"
      security:
      - Authorization: []
    patch:
      tags:
      - asana
      - integration
      - private
      operationId: integrations_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AsanaIntegrationPatch"
        required: true
      responses:
        "200":
          description: integrations_1 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AsanaIntegration"
      security:
      - Authorization: []
  /api/assist/habits/daily:
    get:
      tags:
      - assist
      operationId: getDailyHabits
      responses:
        "200":
          description: getDailyHabits 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DailyHabit"
      security:
      - Authorization: []
    post:
      tags:
      - assist
      operationId: create
      parameters:
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DailyHabit_1"
        required: true
      responses:
        "200":
          description: create 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DailyHabit"
      security:
      - Authorization: []
  /api/assist/habits/daily/{id}:
    get:
      tags:
      - assist
      operationId: getDailyHabit
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getDailyHabit 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DailyHabit"
      security:
      - Authorization: []
    put:
      tags:
      - assist
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DailyHabit_2"
        required: true
      responses:
        "200":
          description: update 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DailyHabit"
      security:
      - Authorization: []
    delete:
      tags:
      - assist
      operationId: delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
    patch:
      tags:
      - assist
      operationId: patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DailyHabit"
        required: true
      responses:
        "200":
          description: patch 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DailyHabit"
      security:
      - Authorization: []
  /api/assist/habits/daily/{id}/migrate-to-smart-series:
    post:
      tags:
      - assist
      operationId: migrateToSmartSeries
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: recurrenceType
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SmartSeriesRecurrenceType"
      responses:
        "200":
          description: migrateToSmartSeries 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/assist/habits/template:
    get:
      tags:
      - assist
      operationId: getHabitTemplate
      parameters:
      - name: templateKey
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/HabitTemplateKey"
      responses:
        "200":
          description: getHabitTemplate 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DailyHabitTemplate"
      security:
      - Authorization: []
  /api/assist/habits/template/create:
    post:
      tags:
      - assist
      operationId: createHabitTemplates
      parameters:
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateRequest"
        required: true
      responses:
        "200":
          description: createHabitTemplates 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HabitTemplateKey"
      deprecated: true
      security:
      - Authorization: []
  /api/assist/habits/templates:
    get:
      tags:
      - assist
      operationId: getHabitTemplates
      parameters:
      - name: role
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserProfileRole"
      - name: department
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserProfileDepartment"
      responses:
        "200":
          description: getHabitTemplates 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DailyHabitTemplate"
      security:
      - Authorization: []
  /api/assist/smart-meetings/availability-diagnostics:
    get:
      tags:
      - assist
      operationId: availabilityDiagnostics
      parameters:
      - name: seriesId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: availabilityDiagnostics 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssistController.AvailabilityDiagnostics"
      security:
      - Authorization: []
  /api/assistant/fake/1:
    get:
      operationId: fakeEndpoint1
      responses:
        "200":
          description: fakeEndpoint1 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarEntryView"
      security:
      - Authorization: []
  /api/assistant/messages:
    post:
      tags:
      - assistant
      operationId: message
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssistantInteractionRequest"
        required: true
      responses:
        "200":
          description: message 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssistantInteractionResponse"
      security:
      - Authorization: []
  /api/assistant/scheduling/book:
    post:
      operationId: bookMeeting
      parameters:
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: "#/components/schemas/BookMeetingRequest"
              - properties:
                  user:
                    $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: bookMeeting 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/assistant/threads:
    post:
      tags:
      - assistant
      operationId: createThread
      responses:
        "200":
          description: createThread 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssistantThreadView"
      security:
      - Authorization: []
  /api/assistant/threads/{threadId}:
    get:
      tags:
      - assistant
      operationId: findByThreadAndAssistant
      parameters:
      - name: threadId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: findByThreadAndAssistant 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssistantThreadView"
      security:
      - Authorization: []
  /api/calendars/personal:
    get:
      tags:
      - calendars
      operationId: getAllPersonal
      responses:
        "200":
          description: getAllPersonal 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Calendar"
      security:
      - Authorization: []
  /api/calendars/personal/candidates:
    get:
      tags:
      - calendars
      operationId: getPersonalCandidates
      parameters:
      - name: credentialId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        "200":
          description: getPersonalCandidates 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Calendar"
      security:
      - Authorization: []
  /api/calendars/personal/{id}:
    get:
      tags:
      - calendars
      operationId: getPersonal
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getPersonal 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Calendar"
      security:
      - Authorization: []
    delete:
      tags:
      - calendars
      operationId: deletePersonal
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      deprecated: true
      security:
      - Authorization: []
  /api/calendars/primary:
    get:
      tags:
      - calendars
      operationId: getPrimary
      responses:
        "200":
          description: getPrimary 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Calendar"
      security:
      - Authorization: []
  /api/calendars/share:
    post:
      tags:
      - calendars
      operationId: share
      parameters:
      - name: credentialId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
  /api/calendars/sync:
    get:
      tags:
      - calendars
      operationId: getAllSync
      responses:
        "200":
          description: getAllSync 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Calendar"
      security:
      - Authorization: []
    post:
      tags:
      - calendars
      operationId: createSync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalendarRequest"
        required: true
      responses:
        "200":
          description: createSync 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Calendar"
      security:
      - Authorization: []
  /api/calendars/sync-policy:
    get:
      tags:
      - calendarSyncPolicy
      operationId: getSyncPolicies
      responses:
        "200":
          description: getSyncPolicies 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CalendarSyncPolicyWithCalendars"
      security:
      - Authorization: []
    post:
      tags:
      - calendarSyncPolicy
      operationId: createSyncPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalendarSyncPolicyRequest"
        required: true
      responses:
        "200":
          description: createSyncPolicy 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarSyncPolicyWithCalendars"
      security:
      - Authorization: []
  /api/calendars/sync-policy/validate:
    post:
      tags:
      - calendarSyncPolicy
      operationId: testSyncPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalendarSyncPolicy"
        required: true
      responses:
        "200":
          description: testSyncPolicy 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/calendars/sync-policy/{sourceId}/to/{targetId}:
    get:
      tags:
      - calendarSyncPolicy
      operationId: getSyncPolicy
      parameters:
      - name: sourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: targetId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getSyncPolicy 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarSyncPolicyWithCalendars"
      security:
      - Authorization: []
    delete:
      tags:
      - calendarSyncPolicy
      operationId: deleteSyncPolicy
      parameters:
      - name: sourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: targetId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
    patch:
      tags:
      - calendarSyncPolicy
      operationId: patchSyncPolicy
      parameters:
      - name: sourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: targetId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: suppressEncodingChange
        in: query
        schema:
          type: boolean
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalendarSyncPolicy"
        required: true
      responses:
        "200":
          description: patchSyncPolicy 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarSyncPolicyWithCalendars"
      security:
      - Authorization: []
  /api/calendars/sync-policy/{sourceId}/to/{targetId}/repair:
    post:
      tags:
      - calendarSyncPolicy
      operationId: repairSync
      parameters:
      - name: sourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: targetId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: repairSync 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/calendars/sync/candidates:
    get:
      tags:
      - calendars
      operationId: getSyncCandidates
      parameters:
      - name: credentialId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        "200":
          description: getSyncCandidates 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Calendar"
      security:
      - Authorization: []
  /api/calendars/sync/interest:
    post:
      tags:
      - calendars
      operationId: interest
      parameters:
      - name: type
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
  /api/calendars/sync/{credentialId}/candidates/sources:
    get:
      tags:
      - calendars
      operationId: getSourceCandidates
      parameters:
      - name: credentialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getSourceCandidates 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Calendar"
      security:
      - Authorization: []
  /api/calendars/sync/{credentialId}/candidates/targets:
    get:
      tags:
      - calendars
      operationId: getTargetCandidates
      parameters:
      - name: credentialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getTargetCandidates 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Calendar"
      security:
      - Authorization: []
  /api/calendars/sync/{id}:
    get:
      tags:
      - calendars
      operationId: getSync
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getSync 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Calendar"
      security:
      - Authorization: []
    delete:
      tags:
      - calendars
      operationId: deleteSync
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
  /api/calendars/watch:
    post:
      tags:
      - calendars
      operationId: watch
      responses:
        "200":
          description: watch 200 response
          content:
            application/json:
              schema:
                type: string
  /api/calendars/watchList:
    post:
      tags:
      - calendars
      summary: "Heads up! We have seen at least one case where Google can issue an\
        \ excessive, unnatural amount of watch callbacks."
      description: "Heads up! We have seen at least one case where Google can issue\
        \ an excessive, unnatural amount of watch callbacks. for more information.\
        \ Specifically, BE CAREFUL adding any blocking IO code, such as web service\
        \ calls or database queries, upstream of that job."
      operationId: listWatch
      responses:
        "200":
          description: listWatch 200 response
          content:
            application/json:
              schema:
                type: string
  /api/calendars/watchSettings:
    post:
      tags:
      - calendars
      operationId: settingsWatch
      responses:
        "200":
          description: settingsWatch 200 response
          content:
            application/json:
              schema:
                type: string
  /api/calendars/{calendarId}/audit-and-repair:
    post:
      tags:
      - calendars
      operationId: repair
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: repair 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      security:
      - Authorization: []
  /api/calendars/{calendarId}/audit-and-repair-v2:
    post:
      tags:
      - calendars
      operationId: auditAndRepairV2
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: resyncMode
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/CalendarConsistencyService.ResyncMode"
      responses:
        "200":
          description: auditAndRepairV2 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      security:
      - Authorization: []
  /api/calendars/{credentialId}/{externalCalendarId}/clean:
    post:
      tags:
      - calendars
      - private
      operationId: cleanCalendar
      parameters:
      - name: credentialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: externalCalendarId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CleanRequest"
        required: true
      responses:
        "200":
          description: cleanCalendar 200 response
      security:
      - Authorization: []
  /api/calendars/{credentialId}/{externalId}/colors:
    delete:
      tags:
      - calendars
      operationId: clearColors
      parameters:
      - name: credentialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: externalId
        in: path
        required: true
        schema:
          type: string
      - name: daysBack
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                daysBack:
                  type: integer
                  format: int32
                  nullable: true
        required: true
      responses:
        "200":
          description: clearColors 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/calendars/{targetCalendarId}/rescore:
    post:
      tags:
      - calendars
      operationId: cleanSync
      parameters:
      - name: targetCalendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: cleanSync 200 response
      security:
      - Authorization: []
  /api/changelog:
    get:
      tags:
      - changelog
      operationId: getChangeLog
      responses:
        "200":
          description: getChangeLog 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChangeLogEntryView"
      security:
      - Authorization: []
  /api/changelog/events:
    get:
      tags:
      - changelog
      operationId: events
      parameters:
      - name: eventIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: events 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChangeLogEntryView"
      security:
      - Authorization: []
  /api/changelog/scheduling-links:
    get:
      tags:
      - changelog
      operationId: schedulingLinks
      parameters:
      - name: schedulingLinkIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: schedulingLinks 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChangeLogEntryView"
      security:
      - Authorization: []
  /api/changelog/smart-habits:
    get:
      tags:
      - changelog
      operationId: habits
      parameters:
      - name: lineageIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: habits 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChangeLogEntryView"
      security:
      - Authorization: []
  /api/changelog/smart-meetings:
    get:
      tags:
      - changelog
      operationId: meetings
      parameters:
      - name: lineageIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: meetings 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChangeLogEntryView"
      security:
      - Authorization: []
  /api/changelog/tasks:
    get:
      tags:
      - changelog
      operationId: tasks
      parameters:
      - name: taskIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: tasks 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChangeLogEntryView"
      security:
      - Authorization: []
  /api/clickup/integrations:
    get:
      tags:
      - clickup
      - integration
      - private
      operationId: integrations_2
      responses:
        "200":
          description: integrations_2 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClickUpIntegration"
      deprecated: true
      security:
      - Authorization: []
    delete:
      tags:
      - clickup
      - integration
      - private
      operationId: deleteIntegration_1
      responses:
        "200":
          description: deleteIntegration_1 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/clickup/integrations/details:
    get:
      tags:
      - clickup
      - integration
      - private
      operationId: clickUpIntegrationsDetails
      responses:
        "200":
          description: clickUpIntegrationsDetails 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClickUpIntegrationDetails"
      security:
      - Authorization: []
  /api/clickup/integrations/settings/{workspaceId}:
    patch:
      tags:
      - clickup
      - integration
      - private
      operationId: patchIntegration
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClickUpIntegrationPatch"
        required: true
      responses:
        "200":
          description: patchIntegration 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/clickup/integrations/{workspaceId}:
    patch:
      tags:
      - clickup
      - integration
      - private
      operationId: patchIntegration_1
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeprecatedClickUpIntegrationPatch"
        required: true
      responses:
        "200":
          description: patchIntegration_1 200 response
          content:
            application/json:
              schema:
                type: object
      deprecated: true
      security:
      - Authorization: []
  /api/credentials:
    get:
      tags:
      - credentials
      operationId: list_1
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      - name: includeInvalid
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: list_1 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Credential"
      security:
      - Authorization: []
  /api/credentials/personal:
    get:
      tags:
      - credentials
      operationId: listPersonal
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      responses:
        "200":
          description: listPersonal 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Credential"
      security:
      - Authorization: []
  /api/credentials/primary:
    get:
      tags:
      - credentials
      operationId: getPrimary_1
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credential"
      security:
      - Authorization: []
  /api/credentials/{id}:
    get:
      tags:
      - credentials
      operationId: get
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: get 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credential"
      security:
      - Authorization: []
    delete:
      tags:
      - credentials
      operationId: delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
  /api/delegated-access:
    get:
      tags:
      - delegated-access
      operationId: getAllConfigsForGrantor
      responses:
        "200":
          description: getAllConfigsForGrantor 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DelegatedAccessView"
      security:
      - Authorization: []
    post:
      tags:
      - delegated-access
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDelegateAccessRequest"
        required: true
      responses:
        "200":
          description: create_1 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DelegatedAccessView"
      security:
      - Authorization: []
  /api/delegated-access/allowed:
    get:
      tags:
      - delegated-access
      operationId: getAllowed
      responses:
        "200":
          description: getAllowed 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizedDelegatedAccessView"
      security:
      - Authorization: []
  /api/delegated-access/toggle/{delegatedAccessId}:
    put:
      tags:
      - delegated-access
      operationId: toggle
      parameters:
      - name: delegatedAccessId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DelegatedAccessToggleRequest"
        required: true
      responses:
        "200":
          description: toggle 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DelegatedAccessView"
      security:
      - Authorization: []
  /api/delegated-access/{id}:
    delete:
      tags:
      - delegated-access
      operationId: delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
  /api/effective-time-policy:
    post:
      tags:
      - effective-time-policy
      operationId: effectiveTimePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EffectiveTimePolicyRequest"
        required: true
      responses:
        "200":
          description: effectiveTimePolicy 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EffectiveTimePolicyView"
      security:
      - Authorization: []
  /api/enum-registry/list:
    get:
      operationId: list_2
      responses:
        "200":
          description: list_2 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnumsController.EnumsForFrontend"
      security:
      - Authorization: []
  /api/events:
    get:
      tags:
      - events
      operationId: query
      parameters:
      - name: calendar
        in: query
        deprecated: true
        schema:
          type: integer
          format: int64
          nullable: true
      - name: calendarIds
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
      - name: allConnected
        in: query
        schema:
          type: boolean
          nullable: true
      - name: priorities
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
      - name: type
        in: query
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/EventType"
      - name: project
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
      - name: start
        in: query
        schema:
          type: string
          format: date
          nullable: true
      - name: end
        in: query
        schema:
          type: string
          format: date
          nullable: true
      - name: sourceDetails
        in: query
        schema:
          type: boolean
          nullable: true
      - name: thin
        in: query
        schema:
          type: boolean
          nullable: true
      - name: habitIds
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
      - name: recurringOneOnOneIds
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
      - name: taskIds
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: query 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
      security:
      - Authorization: []
  /api/events/fetch-instances/raw-event/{credentialId}/{calendarId}/{eventId}:
    get:
      tags:
      - events
      operationId: fetchInstancesEventRaw
      parameters:
      - name: credentialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: calendarId
        in: path
        required: true
        schema:
          type: string
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: start
        in: query
        schema:
          type: string
          format: date
          nullable: true
      - name: end
        in: query
        schema:
          type: string
          format: date
          nullable: true
      - name: eventField
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      responses:
        "200":
          description: fetchInstancesEventRaw 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      security:
      - Authorization: []
  /api/events/fetch-instances/raw-google/{credentialId}/{calendarId}/{eventId}:
    get:
      tags:
      - events
      operationId: fetchInstancesGoogleRaw
      parameters:
      - name: credentialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: calendarId
        in: path
        required: true
        schema:
          type: string
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: start
        in: query
        schema:
          type: string
          format: date
          nullable: true
      - name: end
        in: query
        schema:
          type: string
          format: date
          nullable: true
      - name: eventField
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      responses:
        "200":
          description: fetchInstancesGoogleRaw 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      deprecated: true
      security:
      - Authorization: []
  /api/events/personal:
    get:
      tags:
      - events
      operationId: getPersonal_1
      parameters:
      - name: start
        in: query
        schema:
          type: string
          format: date
          nullable: true
      - name: end
        in: query
        schema:
          type: string
          format: date
          nullable: true
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: getPersonal_1 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
      security:
      - Authorization: []
  /api/events/raw-event/{credentialId}/{calendarId}/{eventId}:
    get:
      tags:
      - events
      operationId: fetchEventRaw
      parameters:
      - name: credentialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: calendarId
        in: path
        required: true
        schema:
          type: string
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: eventField
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      responses:
        "200":
          description: fetchEventRaw 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
    patch:
      tags:
      - events
      operationId: patchEventRaw
      parameters:
      - name: credentialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: calendarId
        in: path
        required: true
        schema:
          type: string
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: patchEventRaw 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventWithData"
      security:
      - Authorization: []
  /api/events/raw-events/{credentialId}/{calendarId}:
    get:
      tags:
      - events
      operationId: queryEventsRaw
      parameters:
      - name: credentialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: calendarId
        in: path
        required: true
        schema:
          type: string
      - name: q
        in: query
        schema:
          type: string
          nullable: true
      - name: start
        in: query
        schema:
          type: string
          format: date
          nullable: true
      - name: end
        in: query
        schema:
          type: string
          format: date
          nullable: true
      - name: singleEvents
        in: query
        schema:
          type: boolean
          nullable: true
      - name: eventField
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: privateExtendedProperty
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: sharedExtendedProperty
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      responses:
        "200":
          description: queryEventsRaw 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      security:
      - Authorization: []
  /api/events/raw-google/{credentialId}/{calendarId}:
    get:
      tags:
      - events
      operationId: queryGoogleRaw
      parameters:
      - name: credentialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: calendarId
        in: path
        required: true
        schema:
          type: string
      - name: q
        in: query
        schema:
          type: string
          nullable: true
      - name: start
        in: query
        schema:
          type: string
          format: date
          nullable: true
      - name: end
        in: query
        schema:
          type: string
          format: date
          nullable: true
      - name: singleEvents
        in: query
        schema:
          type: boolean
          nullable: true
      - name: eventField
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: privateExtendedProperty
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: sharedExtendedProperty
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      responses:
        "200":
          description: queryGoogleRaw 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      deprecated: true
      security:
      - Authorization: []
  /api/events/raw-google/{credentialId}/{calendarId}/{eventId}:
    get:
      tags:
      - events
      operationId: fetchGoogleRaw
      parameters:
      - name: credentialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: calendarId
        in: path
        required: true
        schema:
          type: string
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: eventField
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      responses:
        "200":
          description: fetchGoogleRaw 200 response
          content:
            application/json:
              schema:
                type: object
      deprecated: true
      security:
      - Authorization: []
  /api/events/smart-series:
    get:
      tags:
      - events
      operationId: querySmartSeriesEventsByLineageIds
      parameters:
      - name: start
        in: query
        schema:
          type: string
          format: date
          nullable: true
      - name: end
        in: query
        schema:
          type: string
          format: date
          nullable: true
      - name: lineageIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: querySmartSeriesEventsByLineageIds 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
      security:
      - Authorization: []
  /api/events/view/{calendarId}/{eventId}:
    get:
      tags:
      - events
      operationId: gcalViewRedirect
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: skipSourceRedirect
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: gcalViewRedirect 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/events/{calendarId}/{eventId}:
    get:
      tags:
      - events
      operationId: getForCalendar
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: sourceDetails
        in: query
        schema:
          type: boolean
          nullable: true
      - name: thin
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: getForCalendar 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
      security:
      - Authorization: []
  /api/events/{calendarId}/{eventId}/buffer:
    post:
      tags:
      - events
      operationId: adjustConferenceBuffer
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: duration
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: adjustConferenceBuffer 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/events/{calendarId}/{eventId}/priority:
    post:
      tags:
      - events
      operationId: adjustPriority
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: priority
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/PriorityLevel"
      - name: period
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/RecurringEventUpdatePeriod"
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: adjustPriority 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/events/{calendarId}/{eventId}/travel/{type}:
    post:
      tags:
      - events
      operationId: adjustTravelTime
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/AssistType"
      - name: duration
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: adjustTravelTime 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/events/{eventId}:
    get:
      tags:
      - events
      operationId: get_1
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: sourceDetails
        in: query
        schema:
          type: boolean
          nullable: true
      - name: thin
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: get_1 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
      deprecated: true
      security:
      - Authorization: []
  /api/extra-types/eventMatcher:
    get:
      tags:
      - extra-types
      operationId: eventMatcher
      responses:
        "200":
          description: eventMatcher 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventMatcher"
      deprecated: true
      security:
      - Authorization: []
  /api/extra-types/lockChangedMetadataView:
    get:
      tags:
      - extra-types
      operationId: lockChangedMetadataView
      responses:
        "200":
          description: lockChangedMetadataView 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LockChangedMetadataView"
      security:
      - Authorization: []
  /api/extra-types/periodSkippedDueToReservedWordMetadataView:
    get:
      tags:
      - extra-types
      operationId: periodSkippedDueToReservedWordMetadataView
      responses:
        "200":
          description: periodSkippedDueToReservedWordMetadataView 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PeriodSkippedDueToReservedWordMetadataView"
      security:
      - Authorization: []
  /api/extra-types/periodSkippedMetadataView:
    get:
      tags:
      - extra-types
      operationId: periodSkippedMetadataView
      responses:
        "200":
          description: periodSkippedMetadataView 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PeriodSkippedMetadataView"
      security:
      - Authorization: []
  /api/extra-types/smartMeetingDeclinedMetadataView:
    get:
      tags:
      - extra-types
      operationId: smartMeetingDeclinedMetadataView
      responses:
        "200":
          description: smartMeetingDeclinedMetadataView 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartMeetingDeclinedMetadataView"
      security:
      - Authorization: []
  /api/extra-types/smartSeriesEventMovedView:
    get:
      tags:
      - extra-types
      operationId: smartSeriesEventMovedView
      responses:
        "200":
          description: smartSeriesEventMovedView 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesEventMovedView"
      security:
      - Authorization: []
  /api/focus-settings/clear-focus-time-events:
    post:
      tags:
      - focus-settings
      operationId: clearFocusTimeEvents
      responses:
        "200":
          description: clearFocusTimeEvents 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/focus-settings/remove-duplicated-focus-time-events:
    post:
      tags:
      - focus-settings
      operationId: removeDuplicatedFocusTimeEvents
      responses:
        "200":
          description: removeDuplicatedFocusTimeEvents 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/focus-settings/team:
    get:
      tags:
      - focus-settings
      operationId: findAllForTeam
      responses:
        "200":
          description: findAllForTeam 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamFocusSettingsView"
      security:
      - Authorization: []
    post:
      tags:
      - focus-settings
      operationId: createTeamFocusSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamFocusSettingsCreateRequest"
        required: true
      responses:
        "200":
          description: createTeamFocusSettings 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamFocusSettingsView"
      security:
      - Authorization: []
  /api/focus-settings/team/{id}:
    get:
      tags:
      - focus-settings
      operationId: findTeamFocusSettings
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: findTeamFocusSettings 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamFocusSettingsView"
      security:
      - Authorization: []
    patch:
      tags:
      - focus-settings
      operationId: patchTeamFocusSettings
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamFocusSettingsPatchRequest"
        required: true
      responses:
        "200":
          description: patchTeamFocusSettings 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamFocusSettingsView"
      security:
      - Authorization: []
  /api/focus-settings/user:
    get:
      tags:
      - focus-settings
      operationId: findAll
      responses:
        "200":
          description: findAll 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserFocusSettingsView"
      security:
      - Authorization: []
    post:
      tags:
      - focus-settings
      operationId: createUserFocusSettings
      parameters:
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserFocusSettingsCreateRequest"
        required: true
      responses:
        "200":
          description: createUserFocusSettings 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFocusSettingsView"
      security:
      - Authorization: []
  /api/focus-settings/user/focus-time/default:
    get:
      tags:
      - focus-settings
      operationId: fetchFocusTimeDefault
      responses:
        "200":
          description: fetchFocusTimeDefault 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFocusSettingsView"
      security:
      - Authorization: []
  /api/focus-settings/user/{id}:
    patch:
      tags:
      - focus-settings
      operationId: patchUserFocusSettings
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserFocusSettingsPatchRequest"
        required: true
      responses:
        "200":
          description: patchUserFocusSettings 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFocusSettingsView"
      security:
      - Authorization: []
  /api/focus/planner/{calendarId}/{eventId}/lock:
    post:
      tags:
      - focus-planner-actions
      operationId: lockFocusInstance
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: lockFocusInstance 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FocusPlannerActionResult"
      security:
      - Authorization: []
  /api/focus/planner/{calendarId}/{eventId}/move:
    post:
      tags:
      - focus-planner-actions
      operationId: moveFocusInstance
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: start
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: moveFocusInstance 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FocusPlannerActionResult"
      security:
      - Authorization: []
  /api/focus/planner/{calendarId}/{eventId}/reschedule:
    post:
      tags:
      - focus-planner-actions
      operationId: rescheduleFocusInstance
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: snoozeOption
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/SnoozeOption"
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: rescheduleFocusInstance 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FocusPlannerActionResult"
      security:
      - Authorization: []
  /api/focus/planner/{calendarId}/{eventId}/unlock:
    post:
      tags:
      - focus-planner-actions
      operationId: unlockFocusInstance
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: unlockFocusInstance 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FocusPlannerActionResult"
      security:
      - Authorization: []
  /api/google-add-on/add-html-to-email:
    post:
      tags:
      - google-add-on
      - integration
      - private
      operationId: addHtmlToEmail
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: "#/components/schemas/AddOnInsertableState"
              - properties:
                  user:
                    $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: addHtmlToEmail 200 response
          content:
            application/json:
              schema:
                type: string
      security:
      - Authorization: []
  /api/google-add-on/integrations:
    get:
      tags:
      - google-add-on
      - integration
      - private
      operationId: integrations_3
      responses:
        "200":
          description: integrations_3 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GoogleAddOnSettings"
      security:
      - Authorization: []
  /api/integrations/enabled:
    get:
      tags:
      - integration
      - private
      operationId: enabled
      responses:
        "200":
          description: enabled 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationStatus"
      security:
      - Authorization: []
  /api/integrations/zoom:
    get:
      operationId: getZoomIntegration
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      responses:
        "200":
          description: getZoomIntegration 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZoomUser"
      security:
      - Authorization: []
    post:
      operationId: createRecurringZoomMeeting
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: "#/components/schemas/CreateZoomMeetingRequest"
              - properties:
                  user:
                    $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: createRecurringZoomMeeting 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateZoomMeetingResponse"
      security:
      - Authorization: []
    delete:
      operationId: deleteZoomToken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: deleteZoomToken 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/interpreter/message:
    post:
      operationId: message_1
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: "#/components/schemas/MessagePost"
              - properties:
                  user:
                    $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: message_1 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InterpretedPlansGet"
      security:
      - Authorization: []
  /api/interpreter/plans/pending/{planId}:
    get:
      operationId: fetchMessage
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      - name: planId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: fetchMessage 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InterpretedPlanGet"
      security:
      - Authorization: []
  /api/invite/{trackingCode}:
    get:
      tags:
      - invite
      operationId: resolve
      parameters:
      - name: trackingCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: resolve 200 response
          content:
            application/json:
              schema:
                type: object
  /api/jira/integrations:
    get:
      tags:
      - integration
      - jira
      - private
      operationId: integrations_4
      responses:
        "200":
          description: integrations_4 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JiraIntegration"
      security:
      - Authorization: []
  /api/jira/integrations/{id}:
    delete:
      tags:
      - integration
      - jira
      - private
      operationId: deleteIntegration_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: deleteIntegration_2 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JiraIntegration"
      security:
      - Authorization: []
    patch:
      tags:
      - integration
      - jira
      - private
      operationId: patchIntegration_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JiraIntegrationPatch"
        required: true
      responses:
        "200":
          description: patchIntegration_2 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/linear/integrations:
    get:
      tags:
      - integration
      - linear
      - private
      operationId: integrations_5
      responses:
        "200":
          description: integrations_5 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LinearIntegration"
      security:
      - Authorization: []
  /api/linear/integrations/{id}:
    delete:
      tags:
      - integration
      - linear
      - private
      operationId: deleteIntegration_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: deleteIntegration_3 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
    patch:
      tags:
      - integration
      - linear
      - private
      operationId: patchIntegration_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LinearIntegrationPatch"
        required: true
      responses:
        "200":
          description: patchIntegration_3 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/linear/issue/{id}:
    get:
      tags:
      - integration
      - linear
      - private
      operationId: issueDetails
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: issueDetails 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinearTaskDetails"
  /api/moment:
    get:
      tags:
      - moment
      operationId: get_2
      responses:
        "200":
          description: get_2 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moment"
      security:
      - Authorization: []
  /api/moment/next:
    get:
      tags:
      - moment
      operationId: next
      responses:
        "200":
          description: next 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moment"
      security:
      - Authorization: []
  /api/ok:
    get:
      operationId: apiOk
      parameters:
      - name: env
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: apiOk 200 response
          content:
            application/json:
              schema:
                type: string
  /api/oneOnOne:
    get:
      tags:
      - oneOnOnes
      operationId: getOneOnOnes
      parameters:
      - name: instances
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: getOneOnOnes 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecurringOneOnOne"
      security:
      - Authorization: []
    post:
      tags:
      - oneOnOnes
      operationId: createOnOnOne
      parameters:
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      - name: sendTeamInvite
        in: query
        schema:
          type: boolean
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecurringOneOnOne_1"
        required: true
      responses:
        "200":
          description: createOnOnOne 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecurringOneOnOne"
      security:
      - Authorization: []
  /api/oneOnOne/convert-auto/{id}:
    post:
      tags:
      - oneOnOnes
      operationId: convertPendingToAuto
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: title
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: convertPendingToAuto 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecurringOneOnOne"
      security:
      - Authorization: []
  /api/oneOnOne/detected:
    get:
      tags:
      - oneOnOnes
      operationId: getDetected
      responses:
        "200":
          description: getDetected 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecurringOneOnOne"
      security:
      - Authorization: []
  /api/oneOnOne/invite/{id}/respond:
    post:
      tags:
      - oneOnOnes
      operationId: respond
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecurringOneOnOneRespondRequest"
        required: true
      responses:
        "200":
          description: respond 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/oneOnOne/invite/{id}/respond/{inviteKey}:
    post:
      tags:
      - oneOnOnes
      operationId: respondAnonymously
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: inviteKey
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecurringOneOnOneRespondRequest"
        required: true
      responses:
        "200":
          description: respondAnonymously 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecurringOneOnOne_2"
  /api/oneOnOne/invitee-eligibility:
    get:
      tags:
      - oneOnOnes
      operationId: getInviteeEligibility
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getInviteeEligibility 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InviteeEligibility"
      security:
      - Authorization: []
  /api/oneOnOne/invites:
    get:
      tags:
      - oneOnOnes
      operationId: getMeetingInvites
      parameters:
      - name: instances
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: getMeetingInvites 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecurringOneOnOne"
      security:
      - Authorization: []
  /api/oneOnOne/invites/{id}:
    get:
      tags:
      - oneOnOnes
      operationId: getMeetingInvite
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: inviteKey
        in: query
        schema:
          type: string
          nullable: true
      - name: instances
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: getMeetingInvite 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecurringOneOnOne"
  /api/oneOnOne/suggestions:
    get:
      tags:
      - oneOnOnes
      operationId: getSuggestions
      responses:
        "200":
          description: getSuggestions 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecurringOneOnOne"
      security:
      - Authorization: []
  /api/oneOnOne/zoom/{trackingCode}/{oneOnOneId}:
    get:
      tags:
      - oneOnOnes
      operationId: zoomRedirect
      parameters:
      - name: trackingCode
        in: path
        required: true
        schema:
          type: string
      - name: oneOnOneId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: zoomRedirect 200 response
          content:
            application/json:
              schema:
                type: object
  /api/oneOnOne/{id}:
    get:
      tags:
      - oneOnOnes
      operationId: getOneOnOne
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: instances
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: getOneOnOne 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecurringOneOnOne"
      security:
      - Authorization: []
    delete:
      tags:
      - oneOnOnes
      operationId: deleteOneOnOne
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
    patch:
      tags:
      - oneOnOnes
      operationId: patchOneOnOne
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
        required: true
      responses:
        "200":
          description: patchOneOnOne 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecurringOneOnOne"
      security:
      - Authorization: []
  /api/oneOnOne/{id}/migrate-to-smart-series:
    post:
      tags:
      - oneOnOnes
      operationId: migrateToSmartSeries_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: recurrenceType
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SmartSeriesRecurrenceType"
      responses:
        "200":
          description: migrateToSmartSeries_1 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/oneOnOne/{oneOnOneId}/instances:
    get:
      tags:
      - oneOnOnes
      operationId: getInstances
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      - name: oneOnOneId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getInstances 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecurringAssignmentInstance"
      security:
      - Authorization: []
  /api/participant-resolution:
    get:
      tags:
      - participant-resolution
      operationId: resolveParticipantsForSmartSeries
      parameters:
      - name: emails
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: userCalendarId
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: resolveParticipantsForSmartSeries 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttendeeResolutionView"
      security:
      - Authorization: []
  /api/participant-resolution/scheduling-link:
    get:
      tags:
      - participant-resolution
      operationId: resolveParticipantsForSchedulingLink
      parameters:
      - name: emails
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: userCalendarId
        in: query
        schema:
          type: string
          nullable: true
      - name: schedulingLinkId
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: resolveParticipantsForSchedulingLink 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttendeeResolutionView"
      security:
      - Authorization: []
  /api/partnerstack/anonymous/partners/{email}:
    post:
      tags:
      - integration
      - partnerstack
      - private
      operationId: createAnonymousPartner
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: createAnonymousPartner 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnonymousPartner"
  /api/partnerstack/partners/repair-customers:
    post:
      tags:
      - integration
      - partnerstack
      - private
      operationId: repairCustomers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepairCustomersRequest"
        required: true
      responses:
        "200":
          description: repairCustomers 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnonymousPartner"
      security:
      - Authorization: []
  /api/people:
    get:
      tags:
      - people
      operationId: search
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      - name: q
        in: query
        required: true
        schema:
          type: string
      - name: limit
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: search 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ThinPerson"
      security:
      - Authorization: []
  /api/people/subscriptions:
    delete:
      tags:
      - people
      - private
      operationId: unsubscribe
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: type
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
  /api/people/sync:
    post:
      tags:
      - people
      - private
      operationId: refreshContacts
      responses:
        "200":
          description: refreshContacts 200 response
      security:
      - Authorization: []
  /api/planner/add-time/task/{taskId}:
    post:
      tags:
      - actions
      operationId: addTime
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: minutes
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: addTime 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/clear-exceptions/habit/{habitId}:
    post:
      tags:
      - actions
      operationId: clearHabitTimePolicyExceptions
      parameters:
      - name: habitId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: clearHabitTimePolicyExceptions 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/clear-exceptions/one-on-one/{oneOnOneId}:
    post:
      tags:
      - actions
      operationId: clearOneOnOneTimePolicyExceptions
      parameters:
      - name: oneOnOneId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: clearOneOnOneTimePolicyExceptions 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/clear-exceptions/task/{taskId}:
    post:
      tags:
      - actions
      operationId: clearTaskTimePolicyExceptions
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: clearTaskTimePolicyExceptions 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/done/habit/{habitId}:
    post:
      tags:
      - actions
      operationId: doneHabit
      parameters:
      - name: habitId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: doneHabit 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/done/task/{taskId}:
    post:
      tags:
      - actions
      operationId: doneTask
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: doneTask 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/event/category/{calendarId}/{eventId}:
    put:
      tags:
      - actions
      operationId: changeCategory
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: categoryIn
        in: query
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: changeCategory 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/event/move/{eventId}:
    post:
      tags:
      - actions
      summary: Event Actions
      description: Event Actions
      operationId: moveEvent
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: start
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: moveEvent 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/event/pin/{eventId}:
    post:
      tags:
      - actions
      operationId: pinEvent
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: pinEvent 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/event/rsvp/{calendarId}/{eventId}:
    put:
      tags:
      - actions
      operationId: rsvp
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RsvpResponseBody"
        required: true
      responses:
        "200":
          description: rsvp 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/event/unpin/{eventId}:
    post:
      tags:
      - actions
      operationId: unpinEvent
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationKeyRequest"
        required: true
      responses:
        "200":
          description: unpinEvent 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/event/{calendarId}/{eventId}/move:
    post:
      tags:
      - actions
      operationId: moveTask
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: start
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: moveTask 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/event/{calendarId}/{eventId}/pin:
    post:
      tags:
      - actions
      operationId: pinEventV2
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationKeyRequest"
        required: true
      responses:
        "200":
          description: pinEventV2 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/event/{calendarId}/{eventId}/unpin:
    post:
      tags:
      - actions
      operationId: unpinEventV2
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationKeyRequest"
        required: true
      responses:
        "200":
          description: unpinEventV2 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/habit/{calendarId}/{eventId}/reschedule:
    post:
      tags:
      - actions
      operationId: habitDeleteInstanceAndReschedule
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: snoozeOption
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SnoozeOption"
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: habitDeleteInstanceAndReschedule 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/log-work/task/{taskId}:
    post:
      tags:
      - actions
      operationId: logWork
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: minutes
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: end
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: logWork 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/migration/priorities:
    post:
      tags:
      - actions
      operationId: migrateToPrioritySystem
      responses:
        "200":
          description: migrateToPrioritySystem 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/planner/one-on-one/reschedule/{oneOnOneId}/{eventId}:
    post:
      tags:
      - actions
      operationId: oneOnOneReschedule
      parameters:
      - name: oneOnOneId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationKeyRequest"
        required: true
      responses:
        "200":
          description: oneOnOneReschedule 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/one-on-one/skip-day/{oneOnOneId}/{eventId}:
    post:
      tags:
      - actions
      operationId: oneOnOneSkipDay
      parameters:
      - name: oneOnOneId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationKeyRequest"
        required: true
      responses:
        "200":
          description: oneOnOneSkipDay 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/one-on-one/skip-until/{oneOnOneId}/{eventId}:
    post:
      tags:
      - actions
      operationId: oneOnOneSkipUntil
      parameters:
      - name: oneOnOneId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationKeyRequest"
        required: true
      responses:
        "200":
          description: oneOnOneSkipUntil 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/one-on-one/skip-week/{oneOnOneId}/{eventId}:
    post:
      tags:
      - actions
      operationId: oneOnOneSkipWeek
      parameters:
      - name: oneOnOneId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationKeyRequest"
        required: true
      responses:
        "200":
          description: oneOnOneSkipWeek 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/plan-work/task/{taskId}:
    post:
      tags:
      - actions
      operationId: planWork
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: dateTime
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: durationMinutes
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: planWork 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/policy/habit/{habitId}:
    delete:
      tags:
      - actions
      operationId: deleteHabitPolicy
      parameters:
      - name: habitId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: deleteHabitPolicy 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/policy/task/{taskId}:
    delete:
      tags:
      - actions
      summary: Task Actions
      description: Task Actions
      operationId: deleteTaskPolicy
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: deleteTaskPolicy 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/prioritize/task/{taskId}:
    post:
      tags:
      - actions
      operationId: prioritizeTask
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: prioritizeTask 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/reschedule/habit/event/{eventId}:
    post:
      tags:
      - actions
      operationId: rescheduleHabitEvent
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: rescheduleHabitEvent 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/reschedule/task/event/{eventId}:
    post:
      tags:
      - actions
      operationId: rescheduleTaskEvent
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: rescheduleTaskEvent 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      deprecated: true
      security:
      - Authorization: []
  /api/planner/restart/habit/{habitId}:
    post:
      tags:
      - actions
      operationId: restartHabit
      parameters:
      - name: habitId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: restartHabit 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/restart/task/{taskId}:
    post:
      tags:
      - actions
      operationId: restartTask
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: restartTask 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/skip/habit/event/{eventId}:
    post:
      tags:
      - actions
      operationId: skipHabitEvent
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: skipHabitEvent 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/start/habit/{habitId}:
    post:
      tags:
      - actions
      summary: Habit Actions
      description: Habit Actions
      operationId: startHabit
      parameters:
      - name: habitId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: startHabit 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/start/task/{taskId}:
    post:
      tags:
      - actions
      operationId: startTask
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: startTask 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/stop/habit/{habitId}:
    post:
      tags:
      - actions
      operationId: stopHabit
      parameters:
      - name: habitId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: stopHabit 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/stop/task/{taskId}:
    post:
      tags:
      - actions
      operationId: stopTask
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: stopTask 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/task/reschedule/bulk:
    post:
      tags:
      - actions
      operationId: taskDeleteMultipleInstanceAndReschedule
      parameters:
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventList"
        required: true
      responses:
        "200":
          description: taskDeleteMultipleInstanceAndReschedule 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/task/{calendarId}/{eventId}/reschedule:
    post:
      tags:
      - actions
      operationId: taskDeleteInstanceAndReschedule
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: snoozeOption
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SnoozeOption"
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: taskDeleteInstanceAndReschedule 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/task/{taskId}/clear-snooze:
    post:
      tags:
      - actions
      operationId: taskClearSnooze
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: taskClearSnooze 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/task/{taskId}/snooze:
    post:
      tags:
      - actions
      operationId: snoozeTask
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: snoozeOption
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SnoozeOption"
      - name: relativeFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: snoozeTask 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/toggle/habit/{habitId}:
    post:
      tags:
      - actions
      operationId: toggleHabit
      parameters:
      - name: habitId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: enable
        in: query
        schema:
          type: boolean
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: toggleHabit 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/planner/unarchive/task/{taskId}:
    post:
      tags:
      - actions
      operationId: unarchiveTask
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: unarchiveTask 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlannerActionIntermediateResult"
      security:
      - Authorization: []
  /api/resources:
    get:
      tags:
      - resources
      operationId: getResources
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      responses:
        "200":
          description: getResources 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resources"
      security:
      - Authorization: []
  /api/schedule-actions:
    post:
      tags:
      - schedule-actions
      operationId: actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleActionRequest"
        required: true
      responses:
        "200":
          description: actions 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleActionResponse"
      security:
      - Authorization: []
  /api/schedule-actions/apply-actions:
    post:
      tags:
      - schedule-actions
      operationId: applyActions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplyScheduleActionsRequest"
        required: true
      responses:
        "200":
          description: applyActions 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplyScheduleActionsResponse"
      security:
      - Authorization: []
  /api/schedule-policy:
    get:
      tags:
      - schedule-policy
      operationId: listPolicies
      responses:
        "200":
          description: listPolicies 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SchedulePolicyView"
      security:
      - Authorization: []
  /api/scoring/rescore:
    post:
      tags:
      - scoring
      operationId: rescore
      responses:
        "200":
          description: rescore 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/slack/action-endpoint:
    post:
      tags:
      - integration
      - private
      - slack
      operationId: actionEndpoint
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
  /api/slack/add:
    get:
      tags:
      - integration
      - private
      - slack
      operationId: slackRedirect
      parameters:
      - name: scope
        in: query
        schema:
          type: string
          nullable: true
      - name: bot
        in: query
        schema:
          type: string
          nullable: true
      - name: userScopes
        in: query
        schema:
          type: string
          nullable: true
      - name: teamId
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
  /api/slack/command:
    post:
      tags:
      - integration
      - private
      - slack
      operationId: command
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
  /api/slack/connect:
    get:
      tags:
      - integration
      - private
      - slack
      operationId: connect
      parameters:
      - name: code
        in: query
        schema:
          type: string
          nullable: true
      - name: error
        in: query
        schema:
          type: string
          nullable: true
      - name: state
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
  /api/slack/interactive-endpoint:
    post:
      tags:
      - integration
      - private
      - slack
      operationId: interactiveEndpoint
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
  /api/slack/link:
    post:
      tags:
      - integration
      - private
      - slack
      operationId: link
      parameters:
      - name: teamId
        in: query
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
  /api/slack/options-load-endpoint:
    post:
      tags:
      - integration
      - private
      - slack
      operationId: optionsLoadEndpoint
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/OptionsLoadEndpointRequest"
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
  /api/slack/streamlined-connect:
    get:
      tags:
      - integration
      - private
      - slack
      operationId: streamlinedConnect
      parameters:
      - name: code
        in: query
        schema:
          type: string
          nullable: true
      - name: error
        in: query
        schema:
          type: string
          nullable: true
      - name: state
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
  /api/slack/streamlined-init:
    get:
      tags:
      - integration
      - private
      - slack
      operationId: streamLinedRedirect
      parameters:
      - name: slackTeamId
        in: query
        schema:
          type: string
          nullable: true
      - name: slackUserId
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
  /api/smart-habits:
    get:
      tags:
      - smart-habits
      operationId: findAllSmartHabits
      responses:
        "200":
          description: findAllSmartHabits 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SmartHabitLineageView"
      security:
      - Authorization: []
    post:
      tags:
      - smart-habits
      operationId: createSmartHabit
      parameters:
      - name: sendUpdates
        in: query
        schema:
          type: boolean
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSmartHabitRequest"
        required: true
      responses:
        "200":
          description: createSmartHabit 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartHabitLineageView"
      security:
      - Authorization: []
  /api/smart-habits/convert/{calendarId}/{eventId}:
    post:
      tags:
      - smart-habits
      operationId: convertToSmartHabits
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSmartHabitRequest"
        required: true
      responses:
        "200":
          description: convertToSmartHabits 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartMeetingLineageView"
      security:
      - Authorization: []
  /api/smart-habits/detect:
    get:
      tags:
      - smart-habits
      operationId: detectSmartHabits
      parameters:
      - name: onboarding
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: detectSmartHabits 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SmartHabitLineageView"
      security:
      - Authorization: []
  /api/smart-habits/planner/{eventId}/done:
    post:
      tags:
      - smart-habits
      operationId: markAsDone
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: markAsDone 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-habits/planner/{eventId}/lock:
    post:
      tags:
      - smart-habits
      operationId: lockHabitInstance
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: lockHabitInstance 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-habits/planner/{eventId}/move:
    post:
      tags:
      - smart-habits
      operationId: moveMeetingInstance
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: start
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: moveMeetingInstance 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-habits/planner/{eventId}/reschedule:
    post:
      tags:
      - smart-habits
      operationId: rescheduleMeetingInstance
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: snoozeOption
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/SnoozeOption"
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: rescheduleMeetingInstance 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-habits/planner/{eventId}/skip:
    post:
      tags:
      - smart-habits
      operationId: skipHabitInstance
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: skipHabitInstance 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-habits/planner/{eventId}/unlock:
    post:
      tags:
      - smart-habits
      operationId: unlockHabitInstance
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: unlockHabitInstance 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-habits/planner/{lineageId}/clear-exceptions:
    post:
      tags:
      - smart-habits
      operationId: resetSchedule
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: resetSchedule 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-habits/planner/{lineageId}/record:
    post:
      tags:
      - smart-habits
      operationId: record
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: start
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: record 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-habits/planner/{lineageId}/recordable-periods:
    get:
      tags:
      - smart-habits
      operationId: recordablePeriods
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: recordablePeriods 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SmartSeriesPeriodView"
      security:
      - Authorization: []
  /api/smart-habits/planner/{lineageId}/start:
    post:
      tags:
      - smart-habits
      operationId: startNow
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: startNow 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-habits/planner/{lineageId}/stop:
    post:
      tags:
      - smart-habits
      operationId: stop
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: stop 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-habits/planner/{seriesId}/clear-force-skipped:
    post:
      tags:
      - smart-habits
      operationId: clearForceSkipped
      parameters:
      - name: seriesId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: clearForceSkipped 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/smart-habits/planner/{seriesId}/clear-time-policy-exceptions:
    post:
      tags:
      - smart-habits
      operationId: clearTimePolicyExceptions
      parameters:
      - name: seriesId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: clearTimePolicyExceptions 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/smart-habits/shared:
    post:
      tags:
      - smart-habits
      operationId: createSharedHabit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSharedSmartHabitRequest"
        required: true
      responses:
        "200":
          description: createSharedHabit 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SharedSmartHabit"
      security:
      - Authorization: []
  /api/smart-habits/shared/v2/{sharedHabitShortCode}:
    get:
      tags:
      - smart-habits
      operationId: getSharedHabit
      parameters:
      - name: sharedHabitShortCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getSharedHabit 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SharedSmartHabitView"
      security:
      - Authorization:
        - isAuthenticated()
        - isAnonymous()
  /api/smart-habits/shared/{sharedHabitShortCode}:
    get:
      tags:
      - smart-habits
      operationId: getSharedHabit_deprecated
      parameters:
      - name: sharedHabitShortCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getSharedHabit_deprecated 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartHabitTemplate"
      deprecated: true
      security:
      - Authorization:
        - isAuthenticated()
        - isAnonymous()
  /api/smart-habits/template:
    get:
      tags:
      - smart-habits
      operationId: getSmartHabitTemplate
      parameters:
      - name: key
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/SmartHabitTemplateKey"
      responses:
        "200":
          description: getSmartHabitTemplate 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartHabitTemplate"
      security:
      - Authorization: []
  /api/smart-habits/templates:
    get:
      tags:
      - smart-habits
      operationId: getSmartHabitTemplates
      parameters:
      - name: role
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserProfileRole"
      - name: department
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserProfileDepartment"
      responses:
        "200":
          description: getSmartHabitTemplates 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SmartHabitTemplate"
      security:
      - Authorization: []
  /api/smart-habits/templates/create:
    post:
      tags:
      - smart-habits
      operationId: createHabitTemplates_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateHabitTemplateRequest"
        required: true
      responses:
        "200":
          description: createHabitTemplates_1 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SmartHabitLineageView"
      security:
      - Authorization: []
  /api/smart-habits/to-single-instances:
    post:
      tags:
      - smart-habits
      operationId: convertToSingleInstances
      responses:
        "200":
          description: convertToSingleInstances 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SmartHabitLineageView"
      security:
      - Authorization: []
  /api/smart-habits/{lineageId}:
    get:
      tags:
      - smart-habits
      operationId: findForSmartHabitLineage
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: findForSmartHabitLineage 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartHabitLineageView"
      security:
      - Authorization: []
    delete:
      tags:
      - smart-habits
      operationId: deleteForSmartHabitLineage
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sendUpdates
        in: query
        schema:
          type: boolean
          nullable: true
      - name: restoreIfAvailable
        in: query
        schema:
          type: boolean
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: deleteForSmartHabitLineage 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
    patch:
      tags:
      - smart-habits
      operationId: patchSmartHabit
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: query
        schema:
          type: string
          nullable: true
      - name: sendUpdates
        in: query
        schema:
          type: boolean
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchSmartHabitRequest"
        required: true
      responses:
        "200":
          description: patchSmartHabit 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartHabitLineageView"
      security:
      - Authorization: []
  /api/smart-habits/{lineageId}/as-attendee:
    patch:
      tags:
      - smart-habits
      operationId: patchSmartHabitForAttendee
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SmartSeriesAttendeeRequest"
        required: true
      responses:
        "200":
          description: patchSmartHabitForAttendee 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartHabitLineageView"
      security:
      - Authorization: []
  /api/smart-habits/{lineageId}/disable:
    delete:
      tags:
      - smart-habits
      operationId: disable
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: disable 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/smart-habits/{lineageId}/enable:
    post:
      tags:
      - smart-habits
      operationId: enable
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: enable 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/smart-habits/{lineageId}/force-successor:
    patch:
      tags:
      - smart-habits
      operationId: forceSuccessor
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchSmartHabitRequest"
        required: true
      responses:
        "200":
          description: forceSuccessor 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartHabitLineageView"
      security:
      - Authorization: []
  /api/smart-habits/{lineageId}/to-single-instances:
    post:
      tags:
      - smart-habits
      operationId: convertToSingleInstances_1
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: convertToSingleInstances_1 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesLineageView"
      security:
      - Authorization: []
  /api/smart-meetings:
    get:
      tags:
      - smart-meetings
      operationId: findAllSmartMeetings
      responses:
        "200":
          description: findAllSmartMeetings 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SmartMeetingLineageView"
      security:
      - Authorization: []
    post:
      tags:
      - smart-meetings
      operationId: createSmartMeeting
      parameters:
      - name: sendUpdates
        in: query
        schema:
          type: boolean
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSmartMeetingRequest"
        required: true
      responses:
        "200":
          description: createSmartMeeting 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartMeetingLineageView"
      security:
      - Authorization: []
  /api/smart-meetings/attendeeDeclined:
    get:
      tags:
      - smart-meetings
      operationId: findAllAttendeeDeclinedSmartMeetings
      responses:
        "200":
          description: findAllAttendeeDeclinedSmartMeetings 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SmartMeetingLineageView"
      security:
      - Authorization: []
  /api/smart-meetings/availability/{seriesId}:
    get:
      tags:
      - smart-meetings
      operationId: availabilityReport
      parameters:
      - name: seriesId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: start
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: end
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: availabilityReport 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TentativeSlot"
      security:
      - Authorization: []
  /api/smart-meetings/convert/{calendarId}/{eventId}:
    post:
      tags:
      - smart-meetings
      operationId: convertToSmartMeetings
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSmartMeetingRequest"
        required: true
      responses:
        "200":
          description: convertToSmartMeetings 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartMeetingLineageView"
      security:
      - Authorization: []
  /api/smart-meetings/detect:
    get:
      tags:
      - smart-meetings
      operationId: detectSmartMeetings
      parameters:
      - name: onboarding
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: detectSmartMeetings 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SmartMeetingLineageView"
      security:
      - Authorization: []
  /api/smart-meetings/digest/send:
    post:
      tags:
      - smart-meetings-digest
      operationId: send
      responses:
        "200":
          description: send 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/smart-meetings/invite-organizer:
    post:
      tags:
      - smart-meetings
      operationId: inviteOrganizer
      parameters:
      - name: lineageIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: inviteOrganizer 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/smart-meetings/planner/{eventId}/lock:
    post:
      tags:
      - smart-meetings
      operationId: lockMeetingInstance
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: lockMeetingInstance 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-meetings/planner/{eventId}/move:
    post:
      tags:
      - smart-meetings
      operationId: moveMeetingInstance_1
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: start
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: moveMeetingInstance_1 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-meetings/planner/{eventId}/reschedule:
    post:
      tags:
      - smart-meetings
      operationId: rescheduleMeetingInstance_1
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: snoozeOption
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/SnoozeOption"
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: rescheduleMeetingInstance_1 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-meetings/planner/{eventId}/reschedule/any-other-time:
    post:
      tags:
      - smart-meetings
      operationId: rescheduleAnyOtherTimeMeetingInstance
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: rescheduleAnyOtherTimeMeetingInstance 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-meetings/planner/{eventId}/skip:
    post:
      tags:
      - smart-meetings
      operationId: skipMeetingInstance
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: skipMeetingInstance 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-meetings/planner/{eventId}/unlock:
    post:
      tags:
      - smart-meetings
      operationId: unlockMeetingInstance
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: unlockMeetingInstance 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-meetings/planner/{lineageId}/clear-exceptions:
    post:
      tags:
      - smart-meetings
      operationId: resetSchedule_1
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: resetSchedule_1 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesActionPlannedResult"
      security:
      - Authorization: []
  /api/smart-meetings/planner/{seriesId}/clear-force-skipped:
    post:
      tags:
      - smart-meetings
      operationId: clearForceSkipped_1
      parameters:
      - name: seriesId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: clearForceSkipped_1 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/smart-meetings/planner/{seriesId}/clear-time-policy-exceptions:
    post:
      tags:
      - smart-meetings
      operationId: clearTimePolicyExceptions_1
      parameters:
      - name: seriesId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: clearTimePolicyExceptions_1 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/smart-meetings/to-single-instances:
    post:
      tags:
      - smart-meetings
      operationId: convertToSingleInstances_2
      responses:
        "200":
          description: convertToSingleInstances_2 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SmartMeetingLineageView"
      security:
      - Authorization: []
  /api/smart-meetings/{lineageId}:
    get:
      tags:
      - smart-meetings
      operationId: findForSmartMeetingLineage
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: findForSmartMeetingLineage 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartMeetingLineageView"
      security:
      - Authorization: []
    delete:
      tags:
      - smart-meetings
      operationId: deleteForSmartMeetingLineage
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sendUpdates
        in: query
        schema:
          type: boolean
          nullable: true
      - name: restoreIfAvailable
        in: query
        schema:
          type: boolean
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: deleteForSmartMeetingLineage 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
    patch:
      tags:
      - smart-meetings
      operationId: patchSmartMeeting
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: eventId
        in: query
        schema:
          type: string
          nullable: true
      - name: sendUpdates
        in: query
        schema:
          type: boolean
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchSmartMeetingRequest"
        required: true
      responses:
        "200":
          description: patchSmartMeeting 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartMeetingLineageView"
      security:
      - Authorization: []
  /api/smart-meetings/{lineageId}/as-attendee:
    patch:
      tags:
      - smart-meetings
      operationId: patchSmartMeetingForAttendee
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SmartSeriesAttendeeRequest"
        required: true
      responses:
        "200":
          description: patchSmartMeetingForAttendee 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartMeetingLineageView"
      security:
      - Authorization: []
  /api/smart-meetings/{lineageId}/disable:
    delete:
      tags:
      - smart-meetings
      operationId: disable_1
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: disable_1 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/smart-meetings/{lineageId}/enable:
    post:
      tags:
      - smart-meetings
      operationId: enable_1
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: enable_1 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/smart-meetings/{lineageId}/force-successor:
    patch:
      tags:
      - smart-meetings
      operationId: forceSuccessor_1
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchSmartMeetingRequest"
        required: true
      responses:
        "200":
          description: forceSuccessor_1 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartMeetingLineageView"
      security:
      - Authorization: []
  /api/smart-meetings/{lineageId}/to-single-instances:
    post:
      tags:
      - smart-meetings
      operationId: convertToSingleInstances_3
      parameters:
      - name: lineageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: convertToSingleInstances_3 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartSeriesLineageView"
      security:
      - Authorization: []
  /api/smart-series-migration/reclaim-recurrence/migrate-all:
    post:
      tags:
      - SmartSeriesMigration
      summary: This is only intended for dev use to simulate the UserTaskSchedulerService
        causing the nightly scheduled migration check to run
      description: This is only intended for dev use to simulate the UserTaskSchedulerService
        causing the nightly scheduled migration check to run
      operationId: migrateToGen3SmartSeries
      responses:
        "200":
          description: migrateToGen3SmartSeries 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/smart-series-migration/run:
    post:
      tags:
      - SmartSeriesMigration
      operationId: migrateAllToSmartSeries
      parameters:
      - name: migrateExistingAssignments
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: migrateAllToSmartSeries 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/sso/provider/{email}:
    get:
      tags:
      - actions
      operationId: findProvider
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: findProvider 200 response
          content:
            application/json:
              schema:
                type: string
  /api/tasks:
    get:
      tags:
      - tasks
      operationId: query_1
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      - name: status
        in: query
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/TaskStatus"
      - name: project
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: priority
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/PriorityLevel"
      - name: id
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
      - name: instances
        in: query
        deprecated: true
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: query_1 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
      security:
      - Authorization: []
    post:
      tags:
      - tasks
      operationId: create_2
      parameters:
      - name: instances
        in: query
        deprecated: true
        schema:
          type: boolean
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        required: true
      responses:
        "200":
          description: create_2 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
      security:
      - Authorization: []
  /api/tasks/at-time:
    post:
      tags:
      - tasks
      operationId: createTaskAtTime
      parameters:
      - name: startTime
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        required: true
      responses:
        "200":
          description: createTaskAtTime 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskAtTimeView"
      security:
      - Authorization: []
  /api/tasks/batch:
    delete:
      tags:
      - tasks
      operationId: deleteBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TaskPatch"
        required: true
      responses:
        "200":
          description: deleteBatch 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
    patch:
      tags:
      - tasks
      operationId: patchBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TaskPatch"
        required: true
      responses:
        "200":
          description: patchBatch 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/tasks/batch/archive:
    patch:
      tags:
      - tasks
      operationId: archiveBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TaskPatch"
        required: true
      responses:
        "200":
          description: archiveBatch 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/tasks/batch/complete:
    patch:
      tags:
      - tasks
      operationId: completeBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TaskPatch"
        required: true
      responses:
        "200":
          description: completeBatch 200 response
          content:
            application/json:
              schema:
                type: object
      deprecated: true
      security:
      - Authorization: []
  /api/tasks/interest:
    post:
      tags:
      - tasks
      operationId: interest_1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
  /api/tasks/min-index:
    get:
      tags:
      - tasks
      operationId: findMinIndex
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      responses:
        "200":
          description: findMinIndex 200 response
          content:
            application/json:
              schema:
                type: number
                format: double
                nullable: true
      security:
      - Authorization: []
  /api/tasks/reindex-by-due:
    patch:
      tags:
      - tasks
      operationId: reindexByDue
      responses:
        "200":
          description: reindexByDue 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
      security:
      - Authorization: []
  /api/tasks/{id}:
    get:
      tags:
      - tasks
      operationId: getTask
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: instances
        in: query
        deprecated: true
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: getTask 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
      security:
      - Authorization: []
    delete:
      tags:
      - tasks
      operationId: delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
  /api/tasks/{taskId}:
    put:
      tags:
      - tasks
      operationId: put
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: instances
        in: query
        deprecated: true
        schema:
          type: boolean
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        required: true
      responses:
        "200":
          description: put 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
      security:
      - Authorization: []
    patch:
      tags:
      - tasks
      operationId: patch_1
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: instances
        in: query
        deprecated: true
        schema:
          type: boolean
          nullable: true
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
        required: true
      responses:
        "200":
          description: patch_1 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
      security:
      - Authorization: []
  /api/tasks/{taskId}/reindex:
    patch:
      tags:
      - tasks
      operationId: reindex
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Reindex"
        required: true
      responses:
        "200":
          description: reindex 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
      security:
      - Authorization: []
  /api/team/current/webhooks:
    get:
      tags:
      - webhooks
      operationId: queryWebhookConfigs
      parameters:
      - name: statuses
        in: query
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/WebhookStatus"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WebhookConfig"
      security:
      - Authorization: []
    post:
      tags:
      - webhooks
      operationId: createWebhookConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebhookConfigRequest"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookConfig"
      security:
      - Authorization: []
  /api/team/current/webhooks/messages:
    get:
      tags:
      - webhooks
      operationId: getMessages
      parameters:
      - name: status
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/WebhookMessageStatus"
      - name: type
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/WebhookEventType"
      - name: webhookConfigId
        in: query
        schema:
          type: string
          nullable: true
      - name: count
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: after
        in: query
        schema:
          type: string
          nullable: true
      - name: order
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SortOrder"
      responses:
        "200":
          description: Ok
          content:
            application/json: {}
      security:
      - Authorization: []
  /api/team/current/webhooks/messages/retry:
    post:
      tags:
      - webhooks
      operationId: retry
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebhookRetryRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WebhookMessageView"
      security:
      - Authorization: []
  /api/team/current/webhooks/versions:
    get:
      tags:
      - webhooks
      operationId: getWebhookVersions
      responses:
        "200":
          description: Ok
          content:
            application/json: {}
      security:
      - Authorization: []
  /api/team/current/webhooks/{id}:
    get:
      tags:
      - webhooks
      operationId: getWebhookConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookConfig"
      security:
      - Authorization: []
    put:
      tags:
      - webhooks
      operationId: updateWebhookConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebhookConfigRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookConfig"
      security:
      - Authorization: []
    delete:
      tags:
      - webhooks
      operationId: deleteWebhookConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
  /api/team/current/webhooks/{id}/associations:
    get:
      tags:
      - webhooks
      operationId: getWebhookAssociations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json: {}
      security:
      - Authorization: []
  /api/team/webhook/generate-secret:
    get:
      tags:
      - webhooks
      summary: Generate a secret
      description: Generate a proposal of secret with high entropy
      operationId: generateRandomSecrete
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookSecret"
      security:
      - Authorization: []
  /api/templates/smart-habit:
    get:
      tags:
      - smart-habit-custom-templates
      operationId: findAllHabitTemplates
      responses:
        "200":
          description: findAllHabitTemplates 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SmartHabitCustomTemplateView"
      security:
      - Authorization: []
    post:
      tags:
      - smart-habit-custom-templates
      operationId: createHabitTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSmartHabitCustomTemplateRequest"
        required: true
      responses:
        "200":
          description: createHabitTemplate 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartHabitCustomTemplateView"
      security:
      - Authorization: []
  /api/templates/smart-habit/{templateId}:
    get:
      tags:
      - smart-habit-custom-templates
      operationId: findHabitTemplateById
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: findHabitTemplateById 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartHabitCustomTemplateView"
      security:
      - Authorization: []
    delete:
      tags:
      - smart-habit-custom-templates
      operationId: deleteHabitTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: deleteHabitTemplate 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
    patch:
      tags:
      - smart-habit-custom-templates
      operationId: updateHabitTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchSmartHabitCustomTemplateRequest"
        required: true
      responses:
        "200":
          description: updateHabitTemplate 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartHabitCustomTemplateView"
      security:
      - Authorization: []
  /api/templates/smart-habit/{templateId}/disable:
    put:
      tags:
      - smart-habit-custom-templates
      operationId: disableHabitTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: disableHabitTemplate 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartHabitCustomTemplateView"
      security:
      - Authorization: []
  /api/templates/smart-habit/{templateId}/enable:
    put:
      tags:
      - smart-habit-custom-templates
      operationId: enableHabitTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: enableHabitTemplate 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartHabitCustomTemplateView"
      security:
      - Authorization: []
  /api/timescheme/rules:
    get:
      tags:
      - time-scheme-rules
      operationId: listRules
      parameters:
      - name: type
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/TimeSchemeIntegrationRuleServiceType"
      responses:
        "200":
          description: listRules 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TimeSchemeIntegrationRule"
      security:
      - Authorization: []
    post:
      tags:
      - time-scheme-rules
      operationId: createRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimeSchemeIntegrationRuleCreateRequest"
        required: true
      responses:
        "200":
          description: createRule 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimeSchemeIntegrationRule"
      security:
      - Authorization: []
  /api/timescheme/rules/{ruleId}:
    delete:
      tags:
      - time-scheme-rules
      operationId: deleteRule
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: deleteRule 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
    patch:
      tags:
      - time-scheme-rules
      operationId: updateRule
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimeSchemeIntegrationRuleUpdateRequest"
        required: true
      responses:
        "200":
          description: updateRule 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimeSchemeIntegrationRule"
      security:
      - Authorization: []
  /api/timescheme/rules/{ruleId}/reindex:
    patch:
      tags:
      - time-scheme-rules
      operationId: reindex_1
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimeSchemeIntegrationRuleReindexRequest"
        required: true
      responses:
        "200":
          description: reindex_1 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/timeschemes:
    get:
      tags:
      - time-scheme
      operationId: listTimePolicySchemes
      parameters:
      - name: taskCategory
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TaskCategory"
      - name: policyType
        in: query
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/TimePolicyType"
      - name: features
        in: query
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/ReclaimEventType"
      responses:
        "200":
          description: listTimePolicySchemes 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TimeScheme"
      security:
      - Authorization: []
    post:
      tags:
      - time-scheme
      operationId: createTimeScheme
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimeSchemeCreateRequest"
        required: true
      responses:
        "200":
          description: createTimeScheme 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimeScheme"
      security:
      - Authorization: []
  /api/timeschemes/filter-by-feature:
    get:
      tags:
      - time-scheme
      operationId: queryTimePolicySchemesByUserIdAndFeature
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: feature
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/ReclaimEventType"
      responses:
        "200":
          description: queryTimePolicySchemesByUserIdAndFeature 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BasicTimeSchemeView"
  /api/timeschemes/filter-by-feature/{userId}:
    get:
      tags:
      - time-scheme
      operationId: listTimePolicySchemesByUserIdAndFeature
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: feature
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/ReclaimEventType"
      responses:
        "200":
          description: listTimePolicySchemesByUserIdAndFeature 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BasicTimeSchemeView"
      deprecated: true
  /api/timeschemes/{schemeId}:
    get:
      tags:
      - time-scheme
      operationId: updateTimeScheme
      parameters:
      - name: schemeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: updateTimeScheme 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimeScheme"
      security:
      - Authorization: []
    delete:
      tags:
      - time-scheme
      operationId: deleteTimeScheme
      parameters:
      - name: schemeId
        in: path
        required: true
        schema:
          type: string
      - name: moveToTimeSchemeId
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: deleteTimeScheme 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
    patch:
      tags:
      - time-scheme
      operationId: updateTimeScheme_1
      parameters:
      - name: schemeId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimeSchemeUpdateRequest"
        required: true
      responses:
        "200":
          description: updateTimeScheme_1 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimeScheme"
      security:
      - Authorization: []
  /api/todoist/integrations:
    get:
      tags:
      - integration
      - private
      - todoist
      operationId: integrations_6
      responses:
        "200":
          description: integrations_6 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TodoistIntegration"
      deprecated: true
      security:
      - Authorization: []
  /api/todoist/integrations/details:
    get:
      tags:
      - integration
      - private
      - todoist
      operationId: integrationsDetails
      responses:
        "200":
          description: integrationsDetails 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TodoistIntegrationDetails"
      security:
      - Authorization: []
  /api/todoist/integrations/settings/{id}:
    patch:
      tags:
      - integration
      - private
      - todoist
      operationId: patchIntegrationSettings
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoistIntegrationPatch"
        required: true
      responses:
        "200":
          description: patchIntegrationSettings 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/todoist/integrations/{id}:
    delete:
      tags:
      - integration
      - private
      - todoist
      operationId: deleteIntegration_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: deleteIntegration_4 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
    patch:
      tags:
      - integration
      - private
      - todoist
      operationId: patchIntegration_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoistIntegrationPatch"
        required: true
      responses:
        "200":
          description: patchIntegration_4 200 response
          content:
            application/json:
              schema:
                type: object
      deprecated: true
      security:
      - Authorization: []
  /api/todoist/sync:
    post:
      tags:
      - integration
      - private
      - todoist
      summary: Initiate a Todoist sync job.
      description: Initiate a Todoist sync job. Used by support (hence the private
        tag) for customers when debugging issues.
      operationId: syncTasks
      responses:
        "200":
          description: syncTasks 200 response
      security:
      - Authorization: []
  /api/users/current:
    get:
      tags:
      - users
      summary: User details for the currently authenticated user
      description: User details for the currently authenticated user
      operationId: current
      responses:
        "200":
          description: The currently authenticated user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserWithIntercomHash"
      security:
      - Authorization: []
    delete:
      tags:
      - users
      operationId: delete_5
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
    patch:
      tags:
      - users
      operationId: patch_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: patch_2 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      security:
      - Authorization: []
  /api/users/current/access:
    get:
      tags:
      - users
      operationId: access
      responses:
        "200":
          description: access 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPermissionsView"
      security:
      - Authorization: []
  /api/users/current/access/{entityType}:
    get:
      tags:
      - users
      operationId: accessByEntityType
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/EntityType"
      responses:
        "200":
          description: accessByEntityType 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityTypeView"
      security:
      - Authorization: []
  /api/users/current/buildings:
    get:
      tags:
      - buildings
      operationId: getBuildings
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      responses:
        "200":
          description: getBuildings 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BuildingView"
      security:
      - Authorization: []
  /api/users/current/buildings/rooms:
    get:
      tags:
      - buildings
      operationId: getRooms
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      responses:
        "200":
          description: getRooms 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoomView"
      security:
      - Authorization: []
  /api/users/current/buildings/rooms/v2:
    get:
      tags:
      - buildings
      operationId: getRoomsV2
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      - name: search
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getRoomsV2 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoomView"
      security:
      - Authorization: []
  /api/users/current/buildings/sync:
    post:
      tags:
      - buildings
      operationId: refreshBuilding
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: refreshBuilding 200 response
      security:
      - Authorization: []
  /api/users/current/contacts:
    get:
      tags:
      - contacts
      operationId: getContacts
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      responses:
        "200":
          description: getContacts 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ThinPerson"
      security:
      - Authorization: []
  /api/users/current/contacts/invite:
    post:
      tags:
      - contacts
      operationId: inviteContacts
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ThinPerson"
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
  /api/users/current/contacts/invite/v2:
    post:
      tags:
      - contacts
      operationId: inviteContactsV2
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
  /api/users/current/contacts/v2:
    get:
      tags:
      - contacts
      operationId: getContactsV2
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      - name: includePendingInvites
        in: query
        required: true
        schema:
          type: boolean
          default: false
      - name: contactTypes
        in: query
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/ContactType"
      responses:
        "200":
          description: getContactsV2 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ContactView"
      deprecated: true
      security:
      - Authorization: []
  /api/users/current/contacts/v3:
    get:
      tags:
      - contacts
      operationId: getContactsV3
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/User"
      - name: includePendingInvites
        in: query
        required: true
        schema:
          type: boolean
          default: false
      - name: lastEmailOrEmpty
        in: query
        required: true
        schema:
          type: string
      - name: countPerPage
        in: query
        required: true
        schema:
          type: integer
          format: int32
          default: 100
      - name: contactTypes
        in: query
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/ContactType"
      - name: search
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getContactsV3 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ContactView"
      security:
      - Authorization: []
  /api/users/current/date-field-order-settings:
    patch:
      tags:
      - users
      summary: "What should the order of day (D), month (M) and year (Y) be when displaying\
        \ dates."
      description: "What should the order of day (D), month (M) and year (Y) be when\
        \ displaying dates. Allowed values:   \nMDY (default), DMY, YMD   \nNOTE:\
        \ the dateFieldOrder value is case-sensitive."
      operationId: updateDateFieldOrderSettings
      parameters:
      - name: dateFieldOrder
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: updateDateFieldOrderSettings 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      security:
      - Authorization: []
  /api/users/current/downgrade-snapshot:
    get:
      tags:
      - users
      operationId: getHardDowngradeSnapshot
      responses:
        "200":
          description: getHardDowngradeSnapshot 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntitlementOverageSnapshot"
      security:
      - Authorization: []
  /api/users/current/features/app-notifications:
    put:
      tags:
      - users
      operationId: updateAppNotifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppNotificationsSettings"
        required: true
      responses:
        "200":
          description: updateAppNotifications 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      security:
      - Authorization: []
  /api/users/current/features/assist-settings/damp-smart-meetings:
    post:
      tags:
      - users
      operationId: updateDampSmartMeetings
      parameters:
      - name: value
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: updateDampSmartMeetings 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/features/assist-settings/notification-settings:
    put:
      tags:
      - users
      operationId: updateAssistNotificationSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssistNotificationSettings"
        required: true
      responses:
        "200":
          description: updateAssistNotificationSettings 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssistNotificationSettings"
      security:
      - Authorization: []
  /api/users/current/features/assist-settings/reschedule-unstarted:
    post:
      tags:
      - users
      operationId: updateRescheduleUnstarted
      parameters:
      - name: value
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: updateRescheduleUnstarted 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/features/assist-settings/schedule-smart-meetings-at-most-daily:
    post:
      tags:
      - users
      operationId: updateScheduleSmartMeetingsAtMostDaily
      parameters:
      - name: value
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: updateScheduleSmartMeetingsAtMostDaily 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/features/assist-settings/schedule-smart-meetings-once:
    post:
      tags:
      - users
      operationId: updateScheduleSmartMeetingsOnce
      parameters:
      - name: value
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: updateScheduleSmartMeetingsOnce 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/features/assist-settings/scheduling-behavior:
    put:
      tags:
      - users
      operationId: updateSchedulingBehavior
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchedulingBehaviorSettings"
        required: true
      responses:
        "200":
          description: updateSchedulingBehavior 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      security:
      - Authorization: []
  /api/users/current/features/assist-settings/smart-habit-recurrence-type:
    post:
      tags:
      - users
      operationId: updateSmartHabitRecurrenceType
      parameters:
      - name: value
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/SmartSeriesRecurrenceType"
      responses:
        "200":
          description: updateSmartHabitRecurrenceType 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/features/assist-settings/smart-habits-to-reclaim-recurrence-auto-migrate:
    post:
      tags:
      - users
      operationId: updateSmartHabitsToGen3AutoMigrate
      parameters:
      - name: value
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: updateSmartHabitsToGen3AutoMigrate 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/features/assist-settings/smart-meeting-recurrence-type:
    post:
      tags:
      - users
      operationId: updateSmartMeetingRecurrenceType
      parameters:
      - name: value
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/SmartSeriesRecurrenceType"
      responses:
        "200":
          description: updateSmartMeetingRecurrenceType 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/features/assist-settings/smart-meetings-to-reclaim-recurrence-auto-migrate:
    post:
      tags:
      - users
      operationId: updateSmartMeetingsToGen3AutoMigrate
      parameters:
      - name: value
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: updateSmartMeetingsToGen3AutoMigrate 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/features/assist-settings/v1-habits-and-meetings-to-reclaim-recurrence-auto-migrate:
    post:
      tags:
      - users
      operationId: updateGen1HabitsAndMeetingsToGen3AutoMigrate
      parameters:
      - name: value
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: updateGen1HabitsAndMeetingsToGen3AutoMigrate 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/features/event-display-preferences:
    put:
      tags:
      - users
      operationId: updateEventDisplayPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventDisplayPreferences"
        required: true
      responses:
        "200":
          description: updateEventDisplayPreferences 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDisplayPreferences"
      security:
      - Authorization: []
  /api/users/current/features/experimental-settings/look-ahead-for-smart-meeting-ideal-day-on-weekly-meetings:
    post:
      tags:
      - users
      operationId: updateLookAheadForSmartMeetingIdealDayOnWeeklyMeetings
      parameters:
      - name: value
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: updateLookAheadForSmartMeetingIdealDayOnWeeklyMeetings 200
            response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/features/experimental-settings/treat-optional-smart-meeting-attendees-as-free:
    post:
      tags:
      - users
      operationId: updateTreatOptionalSmartMeetingAttendeesAsFree
      parameters:
      - name: value
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: updateTreatOptionalSmartMeetingAttendeesAsFree 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/features/focus/debug:
    post:
      tags:
      - users
      operationId: updateFocusDebug
      parameters:
      - name: value
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: updateFocusDebug 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/features/post-onboard:
    patch:
      tags:
      - users
      operationId: patchPostOnboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPostOnboardPatchRequest"
        required: true
      responses:
        "200":
          description: patchPostOnboard 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      security:
      - Authorization: []
  /api/users/current/format24hour-settings:
    patch:
      tags:
      - users
      summary: Whether to show the time in 24h format.
      description: Whether to show the time in 24h format. Default is false.
      operationId: updateFormat24HourTimeSettings
      parameters:
      - name: format24HourTime
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: updateFormat24HourTimeSettings 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      security:
      - Authorization: []
  /api/users/current/onboarded:
    post:
      tags:
      - users
      operationId: onboarded
      parameters:
      - name: notificationKey
        in: query
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OnboardedState"
        required: true
      responses:
        "200":
          description: onboarded 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      security:
      - Authorization: []
  /api/users/current/pipeline-migration:
    post:
      tags:
      - users
      operationId: migrationToPipeline
      responses:
        "200":
          description: migrationToPipeline 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/product-usage:
    get:
      tags:
      - users
      operationId: productUsage
      responses:
        "200":
          description: productUsage 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductUsageReport"
      security:
      - Authorization: []
  /api/users/current/product-usage/hard-downgrade:
    post:
      tags:
      - users
      operationId: hardDowngrade
      responses:
        "200":
          description: hardDowngrade 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductUsageReport"
      security:
      - Authorization: []
  /api/users/current/quest:
    get:
      tags:
      - quest
      operationId: getCompletedQuests
      responses:
        "200":
          description: getCompletedQuests 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserQuests"
      security:
      - Authorization: []
    patch:
      tags:
      - quest
      operationId: completeQuest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompleteQuestRequest"
        required: true
      responses:
        "200":
          description: completeQuest 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserQuests"
      security:
      - Authorization: []
  /api/users/current/referrals:
    get:
      tags:
      - users
      operationId: referrals
      responses:
        "200":
          description: referrals 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReferralStats"
      security:
      - Authorization: []
  /api/users/current/reset:
    post:
      tags:
      - users
      operationId: reset
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
      security:
      - Authorization: []
  /api/users/current/restorable-features:
    get:
      tags:
      - users
      operationId: getRestorableFeatures
      responses:
        "200":
          description: getRestorableFeatures 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RestorableSnapshot"
      security:
      - Authorization: []
  /api/users/current/restore-features:
    post:
      tags:
      - users
      operationId: restoreFeatures
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/EntitlementOverageSnapshot"
        required: true
      responses:
        "200":
          description: restoreFeatures 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/rewards:
    post:
      tags:
      - users
      operationId: claimRewards
      parameters:
      - name: claim
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: claimRewards 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReferralStats"
      security:
      - Authorization: []
  /api/users/current/rsvp-settings:
    put:
      tags:
      - users
      operationId: updateRSVPSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RsvpSettingsView"
        required: true
      responses:
        "200":
          description: updateRSVPSettings 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      security:
      - Authorization: []
  /api/users/current/run-manual-assist:
    post:
      tags:
      - users
      operationId: runManualAssist
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationKeyRequest"
        required: true
      responses:
        "200":
          description: runManualAssist 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /api/users/current/timePolicies:
    get:
      tags:
      - timePolicies
      operationId: get_3
      responses:
        "200":
          description: get_3 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: "#/components/schemas/CustomTimePolicy"
      security:
      - Authorization: []
    patch:
      tags:
      - timePolicies
      operationId: patch_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: patch_3 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: "#/components/schemas/CustomTimePolicy"
      security:
      - Authorization: []
  /api/users/current/timezone-settings:
    put:
      tags:
      - users
      operationId: updateTimezoneSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimezoneSettingsPatch"
        required: true
      responses:
        "200":
          description: updateTimezoneSettings 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      security:
      - Authorization: []
  /api/users/current/week-start-settings:
    patch:
      tags:
      - users
      summary: "Whether the week should start on Sunday (0), Monday (1) or Saturday\
        \ (6)."
      description: "Whether the week should start on Sunday (0), Monday (1) or Saturday\
        \ (6). Default is Sunday (0)."
      operationId: updateWeekStartSettings
      parameters:
      - name: dayOfWeek
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: updateWeekStartSettings 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      security:
      - Authorization: []
  /api/users/interest:
    post:
      tags:
      - users
      operationId: interest_2
      parameters:
      - name: feature
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: interest_2 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      deprecated: true
      security:
      - Authorization: []
  /api/users/trait/{trait}:
    post:
      tags:
      - users
      operationId: addTrait
      parameters:
      - name: trait
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/UserTrait"
      - name: value
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: addTrait 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      security:
      - Authorization: []
  /api/users/tzs:
    get:
      tags:
      - users
      operationId: getAvailableTimeZones
      responses:
        "200":
          description: getAvailableTimeZones 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TimeZoneView"
      security:
      - Authorization:
        - isAuthenticated()
        - isAnonymous()
  /api/weekly-report/social:
    get:
      tags:
      - weekly-report
      operationId: social
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: string
      - name: verificationKey
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: social 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeeklyReportTemplateData"
  /api/weekly-report/social/{id}.png:
    get:
      tags:
      - weekly-report
      operationId: socialImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: socialImage 200 response
          content:
            application/json:
              schema:
                type: object
  /api/weekly-report/social/{trackingCode}/{suffix}.png:
    get:
      tags:
      - weekly-report
      operationId: socialImageAlt
      parameters:
      - name: trackingCode
        in: path
        required: true
        schema:
          type: string
      - name: suffix
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: socialImageAlt 200 response
          content:
            application/json:
              schema:
                type: object
  /api/weekly-report/unsubscribe:
    post:
      tags:
      - weekly-report
      operationId: unsubscribe_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeeklyReportUnsubscribeRequest"
        required: true
      responses:
        "200":
          description: unsubscribe_1 200 response
          content:
            application/json:
              schema:
                type: object
  /avatar/credential/{credentialId}:
    get:
      operationId: credential
      parameters:
      - name: credentialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: credential 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /avatar/lookup:
    get:
      operationId: avatar
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: avatar 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /avatar/me:
    get:
      operationId: me
      responses:
        "200":
          description: me 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /avatar/streamed/credential/{credentialId}:
    get:
      operationId: streamedCredential
      parameters:
      - name: credentialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: streamedCredential 200 response
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
      security:
      - Authorization: []
  /avatar/streamed/id/{userId}:
    get:
      summary: Microsoft doesn't provide a public URL for fetching profile photos
        / avatars so we have to stream them.
      description: "Microsoft doesn't provide a public URL for fetching profile photos\
        \ / avatars so we have to stream them. This is marked as allowing anonymous\
        \ access because we need scheduling link attendees to be able to see avatars\
        \ of the organizers on the booking pages and also for smart meeting invitations,\
        \ etc..."
      operationId: streamedByUserId
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: streamedByUserId 200 response
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
  /avatar/streamed/me:
    get:
      operationId: streamedMe
      responses:
        "200":
          description: streamedMe 200 response
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
      security:
      - Authorization: []
  /aws/ses/events:
    post:
      tags:
      - aws-ses
      operationId: sesEvent
      parameters:
      - name: x-amz-sns-message-type
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: sesEvent 200 response
          content:
            application/json:
              schema:
                type: object
  /oauth/zoom/account/init:
    get:
      operationId: accountInit
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
  /oauth/zoom/init:
    get:
      operationId: initZoom
      parameters:
      - name: state
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                nullable: true
  /ok:
    get:
      operationId: ok_1
      parameters:
      - name: env
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: ok_1 200 response
          content:
            application/json:
              schema:
                type: string
  /scim/v2/Groups:
    get:
      operationId: getGroups
      responses:
        "200":
          description: getGroups 200 response
          content:
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimResourceList"
      security:
      - Authorization:
        - ROLE_API
  /scim/v2/ResourceTypes:
    get:
      operationId: getResourceTypes
      responses:
        "200":
          description: getResourceTypes 200 response
          content:
            application/scim+json:
              schema:
                type: object
      security:
      - Authorization:
        - ROLE_API
  /scim/v2/Schemas:
    get:
      operationId: getSchemas
      responses:
        "200":
          description: getSchemas 200 response
          content:
            application/scim+json:
              schema:
                type: object
      security:
      - Authorization:
        - ROLE_API
  /scim/v2/ServiceProvider:
    get:
      operationId: getServiceProvider
      responses:
        "200":
          description: getServiceProvider 200 response
          content:
            application/scim+json:
              schema:
                type: object
      security:
      - Authorization:
        - ROLE_API
  /scim/v2/Users:
    get:
      operationId: getUsers
      parameters:
      - name: attributes
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: startIndex
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: count
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: filter
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: getUsers 200 response
          content:
            application/scim+json:
              schema:
                type: object
      security:
      - Authorization:
        - ROLE_API
    put:
      operationId: putUser
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/ScimUser"
          application/json:
            schema:
              $ref: "#/components/schemas/ScimUser"
        required: true
      responses:
        "200":
          description: putUser 200 response
          content:
            application/scim+json:
              schema:
                type: object
      security:
      - Authorization:
        - ROLE_API
    post:
      operationId: createUser
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/ScimUser"
          application/json:
            schema:
              $ref: "#/components/schemas/ScimUser"
        required: true
      responses:
        "200":
          description: createUser 200 response
          content:
            application/scim+json:
              schema:
                type: object
      security:
      - Authorization:
        - ROLE_API
  /scim/v2/Users/{id}:
    get:
      operationId: getUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getUser 200 response
          content:
            application/scim+json:
              schema:
                type: object
      security:
      - Authorization:
        - ROLE_API
    put:
      operationId: putUserId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/ScimUser"
          application/json:
            schema:
              $ref: "#/components/schemas/ScimUser"
        required: true
      responses:
        "200":
          description: putUserId 200 response
          content:
            application/scim+json:
              schema:
                type: object
      security:
      - Authorization:
        - ROLE_API
    delete:
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: deleteUser 200 response
          content:
            application/scim+json:
              schema:
                type: object
      security:
      - Authorization:
        - ROLE_API
    patch:
      operationId: patchUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/ScimPatch"
          application/json:
            schema:
              $ref: "#/components/schemas/ScimPatch"
        required: true
      responses:
        "200":
          description: patchUser 200 response
          content:
            application/scim+json:
              schema:
                type: object
      security:
      - Authorization:
        - ROLE_API
  /web/asana/formfieldchange:
    post:
      tags:
      - asana
      - integration
      - private
      operationId: fieldChangeCallback
      responses:
        "200":
          description: fieldChangeCallback 200 response
          content:
            application/json:
              schema:
                type: object
    options:
      tags:
      - asana
      - integration
      - private
      operationId: fieldChangeCallbackPreflight
      responses:
        "200":
          description: fieldChangeCallbackPreflight 200 response
          content:
            application/json:
              schema:
                type: object
  /web/asana/formsubmit:
    post:
      tags:
      - asana
      - integration
      - private
      summary: Called on-submit of the "schedule via reclaim" widget.
      description: Called on-submit of the "schedule via reclaim" widget.
      operationId: formCallback
      parameters:
      - name: x-asana-request-signature
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AsanaSyncFormSubmission"
        required: true
      responses:
        "200":
          description: formCallback 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsanaAttachedResource"
    options:
      tags:
      - asana
      - integration
      - private
      operationId: formCallbackPreflight
      responses:
        "200":
          description: formCallbackPreflight 200 response
          content:
            application/json:
              schema:
                type: object
  /web/asana/syncform:
    get:
      tags:
      - asana
      - integration
      - private
      summary: Called on-render of a task inside of Asana for tasks that have already
        been associated with / scheduled in Reclaim.
      description: Called on-render of a task inside of Asana for tasks that have
        already been associated with / scheduled in Reclaim.
      operationId: syncForm
      parameters:
      - name: x-asana-request-signature
        in: header
        required: true
        schema:
          type: string
      - name: workspace
        in: query
        required: true
        schema:
          type: string
      - name: task
        in: query
        required: true
        schema:
          type: string
      - name: user
        in: query
        required: true
        schema:
          type: string
      - name: expires_at
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: syncForm 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsanaFormMetadata"
    options:
      tags:
      - asana
      - integration
      - private
      operationId: syncFormPreflight
      responses:
        "200":
          description: syncFormPreflight 200 response
          content:
            application/json:
              schema:
                type: object
  /web/asana/task/{asanaTaskId}:
    get:
      tags:
      - asana
      - integration
      - private
      operationId: taskDetails
      parameters:
      - name: asanaTaskId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: taskDetails 200 response
          content:
            application/json:
              schema:
                type: object
    options:
      tags:
      - asana
      - integration
      - private
      operationId: taskDetailsPreflight
      parameters:
      - name: asanaTaskId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: taskDetailsPreflight 200 response
          content:
            application/json:
              schema:
                type: object
  /web/asana/widget:
    get:
      tags:
      - asana
      - integration
      - private
      summary: Called on-render of a task inside of Asana for tasks that have NOT
        already been associated with / scheduled in Reclaim.
      description: Called on-render of a task inside of Asana for tasks that have
        NOT already been associated with / scheduled in Reclaim.
      operationId: widget
      parameters:
      - name: x-asana-request-signature
        in: header
        required: true
        schema:
          type: string
      - name: workspace
        in: query
        required: true
        schema:
          type: string
      - name: task
        in: query
        required: true
        schema:
          type: string
      - name: user
        in: query
        required: true
        schema:
          type: string
      - name: attachment
        in: query
        required: true
        schema:
          type: string
      - name: expires_at
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: widget 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsanaWidgetMetadata"
    options:
      tags:
      - asana
      - integration
      - private
      operationId: widgetPreflight
      responses:
        "200":
          description: widgetPreflight 200 response
          content:
            application/json:
              schema:
                type: object
  /web/clickup/task/{taskId}:
    get:
      tags:
      - clickup
      - integration
      - private
      operationId: taskDetails_1
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: taskDetails_1 200 response
          content:
            application/json:
              schema:
                type: object
  /web/jira/task/{issueKey}/{issueId}:
    get:
      tags:
      - integration
      - jira
      - private
      operationId: taskDetails_2
      parameters:
      - name: issueKey
        in: path
        required: true
        schema:
          type: string
      - name: issueId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: taskDetails_2 200 response
          content:
            application/json:
              schema:
                type: object
  /web/linear/task/{id}:
    get:
      tags:
      - integration
      - linear
      - private
      operationId: taskDetails_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: taskDetails_3 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinearTaskDetails"
  /web/todoist/task/{itemId}:
    get:
      tags:
      - integration
      - private
      - todoist
      operationId: taskDetails_4
      parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: taskDetails_4 200 response
          content:
            application/json:
              schema:
                type: object
  /ws-relay:
    post:
      tags:
      - websocket
      operationId: relay
      parameters:
      - name: connectionId
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: byte
        required: true
      responses:
        "200":
          description: relay 200 response
          content:
            application/json:
              schema:
                type: object
  /ws/bogus:
    post:
      tags:
      - websocket
      summary: This is a bogus endpoint that gives us swagger generated objects for
        our websocket specific classes.
      description: This is a bogus endpoint that gives us swagger generated objects
        for our websocket specific classes.
      operationId: swaggerHelper
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: "#/components/schemas/BogusRequest"
              - properties:
                  user:
                    $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: swaggerHelper 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /ws/connect:
    post:
      tags:
      - websocket
      operationId: connect_1
      parameters:
      - name: connectionId
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: connect_1 200 response
          content:
            application/json:
              schema:
                type: object
      security:
      - Authorization: []
  /ws/default:
    post:
      tags:
      - websocket
      operationId: defaultHandler
      responses:
        "200":
          description: defaultHandler 200 response
          content:
            application/json:
              schema:
                type: object
  /ws/disconnect:
    post:
      tags:
      - websocket
      operationId: disconnect
      parameters:
      - name: connectionId
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: disconnect 200 response
          content:
            application/json:
              schema:
                type: object
  /ws/subscribe:
    post:
      tags:
      - websocket
      operationId: subscribe
      parameters:
      - name: connectionId
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscribeAction"
        required: true
      responses:
        "200":
          description: subscribe 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebSocketResponseEnvelope"
  /ws/unsubscribe:
    post:
      tags:
      - websocket
      operationId: unsubscribe_2
      parameters:
      - name: connectionId
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnsubscribeAction"
        required: true
      responses:
        "200":
          description: unsubscribe_2 200 response
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    AbstractCollection_AbstractLinearTeam_:
      type: object
      properties:
        empty:
          type: boolean
    AbstractCollection_AsanaFormFieldOption_:
      type: object
      properties:
        empty:
          type: boolean
    AbstractCollection_AsanaIntegrationTitleOptions_:
      type: object
      properties:
        empty:
          type: boolean
    AbstractCollection_AsanaProject_:
      type: object
      properties:
        empty:
          type: boolean
    AbstractCollection_AsanaSyncFormField_:
      type: object
      properties:
        empty:
          type: boolean
    AbstractCollection_AsanaWidgetField_:
      type: object
      properties:
        empty:
          type: boolean
    AbstractCollection_CalendarView_:
      type: object
      properties:
        empty:
          type: boolean
    AbstractCollection_ClickUpSpace_:
      type: object
      properties:
        empty:
          type: boolean
    AbstractCollection_ClickUpStatus_:
      type: object
      properties:
        empty:
          type: boolean
    AbstractCollection_JiraProject_:
      type: object
      properties:
        empty:
          type: boolean
    AbstractCollection_String_:
      type: object
      properties:
        empty:
          type: boolean
    AbstractCollection_TodoistLabel_:
      type: object
      properties:
        empty:
          type: boolean
    AbstractCollection_TodoistProject_:
      type: object
      properties:
        empty:
          type: boolean
    AbstractEventMatcher:
      type: object
    AbstractLinearTeam:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        key:
          type: string
        issueEstimationType:
          type: string
          nullable: true
    AbstractMetric:
      required:
      - appendixKeys
      - description
      - noData
      - type
      - unit
      type: object
      properties:
        type:
          $ref: "#/components/schemas/AnalyticsType"
        unit:
          $ref: "#/components/schemas/AnalyticsUnit"
        description:
          type: string
        appendixKeys:
          properties:
            people:
              $ref: "#/components/schemas/List_String_"
        noData:
          type: boolean
      discriminator:
        propertyName: type
        mapping:
          durationByDate: "#/components/schemas/AnalyticsDurationByDateMetric"
          countByCategory: "#/components/schemas/AnalyticsCountByCategoryMetric"
          durationByDateByString: "#/components/schemas/AnalyticsDurationByDateByStringMetric"
          durationByCategory: "#/components/schemas/AnalyticsDurationByCategoryMetric"
          durationByCategoryByString: "#/components/schemas/AnalyticsDurationByCategoryByStringMetric"
          durationByString: "#/components/schemas/AnalyticsDurationByStringMetric"
          calloutGroup: "#/components/schemas/CalloutGroupMetric"
          durationByDateByCategory: "#/components/schemas/AnalyticsDurationByDateByCategoryMetric"
          percentageByDateByDuration: "#/components/schemas/AnalyticsPercentageByDurationRangeByDateMetric"
          countByString: "#/components/schemas/AnalyticsCountByStringMetric"
          integerValue: "#/components/schemas/AnalyticsIntegerValueMetric"
          durationByDayOfWeek: "#/components/schemas/AnalyticsDurationByDayOfWeekMetric"
          countByTeamMember: "#/components/schemas/AnalyticsCountByTeamMemberMetric"
    AccountTimeSchemeCreateRequest:
      required:
      - policy
      - policyType
      - title
      type: object
      properties:
        policyType:
          $ref: "#/components/schemas/TimePolicyType"
        policy:
          $ref: "#/components/schemas/TimePolicy"
        title:
          minLength: 1
          type: string
        description:
          type: string
    AccountTimeSchemePatchRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        policy:
          $ref: "#/components/schemas/TimePolicy"
    AccountTimeSchemeView:
      required:
      - accountId
      - entityType
      - id
      - policy
      - policyType
      - title
      type: object
      properties:
        id:
          type: string
        accountId:
          type: integer
          format: int64
        policyType:
          $ref: "#/components/schemas/TimePolicyType"
        policy:
          $ref: "#/components/schemas/TimePolicy"
        title:
          type: string
        description:
          type: string
          nullable: true
        entityType:
          $ref: "#/components/schemas/EntityTypeView"
    AddBufferEventActionView:
      required:
      - bufferedEventKey
      - event
      - policyId
      type: object
      properties:
        policyId:
          $ref: "#/components/schemas/SchedulePolicyIdView"
        bufferedEventKey:
          $ref: "#/components/schemas/EventKey"
        event:
          $ref: "#/components/schemas/ScheduleActionEventView"
        type:
          type: string
    AddEventActionView:
      required:
      - event
      - policyId
      type: object
      properties:
        policyId:
          $ref: "#/components/schemas/SchedulePolicyIdView"
        event:
          $ref: "#/components/schemas/ScheduleActionEventView"
        type:
          type: string
    AddOnInsertableState:
      required:
      - html
      - insertButtonAltText
      - insertButtonLabel
      type: object
      properties:
        html:
          type: string
        insertButtonLabel:
          type: string
        insertButtonAltText:
          type: string
    AllEventMatcher:
      required:
      - matchers
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractEventMatcher"
      - properties:
          matchers:
            type: array
            items:
              $ref: "#/components/schemas/EventMatcher"
    AnalyticsBucket:
      type: string
      enum:
      - DAY_OF_WEEK
      - DATE
      - WEEK_OF
      - ANALYTICS_CATEGORY
      - EMAIL
      - NUMBER_RANGE_START
      - NUMBER_CUMULATIVE_START
      - STRING
      - RECLAIM_EVENT_TYPE
    AnalyticsCategory:
      type: string
      enum:
      - TEAM_MEETING
      - EXTERNAL_MEETING
      - ONE_ON_ONE
      - TRAVEL
      - BREAK
      - PERSONAL
      - VACATION
      - DEEP_WORK
      - SHALLOW_WORK
    AnalyticsCountByCategoryMetric:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractMetric_10"
      - $ref: "#/components/schemas/AbstractMetric"
      - properties:
          bucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          values:
            type: array
            items:
              $ref: "#/components/schemas/AnalyticsRow_AnalyticsCategory.Long_"
    AnalyticsCountByStringMetric:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractMetric_11"
      - $ref: "#/components/schemas/AbstractMetric"
      - properties:
          bucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          values:
            type: array
            items:
              $ref: "#/components/schemas/AnalyticsRow_String.Long_"
    AnalyticsCountByTeamMemberMetric:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractMetric_8"
      - $ref: "#/components/schemas/AbstractMetric"
      - properties:
          bucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          values:
            type: array
            items:
              $ref: "#/components/schemas/AnalyticsRow_String.Long_"
    AnalyticsDurationByCategoryByStringMetric:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractMetric_7"
      - $ref: "#/components/schemas/AbstractMetric"
      - properties:
          bucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          subBucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          values:
            type: array
            items:
              $ref: "#/components/schemas/AnalyticsGroup_Long.AnalyticsCategory.String_"
    AnalyticsDurationByCategoryMetric:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractMetric_1"
      - $ref: "#/components/schemas/AbstractMetric"
      - properties:
          bucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          values:
            type: array
            items:
              $ref: "#/components/schemas/AnalyticsRow_AnalyticsCategory.Long_"
    AnalyticsDurationByDateByCategoryMetric:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractMetric_3"
      - $ref: "#/components/schemas/AbstractMetric"
      - properties:
          bucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          subBucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          values:
            type: array
            items:
              $ref: "#/components/schemas/AnalyticsGroup_Long.LocalDate.AnalyticsCategory_"
    AnalyticsDurationByDateByStringMetric:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractMetric_4"
      - $ref: "#/components/schemas/AbstractMetric"
      - properties:
          bucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          subBucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          values:
            type: array
            items:
              $ref: "#/components/schemas/AnalyticsGroup_Long.LocalDate.String_"
    AnalyticsDurationByDateMetric:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractMetric_2"
      - $ref: "#/components/schemas/AbstractMetric"
      - properties:
          bucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          values:
            type: array
            items:
              $ref: "#/components/schemas/AnalyticsRow_LocalDate.Long_"
    AnalyticsDurationByDayOfWeekMetric:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractMetric_5"
      - $ref: "#/components/schemas/AbstractMetric"
      - properties:
          bucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          values:
            type: array
            items:
              $ref: "#/components/schemas/AnalyticsRow_DayOfWeek.Long_"
    AnalyticsDurationByStringMetric:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractMetric_9"
      - $ref: "#/components/schemas/AbstractMetric"
      - properties:
          bucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          values:
            type: array
            items:
              $ref: "#/components/schemas/AnalyticsRow_String.Long_"
    AnalyticsGroup_Float.LocalDate.Integer_:
      required:
      - key
      - values
      type: object
      properties:
        key:
          type: string
          format: date
        values:
          type: array
          items:
            $ref: "#/components/schemas/AnalyticsRow_Integer.Float_"
    AnalyticsGroup_Long.AnalyticsCategory.String_:
      required:
      - key
      - values
      type: object
      properties:
        key:
          $ref: "#/components/schemas/AnalyticsCategory"
        values:
          type: array
          items:
            $ref: "#/components/schemas/AnalyticsRow_String.Long_"
    AnalyticsGroup_Long.LocalDate.AnalyticsCategory_:
      required:
      - key
      - values
      type: object
      properties:
        key:
          type: string
          format: date
        values:
          type: array
          items:
            $ref: "#/components/schemas/AnalyticsRow_AnalyticsCategory.Long_"
    AnalyticsGroup_Long.LocalDate.String_:
      required:
      - key
      - values
      type: object
      properties:
        key:
          type: string
          format: date
        values:
          type: array
          items:
            $ref: "#/components/schemas/AnalyticsRow_String.Long_"
    AnalyticsGroupingInterval:
      type: string
      enum:
      - DAILY
      - WEEKLY
    AnalyticsIntegerValueMetric:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractMetric"
      - properties:
          value:
            type: integer
            format: int32
    AnalyticsMetricName:
      type: string
      enum:
      - DIAGNOSTICS_EVENT_COUNT
      - DIAGNOSTICS_EVENT_COUNT_BY_TEAM_MEMBER
      - DIAGNOSTICS_EVENT_BUSY_COUNT_BY_TEAM_MEMBER
      - DIAGNOSTICS_MEETING_COUNT_BY_TEAM_MEMBER
      - TIME_WITH_PEOPLE_DURATION_BY_DATE_BY_PERSON
      - TIME_WITH_PEOPLE_DURATION_BY_PERSON
      - FOCUS_TIME_DURATION_BY_DATE_BY_TEAM_MEMBER
      - FREE_TIME_DURATION_BY_DATE_BY_TEAM_MEMBER
      - MEETING_TIME_DURATION_BY_DATE_BY_TEAM_MEMBER
      - TASK_TIME_DURATION_BY_DATE_BY_TEAM_MEMBER
      - HABIT_TIME_DURATION_BY_DATE_BY_TEAM_MEMBER
      - MEETING_TIME_PERCENTAGE_BY_DATE_BY_DURATION_RANGE
      - FOCUS_DURATION_BY_CATEGORY_BY_EVENT_NAME
      - SCHEDULING_LINK_EVENT_COUNT
      - RECLAIM_SCHEDULED_EVENT_COUNT
      - DURATION_BY_CATEGORY
      - RECLAIM_WORK_DURATION_BY_DATE_BY_ASSIGNMENT_TYPE
      - DURATION_BY_DATE_BY_CATEGORY
      - PERSONAL_HABIT_TIME_DURATION
      - VACATION_TIME_DURATION
      - OUTSIDE_WORK_TIME_DURATION
      - RECLAIMED_TIME_DURATION
      - DECOMPRESSION_TIME_DURATION
      - TRAVEL_TIME_DURATION
      - MEETING_TIME_DURATION_BY_DAY_OF_WEEK
      - FOCUS_TIME_DURATION_BY_DAY_OF_WEEK
      - WORK_HABITS_AND_TASKS_DURATION_BY_DATE_BY_NAME
      - PERSONAL_HABITS_AND_TASKS_DURATION_BY_DATE_BY_NAME
      - PERSONAL_TIME_DURATION
      - LARGE_MEETINGS_COUNT
      - MEETINGS_DECLINED_COUNT
      - MEETING_CALLOUT_GROUP
      - WORK_LIFE_CALLOUT_GROUP
      - ROI_CALLOUT_GROUP
      - CALENDAR_SYNC_COUNT
      - CALENDAR_SYNC_TIME_DURATION
      - COUNT_BY_CATEGORY
      - COUNT_BY_ASSIGNMENT_TYPE
    AnalyticsPercentageByDurationRangeByDateMetric:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractMetric_6"
      - $ref: "#/components/schemas/AbstractMetric"
      - properties:
          bucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          subBucket:
            $ref: "#/components/schemas/AnalyticsBucket"
          values:
            type: array
            items:
              $ref: "#/components/schemas/AnalyticsGroup_Float.LocalDate.Integer_"
    AnalyticsResult:
      required:
      - metric
      - name
      type: object
      properties:
        name:
          $ref: "#/components/schemas/AnalyticsMetricName"
        metric:
          $ref: "#/components/schemas/AbstractMetric"
    AnalyticsResultView:
      required:
      - result
      - status
      type: object
      properties:
        status:
          $ref: "#/components/schemas/AnalyticsResultsProcessingStatus"
        result:
          $ref: "#/components/schemas/AnalyticsResults"
    AnalyticsResults:
      required:
      - appendix
      - metrics
      type: object
      properties:
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/AnalyticsResult"
        appendix:
          $ref: "#/components/schemas/Appendix"
    AnalyticsResultsProcessingStatus:
      type: string
      enum:
      - PENDING
      - COMPLETED
      - ERROR
    AnalyticsRow_AnalyticsCategory.Long_:
      required:
      - key
      - value
      type: object
      properties:
        key:
          $ref: "#/components/schemas/AnalyticsCategory"
        value:
          type: integer
          format: int64
    AnalyticsRow_DayOfWeek.Long_:
      required:
      - key
      - value
      type: object
      properties:
        key:
          $ref: "#/components/schemas/DayOfWeek"
        value:
          type: integer
          format: int64
    AnalyticsRow_Integer.Float_:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: integer
          format: int32
        value:
          type: number
          format: float
    AnalyticsRow_LocalDate.Long_:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
          format: date
        value:
          type: integer
          format: int64
    AnalyticsRow_String.Long_:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
        value:
          type: integer
          format: int64
    AnalyticsService.RichContact:
      type: object
      allOf:
      - $ref: "#/components/schemas/ThinPerson"
      - properties:
          reclaimUser:
            type: boolean
          userId:
            type: string
            nullable: true
          firstName:
            type: string
            nullable: true
          lastName:
            type: string
            nullable: true
    AnalyticsSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    AnalyticsType:
      type: string
      enum:
      - integerValue
      - countByString
      - countByCategory
      - durationSummary
      - durationByDateByCategory
      - durationByCategory
      - countByReclaimEventType
      - durationByDate
      - durationByString
      - durationByDayOfWeek
      - durationByDateByString
      - durationByRangeByDate
      - durationByCategoryByString
      - calloutGroup
      x-enum-varnames:
      - integerValue
      - countByString
      - countByCategory
      - durationSummary
      - durationByDateByCategory
      - durationByCategory
      - countByReclaimEventType
      - durationByDate
      - durationByString
      - durationByDayOfWeek
      - durationByDateByString
      - durationByRangeByDate
      - durationByCategoryByString
      - calloutGroup
    AnalyticsUnit:
      type: string
      enum:
      - COUNT
      - DURATION_MINUTES
      - PERCENTAGE
    AndEventMatcher:
      required:
      - left
      - right
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractEventMatcher"
      - properties:
          left:
            $ref: "#/components/schemas/EventMatcher"
          right:
            $ref: "#/components/schemas/EventMatcher"
    AnonymousFlags:
      required:
      - outlookSignupEnabled
      type: object
      properties:
        outlookSignupEnabled:
          type: boolean
    AnonymousPartner:
      required:
      - link
      type: object
      properties:
        link:
          type: string
    AnyEventMatcher:
      required:
      - matchers
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractEventMatcher"
      - properties:
          matchers:
            type: array
            items:
              $ref: "#/components/schemas/EventMatcher"
    AnyTextEventMatcher:
      required:
      - predicateValue
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractEventMatcher"
      - properties:
          predicateValue:
            type: string
    ApiKey:
      required:
      - createdAt
      - description
      - id
      - updatedAt
      type: object
      properties:
        id:
          type: string
        description:
          minLength: 1
          type: string
        lifetimeMs:
          type: integer
          format: int64
          nullable: true
        token:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ApiResourceView:
      required:
      - httpMethods
      - uri
      type: object
      properties:
        uri:
          type: string
        httpMethods:
          type: array
          items:
            type: string
    AppNotificationsSettings:
      type: object
      properties:
        enabled:
          type: boolean
        unscheduledPriority:
          type: boolean
        audioAlertEnabled:
          type: boolean
        titleTagAlertEnabled:
          type: boolean
    Appendix:
      required:
      - teamSize
      type: object
      properties:
        people:
          $ref: "#/components/schemas/RichAppendixEntry"
        teamSize:
          type: integer
          format: int32
    ApplyScheduleActionsRequest:
      required:
      - actionsTaken
      type: object
      properties:
        actionsTaken:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleActionView"
    ApplyScheduleActionsResponse:
      required:
      - results
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleActionResultWithMessageView"
    AsanaAttachedResource:
      type: object
      properties:
        error:
          type: string
          nullable: true
        resource_name:
          type: string
          nullable: true
        resource_url:
          type: string
          format: uri
          nullable: true
        withError:
          type: string
          nullable: true
        withResource_name:
          type: string
          nullable: true
        withResource_url:
          type: string
          format: uri
          nullable: true
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AsanaFormFieldOption:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        sub_label:
          type: string
          nullable: true
        withId:
          type: string
        withLabel:
          type: string
        withSub_label:
          type: string
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AsanaFormFieldType:
      type: string
      enum:
      - single_line_text
      - rich_text
      - typeahead
      - checkboxes
      - radio_button
      - date
      - datetime
      - static_text
      - dropdown
      x-enum-varnames:
      - single_line_text
      - rich_text
      - typeahead
      - checkboxes
      - radio_button
      - date
      - datetime
      - static_text
      - dropdown
    AsanaFormMetadata:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/AsanaSyncForm"
        template:
          type: string
        withMetadata:
          $ref: "#/components/schemas/AsanaSyncForm"
        withTemplate:
          type: string
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AsanaIntegration:
      type: object
      properties:
        workspace:
          type: string
        availableProjects:
          $ref: "#/components/schemas/ImmutableList_AsanaProject_"
        titleTemplateOptions:
          $ref: "#/components/schemas/ImmutableList_AsanaIntegrationTitleOptions_"
        titleOption:
          $ref: "#/components/schemas/AsanaTitleTemplate"
        withWorkspace:
          type: string
        withAvailableProjects:
          type: array
          items:
            $ref: "#/components/schemas/AsanaProject"
        withTitleTemplateOptions:
          type: array
          items:
            $ref: "#/components/schemas/AsanaIntegrationTitleOptions"
        withTitleOption:
          $ref: "#/components/schemas/AsanaTitleTemplate"
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AsanaIntegrationPatch:
      type: object
      properties:
        titleOption:
          $ref: "#/components/schemas/AsanaTitleTemplate"
        withTitleOption:
          $ref: "#/components/schemas/AsanaTitleTemplate"
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AsanaIntegrationTitleOptions:
      type: object
      properties:
        value:
          $ref: "#/components/schemas/AsanaTitleTemplate"
        template:
          type: string
        example:
          type: string
        withValue:
          $ref: "#/components/schemas/AsanaTitleTemplate"
        withTemplate:
          type: string
        withExample:
          type: string
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AsanaProject:
      type: object
      properties:
        gid:
          type: string
        resource_type:
          $ref: "#/components/schemas/ResourceType"
        name:
          type: string
        workspace:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/AsanaWorkspace"
        withGid:
          type: string
        withResource_type:
          $ref: "#/components/schemas/ResourceType"
        withName:
          type: string
        withWorkspace:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/AsanaWorkspace"
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AsanaSettings:
      type: object
      properties:
        enabled:
          type: boolean
    AsanaSyncForm:
      type: object
      properties:
        title:
          type: string
        on_submit_callback:
          type: string
          format: uri
        on_change_callback:
          type: string
          format: uri
        submit_button_text:
          type: string
        fields:
          $ref: "#/components/schemas/ImmutableList_AsanaSyncFormField_"
        withTitle:
          type: string
        withOn_submit_callback:
          type: string
          format: uri
        withOn_change_callback:
          type: string
          format: uri
        withSubmit_button_text:
          type: string
        withFields:
          type: array
          items:
            $ref: "#/components/schemas/AsanaSyncFormField"
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AsanaSyncFormField:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/AsanaFormFieldType"
        id:
          type: string
        name:
          type: string
        value:
          type: string
          nullable: true
        placeholder:
          type: string
          nullable: true
        width:
          type: string
          nullable: true
        error:
          type: string
          nullable: true
        options:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ImmutableList_AsanaFormFieldOption_"
        is_watched:
          type: boolean
        is_required:
          type: boolean
        withType:
          $ref: "#/components/schemas/AsanaFormFieldType"
        withId:
          type: string
        withName:
          type: string
        withValue:
          type: string
        withPlaceholder:
          type: string
        withWidth:
          type: string
        withError:
          type: string
        withOptions:
          type: array
          items:
            $ref: "#/components/schemas/AsanaFormFieldOption"
        withIs_watched:
          type: boolean
        withIs_required:
          type: boolean
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AsanaSyncFormSubmission:
      type: object
      properties:
        data:
          type: string
        withData:
          type: string
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AsanaTitleTemplate:
      type: string
      enum:
      - TITLE
      - TITLE_THEN_PROJECT_IF_ANY
      - TITLE_THEN_PROJECT_IF_ANY_THEN_WORKSPACE
      - PROJECT_IF_SINGLE_OR_WORKSPACE_WHEN_MULTIPLE_PROJECTS_THEN_TITLE
      - WORKSPACE_THEN_PROJECT_IF_SINGLE_THEN_TITLE
    AsanaWidget:
      type: object
      properties:
        title:
          type: string
        error:
          type: string
          nullable: true
        fields:
          $ref: "#/components/schemas/ImmutableList_AsanaWidgetField_"
        subtitle:
          type: string
          nullable: true
        subicon_url:
          type: string
          format: uri
          nullable: true
        num_comments:
          type: integer
          format: int32
          nullable: true
        footer:
          $ref: "#/components/schemas/AsanaWidgetFooter"
        withTitle:
          type: string
        withError:
          type: string
        withFields:
          type: array
          items:
            $ref: "#/components/schemas/AsanaWidgetField"
        withSubtitle:
          type: string
        withSubicon_url:
          type: string
          format: uri
        withNum_comments:
          type: integer
          format: int32
        withFooter:
          $ref: "#/components/schemas/AsanaWidgetFooter"
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AsanaWidgetField:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: "#/components/schemas/AsanaWidgetFieldType"
        datetime:
          type: string
          format: date-time
          nullable: true
        icon_url:
          type: string
          format: uri
          nullable: true
        color:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/AsanaWidgetPillColor"
        text:
          type: string
          nullable: true
        withName:
          type: string
        withType:
          $ref: "#/components/schemas/AsanaWidgetFieldType"
        withDatetime:
          type: string
          format: date-time
        withIcon_url:
          type: string
          format: uri
        withColor:
          $ref: "#/components/schemas/AsanaWidgetPillColor"
        withText:
          type: string
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AsanaWidgetFieldType:
      type: string
      enum:
      - datetime_with_icon
      - pill
      - text_with_icon
      x-enum-varnames:
      - datetime_with_icon
      - pill
      - text_with_icon
    AsanaWidgetFooter:
      type: object
      properties:
        footer_type:
          type: string
        created_at:
          type: string
          format: date-time
          nullable: true
        last_updated_at:
          type: string
          format: date-time
          nullable: true
        text:
          type: string
          nullable: true
        withFooter_type:
          type: string
        withCreated_at:
          type: string
          format: date-time
        withLast_updated_at:
          type: string
          format: date-time
        withText:
          type: string
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AsanaWidgetMetadata:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/AsanaWidget"
        template:
          type: string
        withMetadata:
          $ref: "#/components/schemas/AsanaWidget"
        withTemplate:
          type: string
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AsanaWidgetPillColor:
      type: string
      enum:
      - none
      - red
      - orange
      - yellow_orange
      - yellow
      - yellow_green
      - green
      - blue_green
      - aqua
      - blue
      - indigo
      - purple
      - magenta
      - hot_pink
      - pink
      - cool_gray
      x-enum-varnames:
      - none
      - red
      - orange
      - yellow_orange
      - yellow
      - yellow_green
      - green
      - blue_green
      - aqua
      - blue
      - indigo
      - purple
      - magenta
      - hot_pink
      - pink
      - cool_gray
    AsanaWorkspace:
      type: object
      properties:
        gid:
          type: string
        resource_type:
          $ref: "#/components/schemas/ResourceType"
        name:
          type: string
        withGid:
          type: string
        withResource_type:
          $ref: "#/components/schemas/ResourceType"
        withName:
          type: string
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    AssistCompleted:
      required:
      - endTime
      - notificationKeys
      - startTime
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        notificationKeys:
          type: array
          items:
            type: string
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
      description: Notification for websocket clients.
    AssistCompletedSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    AssistController.AvailabilityDiagnostics:
      required:
      - seriesId
      - smartMeetingAvailabilityDiagnostics
      - snapshotTimestamp
      type: object
      properties:
        snapshotTimestamp:
          type: string
          format: date-time
        seriesId:
          type: integer
          format: int64
        smartMeetingAvailabilityDiagnostics:
          type: array
          items:
            $ref: "#/components/schemas/AssistController.SmartMeetingAvailabilityDiagnostics"
    AssistController.SmartMeetingAvailabilityDiagnostics:
      required:
      - now
      - seriesEvent
      - sharedAvailability
      - sharedAvailabilityShadowAllBusy
      - soloAvailability
      - today
      type: object
      properties:
        seriesEvent:
          $ref: "#/components/schemas/Event"
        soloAvailability:
          $ref: "#/components/schemas/AvailabilityV8"
        sharedAvailability:
          $ref: "#/components/schemas/AvailabilityV8"
        sharedAvailabilityShadowAllBusy:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/AssistSmartSeries.SmartSeriesSchedulerFactory.SmartPeriodBusyEventPart"
        now:
          type: string
          format: date-time
        today:
          type: string
          format: date
    AssistDetails:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/AssistType"
        customHabit:
          type: boolean
        smartSeries:
          type: boolean
        focus:
          type: boolean
        habitOrTask:
          type: boolean
        task:
          type: boolean
        conferenceBuffer:
          type: boolean
        travelBuffer:
          type: boolean
        status:
          $ref: "#/components/schemas/AssistStatus"
        travelNewEventId:
          type: string
          description: The source event id for a travel assist event.
          nullable: true
        conferenceEventId:
          type: string
          description: The source event id for a conference (decompression time) event.
          nullable: true
        lastControlledUpdate:
          type: string
          format: date-time
        lastControlledHash:
          type: integer
          format: int32
        defended:
          type: boolean
        pinned:
          type: boolean
        lockState:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/LockState"
        dailyHabitId:
          type: integer
          format: int64
          nullable: true
        seriesLineageId:
          type: integer
          format: int64
          nullable: true
        seriesId:
          type: integer
          format: int64
          nullable: true
        taskId:
          type: integer
          format: int64
          nullable: true
        taskIndex:
          type: integer
          format: int32
          nullable: true
        policyOverride:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/AssistPolicyOverride"
        lastManualAdjustment:
          type: string
          format: date-time
        recurringAssignmentType:
          $ref: "#/components/schemas/RecurringAssignmentType"
        eventType:
          $ref: "#/components/schemas/ReclaimEventType"
        manuallyStarted:
          type: boolean
        focusId:
          type: integer
          format: int64
          nullable: true
        assistReferenceValid:
          type: boolean
      description: This entity maps to the assist_events table.
    AssistNotificationSettings:
      required:
      - detectedDigest
      - instanceChanges
      - instanceWindowInDays
      - needsAttentionDigest
      type: object
      properties:
        instanceChanges:
          type: boolean
        instanceWindowInDays:
          type: integer
          format: int32
        needsAttentionDigest:
          type: boolean
        detectedDigest:
          type: boolean
    AssistPlanned:
      required:
      - endTime
      - notificationKeys
      - startTime
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        notificationKeys:
          type: array
          items:
            type: string
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
    AssistPlannedSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
          startTime:
            type: string
            format: date-time
          endTime:
            type: string
            format: date-time
    AssistPolicyOverride:
      required:
      - durationMax
      - durationMin
      - forceDefend
      - idealTime
      - windowEnd
      - windowStart
      type: object
      properties:
        windowStart:
          type: string
          format: partial-time
        idealTime:
          type: string
          format: partial-time
        windowEnd:
          type: string
          format: partial-time
        durationMin:
          type: integer
          format: int32
        durationMax:
          type: integer
          format: int32
        forceDefend:
          type: boolean
    AssistSettings:
      type: object
      properties:
        travel:
          type: boolean
        otherTravelDuration:
          type: integer
          format: int32
        conferenceBuffer:
          type: boolean
        conferenceBufferDuration:
          type: integer
          format: int32
        assignmentPaddingDuration:
          type: integer
          format: int32
        conferenceBufferPrivate:
          type: boolean
        conferenceBufferType:
          $ref: "#/components/schemas/ConferenceBufferType"
        customConferenceBufferTitle:
          type: string
        focus:
          type: boolean
        allOneOnOnesBusy:
          type: boolean
        autoLockForMeetings:
          $ref: "#/components/schemas/AutoLock"
        autoLockForNonMeetings:
          $ref: "#/components/schemas/AutoLock"
        sendMeetingNotifications:
          type: boolean
        useFreeBusyEmojis:
          type: boolean
        useLockEmoji:
          type: boolean
        includeDescription:
          type: boolean
        includeAttribution:
          type: boolean
        smartSeries:
          type: boolean
        smartMeetingRecurrenceType:
          $ref: "#/components/schemas/SmartSeriesRecurrenceType"
        smartHabitRecurrenceType:
          $ref: "#/components/schemas/SmartSeriesRecurrenceType"
        showClassicHabits:
          type: boolean
        allowSmartSeriesOptIn:
          type: boolean
        smartSeriesMigrateComplete:
          type: boolean
        neverSeenClassicHabits:
          type: boolean
        notificationSettings:
          $ref: "#/components/schemas/AssistNotificationSettings"
        assistDays:
          type: integer
          format: int32
        bypassed:
          type: boolean
        dayZero:
          type: string
          format: date
        schedulerDisabled:
          type: boolean
        rescheduleUnstarted:
          type: boolean
        rescheduleUnstartedOkToSchedule:
          type: boolean
        dampSmartMeetings:
          type: boolean
        scheduleSmartMeetingsAtMostDaily:
          type: boolean
        scheduleSmartMeetingsOnce:
          type: boolean
        manualAssistRunsEnabled:
          type: boolean
        schedulerWindowWeeks:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SchedulingWindowWeeksOverride"
        extendedSmartMeetingCooldown:
          type: boolean
        includeOrganizerInSmartSeries:
          type: boolean
          deprecated: true
        debugScheduler:
          type: boolean
        smartHabitGen2ToGen3MigrationDate:
          type: string
          format: date-time
        smartMeetingGen2ToGen3MigrationDate:
          type: string
          format: date-time
        gen1HabitsAndMeetingsToGen3AutoMigrate:
          type: boolean
        smartHabitsToGen3AutoMigrate:
          type: boolean
        smartMeetingsToGen3AutoMigrate:
          type: boolean
    AssistSmartSeries.SmartSeriesSchedulerFactory.SmartPeriodBusyEventPart:
      required:
      - slot
      type: object
      properties:
        slot:
          $ref: "#/components/schemas/TentativeSlot"
    AssistStatus:
      type: string
      enum:
      - CONTROLLED
      - RELEASED
      - ARCHIVED
    AssistType:
      type: string
      enum:
      - TASK
      - CUSTOM_DAILY
      - CATCHUP_AM
      - CATCHUP_PM
      - LUNCH
      - FOCUS
      - TRAVEL_PRE
      - TRAVEL_POST
      - CONBUF
      - SMART_HABIT
      - SMART_MEETING
      - RECLAIM_FOCUS
    AssistantChange:
      type: object
    AssistantInteractionRequest:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    AssistantInteractionResponse:
      required:
      - notificationKey
      type: object
      properties:
        notificationKey:
          type: string
    AssistantInteractionResult:
      required:
      - changes
      - errors
      - finished
      - functionsExecuting
      - messages
      - prompts
      - views
      type: object
      properties:
        messages:
          type: array
          items:
            type: string
        functionsExecuting:
          type: array
          items:
            type: string
        changes:
          type: array
          items:
            $ref: "#/components/schemas/AssistantChange"
        views:
          type: array
          items:
            $ref: "#/components/schemas/AssistantView"
        prompts:
          type: array
          items:
            $ref: "#/components/schemas/AssistantPrompt"
        errors:
          type: array
          items:
            type: string
        finished:
          type: boolean
    AssistantInteractionSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          messages:
            type: array
            items:
              $ref: "#/components/schemas/AssistantInteractionResult"
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    AssistantPrompt:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/AssistantPromptType"
    AssistantPromptType:
      type: string
      enum:
      - SCHEDULING_OPTIONS
    AssistantThreadView:
      required:
      - assistantId
      - created
      - deleted
      - threadId
      - updated
      - userId
      type: object
      properties:
        threadId:
          type: string
        assistantId:
          type: string
        userId:
          type: string
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        deleted:
          type: string
          format: date-time
    AssistantView:
      type: object
    AttendanceType:
      type: string
      enum:
      - NONE
      - REQUIRED
      - OPTIONAL
      - ANY_OF
      - ROUND_ROBIN
    AttendeeCalendarVisibility:
      type: string
      enum:
      - NONE
      - FREE_BUSY
      - DETAILS
      - FULL
      - RECLAIM
    AttendeeResolutionView:
      required:
      - matchedEmails
      - participant
      - timeSchemes
      - timezone
      - visibility
      type: object
      properties:
        participant:
          $ref: "#/components/schemas/ThinPerson"
        timezone:
          type: string
          nullable: true
        visibility:
          $ref: "#/components/schemas/AttendeeCalendarVisibility"
        matchedEmails:
          type: array
          items:
            type: string
        timeSchemes:
          type: array
          items:
            $ref: "#/components/schemas/BasicTimeSchemeView"
    AttendeeTimePolicyView:
      required:
      - eligibility
      - timePolicy
      - timePolicyInViewerTimezone
      - timezone
      - usesDefaultTimePolicy
      type: object
      properties:
        timezone:
          type: string
        timePolicy:
          $ref: "#/components/schemas/TimePolicy"
        timePolicyInViewerTimezone:
          $ref: "#/components/schemas/TimePolicy"
        usesDefaultTimePolicy:
          type: boolean
        eligibility:
          $ref: "#/components/schemas/OneOnOneInviteeEligibility"
    AuthProvider:
      type: string
      enum:
      - google
      - microsoft
      - test
      - mock_provider
      x-enum-varnames:
      - google
      - microsoft
      - test
      - mock_provider
    AuthorizedDelegatedAccessView:
      required:
      - authorized
      - availableApis
      type: object
      properties:
        authorized:
          type: array
          items:
            $ref: "#/components/schemas/DelegatedAccessView"
        availableApis:
          type: array
          items:
            $ref: "#/components/schemas/ApiResourceView"
    AutoLock:
      type: string
      enum:
      - "OFF"
      - SAME_DAY
      - SAME_WEEK
      - TOMORROW
      - ROLLING_3_DAYS
    AvailabilityType:
      type: string
      enum:
      - BUSY
      - FREE
    AvailabilityV8:
      required:
      - assistedEvents
      - now
      - timezone
      - user
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        now:
          type: string
          format: date-time
        timezone:
          type: string
        assistedEvents:
          type: array
          items:
            $ref: "#/components/schemas/Event"
    AvoidConflictingEventsPolicyView:
      required:
      - id
      - timeScheme
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SchedulePolicyIdView"
        timeScheme:
          $ref: "#/components/schemas/BasicTimeSchemeView"
    BalloonFillRequest:
      required:
      - targetChunksPerWeek
      - type
      type: object
      properties:
        targetChunksPerWeek:
          type: integer
          format: int32
        idealChunksPerDay:
          type: integer
          format: int32
          nullable: true
        maxChunksPerDay:
          type: integer
          format: int32
          nullable: true
        minDurationChunks:
          type: integer
          format: int32
          nullable: true
        maxDurationChunks:
          type: integer
          format: int32
          nullable: true
        type:
          $ref: "#/components/schemas/FocusTimeBalloonFillType"
    BalloonFillView:
      required:
      - targetChunksPerWeek
      - type
      type: object
      properties:
        targetChunksPerWeek:
          type: integer
          format: int32
        idealChunksPerDay:
          type: integer
          format: int32
          nullable: true
        maxChunksPerDay:
          type: integer
          format: int32
          nullable: true
        minDurationChunks:
          type: integer
          format: int32
          nullable: true
        maxDurationChunks:
          type: integer
          format: int32
          nullable: true
        type:
          $ref: "#/components/schemas/FocusTimeBalloonFillType"
    BasicTimeSchemeView:
      required:
      - features
      - id
      - policy
      - policyType
      - title
      - userId
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        policyType:
          $ref: "#/components/schemas/TimePolicyType"
        policy:
          $ref: "#/components/schemas/TimePolicy"
        title:
          type: string
        features:
          type: array
          items:
            $ref: "#/components/schemas/ReclaimEventType"
    BillingSettings:
      type: object
      properties:
        enabled:
          type: boolean
    BogusRequest:
      required:
      - assistCompleted
      - assistPlanned
      - envelope
      type: object
      properties:
        envelope:
          $ref: "#/components/schemas/WebSocketResponseEnvelope"
        assistCompleted:
          $ref: "#/components/schemas/AssistCompleted"
        assistPlanned:
          $ref: "#/components/schemas/AssistPlanned"
    BookMeetingRequest:
      required:
      - emails
      - end
      - priority
      - start
      - title
      type: object
      properties:
        emails:
          type: array
          items:
            type: string
        title:
          type: string
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    BrandingMode:
      type: string
      enum:
      - RECLAIM
      - NONE
      - CUSTOM
    BufferEventPolicyView:
      required:
      - bufferEventType
      - calendarId
      - id
      - idealDuration
      - minDuration
      - timeScheme
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SchedulePolicyIdView"
        calendarId:
          type: integer
          format: int64
        timeScheme:
          $ref: "#/components/schemas/BasicTimeSchemeView"
        bufferEventType:
          $ref: "#/components/schemas/BufferEventType"
        idealDuration:
          type: string
        minDuration:
          type: string
    BufferEventType:
      type: string
      enum:
      - BEFORE
      - AFTER
    BuildingView:
      required:
      - buildingId
      - description
      - id
      - name
      - userId
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        buildingId:
          type: string
        name:
          type: string
        description:
          type: string
    Calendar:
      required:
      - syncSettings
      type: object
      properties:
        valid:
          type: boolean
        primaryCalendarForAccount:
          type: boolean
        id:
          type: integer
          format: int64
        name:
          type: string
        colorHex:
          type: string
        user:
          $ref: "#/components/schemas/User"
        userId:
          type: string
        calendarId:
          type: string
        externalCalendarId:
          $ref: "#/components/schemas/ExternalCalendarId"
        credentialEmail:
          $ref: "#/components/schemas/CredentialName"
        credentialProvider:
          $ref: "#/components/schemas/AuthProvider"
        credentialId:
          type: integer
          format: int64
        syncToken:
          type: string
        watchGuid:
          type: string
        watchResourceId:
          type: string
        data:
          type: object
          additionalProperties: true
        eventTypeSupport:
          $ref: "#/components/schemas/EventTypeSupport"
        accessDomainRead:
          type: boolean
        authorized:
          type: boolean
        created:
          type: string
          format: date-time
        deleted:
          type: string
          format: date-time
        type:
          $ref: "#/components/schemas/Calendar.Type"
        accessRole:
          $ref: "#/components/schemas/GCalConstants.AccessRole"
        systemCalendar:
          type: boolean
        nextRefresh:
          type: string
          format: date-time
        timezone:
          type: string
        primaryCalendarId:
          type: string
        priority:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int64
        connected:
          type: boolean
        syncSettings:
          $ref: "#/components/schemas/SyncSettings"
        lastSynced:
          type: string
          format: date-time
        syncIdEncodingVersion:
          type: integer
          format: int32
        useType:
          $ref: "#/components/schemas/CalendarUseType"
        blockAvailability:
          type: boolean
        directlyConnected:
          type: boolean
        primary:
          type: boolean
        defaultReminders:
          type: array
          items:
            type: integer
            format: int32
    Calendar.Type:
      type: string
      enum:
      - PRIMARY
      - SHADOW
      - PERSONAL
      - PRIORITY
      - PROJECT
    CalendarAccess:
      type: string
      enum:
      - NONE
      - SETTINGS_ONLY
      - READ
      - WRITE
      - SUPER
    CalendarConsistencyService.ResyncMode:
      type: string
      enum:
      - NONE
      - RESYNC_ON_ANY_MISMATCH
      - RESYNC_ON_NON_RECURRING_MISMATCH
      - RESYNC_ON_ANY_MISMATCH_EXCEPT_NON_RECLAIM_RECURRING
    CalendarEntryAssistantViewRecurrence:
      required:
      - definition
      - timezone
      type: object
      properties:
        definition:
          $ref: "#/components/schemas/Rfc2445Definition"
        timezone:
          type: string
    CalendarEntryColor:
      required:
      - defaultCalendarColor
      - google
      - hex
      type: object
      properties:
        hex:
          type: string
        defaultCalendarColor:
          type: boolean
        google:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/EventColor"
    CalendarEntryDateTime:
      required:
      - date
      - dateTime
      - timezone
      type: object
      properties:
        date:
          type: string
          format: date
        dateTime:
          type: string
          format: date-time
        timezone:
          type: string
    CalendarEntryRecurringInstance:
      required:
      - originalStart
      - source
      type: object
      properties:
        source:
          $ref: "#/components/schemas/EventKey"
        originalStart:
          $ref: "#/components/schemas/CalendarEntryDateTime"
    CalendarEntrySettings:
      type: object
      properties:
        pipelineEnabled:
          type: boolean
        pipelineWatchEnabled:
          type: boolean
        autoMigrate:
          type: boolean
        shouldMigrate:
          type: boolean
        selfServiceMigrate:
          type: boolean
        dailyAudit:
          type: boolean
        microsoftPipelineBatching:
          type: boolean
        checkCalendarSyncDuplicates:
          type: boolean
        finiteSingleInstanceSync:
          type: boolean
    CalendarEntryView:
      required:
      - attendees
      - category
      - color
      - conferenceDetails
      - end
      - eventDescription
      - free
      - key
      - locked
      - priority
      - reclaimEventType
      - rsvpStatus
      - start
      - status
      - title
      - version
      type: object
      properties:
        key:
          $ref: "#/components/schemas/EventKey"
        status:
          $ref: "#/components/schemas/EventStatus"
        start:
          $ref: "#/components/schemas/CalendarEntryDateTime"
        end:
          $ref: "#/components/schemas/CalendarEntryDateTime"
        title:
          type: string
        eventDescription:
          $ref: "#/components/schemas/EventDescription"
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        color:
          $ref: "#/components/schemas/CalendarEntryColor"
        conferenceDetails:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ConferenceDetails"
        rsvpStatus:
          $ref: "#/components/schemas/EventResponseStatus"
        attendees:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/EventResponseStatus"
        free:
          type: boolean
        recurrence:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/CalendarEntryAssistantViewRecurrence"
        recurringInstance:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/CalendarEntryRecurringInstance"
        reclaimEventType:
          $ref: "#/components/schemas/ReclaimEventType"
        category:
          $ref: "#/components/schemas/EventCategory"
        locked:
          type: boolean
        version:
          type: string
    CalendarRequest:
      required:
      - calendar
      type: object
      properties:
        calendar:
          $ref: "#/components/schemas/Calendar"
    CalendarSettings:
      type: object
      properties:
        enabled:
          type: boolean
        calendarCleanupRunning:
          type: string
          format: date-time
    CalendarSync:
      required:
      - allDayEvents
      - color
      - defaultType
      - enabled
      - source
      - target
      - transparency
      - type
      - workingHours
      type: object
      properties:
        source:
          $ref: "#/components/schemas/CalendarView"
        target:
          $ref: "#/components/schemas/CalendarView"
        enabled:
          type: boolean
        transparency:
          $ref: "#/components/schemas/SyncTransparency"
        workingHours:
          type: boolean
        defaultType:
          $ref: "#/components/schemas/EventType"
        type:
          $ref: "#/components/schemas/SyncCalendarType"
        color:
          $ref: "#/components/schemas/EventColor"
        allDayEvents:
          $ref: "#/components/schemas/SyncAllDayEvents"
    CalendarSyncPolicy:
      type: object
      allOf:
      - $ref: "#/components/schemas/SyncSettings"
      - properties:
          sourceCalendarId:
            type: integer
            format: int64
          compositeId:
            type: string
          targetCalendarId:
            type: integer
            format: int64
          enabled:
            type: boolean
          lastSyncToken:
            type: string
          autoDisabledReason:
            $ref: "#/components/schemas/DisabledReason"
          usePipeline:
            type: boolean
    CalendarSyncPolicyRequest:
      required:
      - calendarSyncPolicy
      type: object
      properties:
        calendarSyncPolicy:
          $ref: "#/components/schemas/CalendarSyncPolicy"
    CalendarSyncPolicyWithCalendars:
      required:
      - sourceCalendar
      - targetCalendar
      type: object
      allOf:
      - $ref: "#/components/schemas/CalendarSyncPolicy"
      - $ref: "#/components/schemas/SyncSettings"
      - properties:
          sourceCalendar:
            $ref: "#/components/schemas/Calendar"
          targetCalendar:
            $ref: "#/components/schemas/Calendar"
    CalendarUseType:
      type: string
      enum:
      - UNKNOWN
      - MULTI_USE
      - WORK
      - PERSONAL
      - FAMILY
      - TEAM
      - VACATION
      - TRAVEL
    CalendarView:
      required:
      - colorHex
      - connected
      - credentialId
      - externalId
      - googleMeetAllowed
      - id
      - microsoftTeamsAllowed
      - name
      - provider
      - useType
      - writableFor
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
        connected:
          type: boolean
        colorHex:
          type: string
        credentialId:
          type: integer
          format: int64
        reason:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/IneligibilityReason"
        writableFor:
          type: array
          items:
            $ref: "#/components/schemas/ReclaimEventType"
        provider:
          type: string
        googleMeetAllowed:
          type: boolean
        microsoftTeamsAllowed:
          type: boolean
        defaultReminders:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        useType:
          $ref: "#/components/schemas/CalendarUseType"
    CalloutGroupMetric:
      required:
      - metrics
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractMetric"
      - properties:
          metrics:
            type: array
            items:
              $ref: "#/components/schemas/AnalyticsResult"
    CancelEventActionView:
      required:
      - event
      - policyId
      type: object
      properties:
        policyId:
          $ref: "#/components/schemas/SchedulePolicyIdView"
        event:
          $ref: "#/components/schemas/ScheduleActionEventView"
        type:
          type: string
    ChangeLogEntryMetadataView:
      type: object
    ChangeLogEntryView:
      required:
      - changedAt
      - id
      - reason
      - reclaimEventType
      type: object
      properties:
        id:
          type: integer
          format: int64
        changedAt:
          type: string
          format: date-time
        reclaimEventType:
          $ref: "#/components/schemas/ReclaimEventType"
        assignmentId:
          type: integer
          format: int64
          nullable: true
        assignmentSubId:
          type: integer
          format: int64
          nullable: true
        eventId:
          type: string
          nullable: true
        organizerId:
          type: string
          nullable: true
        actorId:
          type: string
          nullable: true
        reason:
          $ref: "#/components/schemas/ChangeLogReason"
        lockChangedMetadata:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ChangeLogEntryMetadataView"
        periodSkippedMetadata:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ChangeLogEntryMetadataView"
        eventMovedMetadata:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ChangeLogEntryMetadataView"
        periodSkippedDueToReservedWordMetadata:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ChangeLogEntryMetadataView"
    ChangeLogReason:
      type: string
      enum:
      - SMART_1_1_SKIPPED
      - SMART_1_1_ATTENDEE_DECLINED
      - SMART_1_1_CREATED
      - SMART_1_1_ATTENDEE_AUTO_ACCEPTED
      - SMART_1_1_DELETED
      - SMART_1_1_ATTENDEE_RESCHEDULED
      - SMART_1_1_PIN
      - SMART_1_1_UNPIN
      - HABIT_START_NOW
      - HABIT_RESTART_NOW
      - HABIT_MOVED
      - HABIT_RESCHEDULED
      - HABIT_ENABLED
      - HABIT_DISABLED
      - HABIT_DELETED
      - HABIT_SKIPPED
      - HABIT_STOPPED
      - HABIT_MARKED_DONE
      - HABIT_UNPIN
      - HABIT_PIN
      - HABIT_CREATED
      - HABIT_PRIORITY_CHANGED
      - HABIT_TIME_POLICY_CHANGED
      - SMART_HABIT_START
      - SMART_HABIT_STOP
      - SMART_HABIT_RESCHEDULE
      - SMART_HABIT_RESET_SCHEDULE
      - SMART_HABIT_SKIP
      - SMART_HABIT_PIN
      - SMART_HABIT_UNPIN
      - SMART_HABIT_MOVE
      - SMART_HABIT_MARK_DONE
      - SMART_HABIT_RECORD
      - SMART_HABIT_SKIPPED_DUE_TO_RESERVED_WORD
      - SMART_HABIT_DECLINE
      - SMART_MEETING_RESCHEDULE
      - SMART_MEETING_RESET_SCHEDULE
      - SMART_MEETING_SKIP
      - SMART_MEETING_PIN
      - SMART_MEETING_UNPIN
      - SMART_MEETING_MOVE
      - SMART_MEETING_MARK_DONE
      - SMART_MEETING_DECLINE
      - SMART_SERIES_EVENT_REMOVED_DUE_TO_FORCE_SKIP
      - SMART_SERIES_EVENT_REMOVED_DUE_TO_NO_TIME
      - SMART_SERIES_EVENT_MOVED
      - SMART_SERIES_EVENT_NO_TIME_ORIGINAL
      - SMART_SERIES_EVENT_NO_TIME_LAST
      - SMART_SERIES_EVENT_NO_TIME_PARTIAL_PERIOD_REMOVED
      - SMART_SERIES_EVENT_NO_TIME_PARTIAL_PERIOD_PUNTED
      - TASK_PIN
      - TASK_UNPIN
      - TASK_START_NOW
      - EVENT_AUTO_LOCK_CHANGED
      - SCHEDULING_LINK_CREATED
      - SCHEDULING_LINK_DELETED
      - FOCUS_EVENT_PIN
      - FOCUS_EVENT_UNPIN
      - FOCUS_EVENT_RESCHEDULE
      - EVENT_DELETED_VIA_CALENDAR_ASSIGNMENT_SKIPPED_FOR_PERIOD
      - EVENT_DELETED_VIA_CALENDAR_ASSIGNMENT_SKIPPED_FOR_DAY
    CircuitBreakerRequest:
      required:
      - availableChunksInDayThreshold
      - availableChunksInWeekThreshold
      - type
      type: object
      properties:
        availableChunksInWeekThreshold:
          type: integer
          format: int32
        availableChunksInDayThreshold:
          type: integer
          format: int32
        type:
          $ref: "#/components/schemas/FocusTimeCircuitBreakerType"
        minDurationChunks:
          type: integer
          format: int32
          nullable: true
    CircuitBreakerView:
      required:
      - availableChunksInDayThreshold
      - availableChunksInWeekThreshold
      - type
      type: object
      properties:
        availableChunksInWeekThreshold:
          type: integer
          format: int32
        availableChunksInDayThreshold:
          type: integer
          format: int32
        type:
          $ref: "#/components/schemas/FocusTimeCircuitBreakerType"
        minDurationChunks:
          type: integer
          format: int32
          nullable: true
    CleanRequest:
      required:
      - assistEvents
      - futureOnly
      type: object
      properties:
        futureOnly:
          type: boolean
        assistEvents:
          type: boolean
        sourceCalendarId:
          type: integer
          format: int64
          nullable: true
        sourceCalendarExternalId:
          type: string
          nullable: true
        syncEncodingVersion:
          type: integer
          format: int64
          nullable: true
    ClickUpIntegration:
      type: object
      properties:
        workspace:
          $ref: "#/components/schemas/ClickUpResource"
        available_spaces:
          $ref: "#/components/schemas/ImmutableSet_ClickUpSpace_"
        selected_space_ids:
          $ref: "#/components/schemas/ImmutableSet_String_"
        requires_tag:
          type: boolean
        withWorkspace:
          $ref: "#/components/schemas/ClickUpResource"
        withAvailable_spaces:
          type: array
          items:
            $ref: "#/components/schemas/ClickUpSpace"
        withSelected_space_ids:
          type: array
          items:
            type: string
        withRequires_tag:
          type: boolean
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    ClickUpIntegrationDetails:
      required:
      - availableSpaces
      - tags
      - titleFormat
      - workspace
      type: object
      properties:
        workspace:
          $ref: "#/components/schemas/ClickUpResource"
        availableSpaces:
          type: array
          items:
            $ref: "#/components/schemas/ClickUpSpaceWithEligibility"
        tags:
          type: array
          items:
            type: string
        lastSynced:
          type: string
          format: date-time
          nullable: true
        titleFormat:
          $ref: "#/components/schemas/ClickUpTitleFormat"
        bypassTimeTracking:
          type: boolean
          nullable: true
    ClickUpIntegrationPatch:
      type: object
      properties:
        titleFormat:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ClickUpTitleFormat"
        bypassTimeTracking:
          type: boolean
          nullable: true
        withTitleFormat:
          $ref: "#/components/schemas/ClickUpTitleFormat"
        withBypassTimeTracking:
          type: boolean
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    ClickUpResource:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        withId:
          type: string
        withName:
          type: string
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    ClickUpSpace:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        features:
          type: object
          additionalProperties: true
        statuses:
          $ref: "#/components/schemas/ImmutableList_ClickUpStatus_"
        withId:
          type: string
        withName:
          type: string
        withFeatures:
          type: object
          additionalProperties: true
        withStatuses:
          type: array
          items:
            $ref: "#/components/schemas/ClickUpStatus"
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    ClickUpSpaceWithEligibility:
      required:
      - features
      - id
      - isEligible
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isEligible:
          type: boolean
        features:
          type: object
          additionalProperties: true
    ClickUpStatus:
      type: object
      properties:
        status:
          type: string
        orderindex:
          type: integer
          format: int32
        type:
          $ref: "#/components/schemas/ClickUpStatusType"
        withStatus:
          type: string
        withOrderindex:
          type: integer
          format: int32
        withType:
          $ref: "#/components/schemas/ClickUpStatusType"
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    ClickUpStatusType:
      type: string
      enum:
      - open
      - done
      - closed
      - custom
      - unstarted
      - active
      x-enum-varnames:
      - open
      - done
      - closed
      - custom
      - unstarted
      - active
    ClickUpTitleFormat:
      type: string
      enum:
      - TASK_TITLE_ONLY
      - TASK_TITLE_THEN_LIST
      - TASK_TITLE_THEN_LIST_THEN_SPACE
      - TASK_TITLE_THEN_SPACE
      - SPACE_NAME_THEN_TASK_TITLE
    Collection_String_:
      type: object
      properties:
        empty:
          type: boolean
    Colorized:
      type: object
      properties:
        color:
          $ref: "#/components/schemas/EventColor"
    ColorsSettings:
      type: object
      properties:
        enabled:
          type: boolean
        categoriesEnabled:
          type: boolean
        lastModified:
          type: string
          format: date-time
        priorities:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/EventColor"
        categories:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/EventColor"
    CompleteQuestRequest:
      required:
      - isComplete
      - questType
      type: object
      properties:
        questType:
          $ref: "#/components/schemas/QuestType"
        isComplete:
          type: boolean
          nullable: true
    ConferenceBufferType:
      type: string
      enum:
      - ALL_MEETINGS
      - CONFERENCE_MEETINGS
    ConferenceDetails:
      required:
      - solution
      - source
      - status
      - url
      type: object
      properties:
        solution:
          $ref: "#/components/schemas/ConferenceSolution"
        url:
          type: string
          nullable: true
        status:
          $ref: "#/components/schemas/ConferenceStatus"
        source:
          $ref: "#/components/schemas/ConferenceSource"
    ConferenceSolution:
      type: string
      enum:
      - GOOGLE_MEET
      - MICROSOFT_TEAMS
      - ZOOM
      - WEBEX
      - RING_CENTRAL
      - POP
      - COSCREEN
      - BLUE_JEANS
      - JITSI
      - OTHER
      - UNKNOWN
    ConferenceSource:
      type: string
      enum:
      - NATIVE
      - PARSED
    ConferenceStatus:
      type: string
      enum:
      - PENDING
      - SUCCESS
      - FAILURE
      - UNKNOWN
    ConferenceType:
      type: string
      enum:
      - GOOGLE_MEET
      - MICROSOFT_TEAMS
      - ZOOM
      - CUSTOM
      - GENERIC_LOCATION
      - PHYSICAL_ADDRESS
      - PHONE_NUMBER
    ConflictType:
      type: string
      enum:
      - ORGANIZER_EVENT
      - ATTENDEE_EVENT
    ConnectedAccount:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        valid:
          type: boolean
        avatar:
          type: string
          format: uri
          nullable: true
        main:
          type: boolean
        primaryCalendarId:
          type: integer
          format: int64
          nullable: true
        canDelete:
          type: boolean
        type:
          $ref: "#/components/schemas/ConnectedAccountType"
        identityAccess:
          type: boolean
        calendarAccess:
          $ref: "#/components/schemas/CalendarAccess"
        taskAccess:
          type: boolean
        unique:
          type: boolean
        lastSynced:
          type: string
          format: date-time
          nullable: true
        switchToMainURI:
          type: string
          format: uri
          nullable: true
        canSwitchToMain:
          type: boolean
        noSwitchToMainReason:
          type: string
        existingPrimaryUserId:
          type: string
          nullable: true
        repairURI:
          type: string
          format: uri
          nullable: true
        connectedCalendars:
          $ref: "#/components/schemas/ImmutableSet_CalendarView_"
        numSyncedCalendars:
          type: integer
          format: int32
        userName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        scopes:
          type: string
        contactsAccess:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ContactsAccess"
        directoryAccess:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/DirectoryAccess"
        sharedCalendarsAccess:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SharedCalendarsAccess"
        canRecolorEvents:
          type: boolean
        noRecolorEventsReason:
          type: string
          nullable: true
        withId:
          type: integer
          format: int64
        withName:
          type: string
        withValid:
          type: boolean
        withAvatar:
          type: string
          format: uri
          nullable: true
        withMain:
          type: boolean
        withPrimaryCalendarId:
          type: integer
          format: int64
        withCanDelete:
          type: boolean
        withType:
          $ref: "#/components/schemas/ConnectedAccountType"
        withIdentityAccess:
          type: boolean
        withCalendarAccess:
          $ref: "#/components/schemas/CalendarAccess"
        withTaskAccess:
          type: boolean
        withUnique:
          type: boolean
        withLastSynced:
          type: string
          format: date-time
          nullable: true
        withSwitchToMainURI:
          type: string
          format: uri
          nullable: true
        withCanSwitchToMain:
          type: boolean
        withNoSwitchToMainReason:
          type: string
        withExistingPrimaryUserId:
          type: string
          nullable: true
        withRepairURI:
          type: string
          format: uri
          nullable: true
        withConnectedCalendars:
          type: array
          items:
            $ref: "#/components/schemas/CalendarView"
        withNumSyncedCalendars:
          type: integer
          format: int32
        withUserName:
          type: string
          nullable: true
        withFirstName:
          type: string
          nullable: true
        withLastName:
          type: string
          nullable: true
        withScopes:
          type: string
        withContactsAccess:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ContactsAccess"
        withDirectoryAccess:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/DirectoryAccess"
        withSharedCalendarsAccess:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SharedCalendarsAccess"
        withCanRecolorEvents:
          type: boolean
        withNoRecolorEventsReason:
          type: string
          nullable: true
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    ConnectedAccountPayload:
      required:
      - accountName
      type: object
      properties:
        accountName:
          type: string
    ConnectedAccountType:
      type: string
      enum:
      - GOOGLE
      - MICROSOFT
    ConnectedCalendarCreateRequest:
      required:
      - externalId
      - useType
      type: object
      properties:
        externalId:
          type: string
        useType:
          $ref: "#/components/schemas/CalendarUseType"
    ConnectedCalendarUpdateRequest:
      required:
      - useType
      type: object
      properties:
        useType:
          $ref: "#/components/schemas/CalendarUseType"
    ContactType:
      type: string
      enum:
      - DIRECTORY
      - ADDRESS_BOOK
      - OTHER_CONTACTS
      - TOP_CONTACT
    ContactView:
      required:
      - avatarUrl
      - contactType
      - email
      - firstName
      - hasPendingInvite
      - isTeamMember
      - isTopContact
      - lastName
      - name
      - userId
      type: object
      properties:
        email:
          type: string
        userId:
          type: string
          nullable: true
        name:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        contactType:
          $ref: "#/components/schemas/ContactType"
        isTopContact:
          type: boolean
        avatarUrl:
          type: string
          nullable: true
        isTeamMember:
          type: boolean
        hasPendingInvite:
          type: boolean
    ContactsAccess:
      required:
      - enabled
      - oauthURI
      type: object
      properties:
        enabled:
          type: boolean
        oauthURI:
          type: string
          format: uri
    CreateCalendarSyncRequest:
      required:
      - color
      - defaultType
      - sourceAccountId
      - sourceCalendarId
      - syncAllDayEvents
      - targetAccountId
      - targetCalendarId
      - transparency
      - type
      type: object
      properties:
        sourceAccountId:
          type: integer
          format: int64
        sourceCalendarId:
          type: string
        targetAccountId:
          type: integer
          format: int64
        targetCalendarId:
          type: string
        syncAllDayEvents:
          $ref: "#/components/schemas/SyncAllDayEvents"
        color:
          $ref: "#/components/schemas/EventColor"
        defaultType:
          $ref: "#/components/schemas/EventType"
        type:
          $ref: "#/components/schemas/SyncCalendarType"
        transparency:
          $ref: "#/components/schemas/SyncTransparency"
    CreateDelegateAccessRequest:
      required:
      - userIdToAuthorize
      type: object
      properties:
        userIdToAuthorize:
          minLength: 1
          type: string
    CreateHabitTemplateRequest:
      required:
      - templates
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: "#/components/schemas/SmartHabitTemplateKey"
    CreateSharedSmartHabitRequest:
      required:
      - sourceHabitLineageId
      type: object
      properties:
        sourceHabitLineageId:
          type: integer
          format: int64
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        background:
          type: string
          nullable: true
        inviteToTeam:
          type: boolean
          nullable: true
    CreateSmartHabitCustomTemplateRequest:
      required:
      - defenseAggression
      - durationMaxMins
      - durationMinMins
      - eventType
      - idealTime
      - priority
      - recurrence
      - timePolicyType
      - title
      type: object
      properties:
        title:
          minLength: 1
          type: string
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        eventType:
          $ref: "#/components/schemas/SmartSeriesEventType"
        color:
          $ref: "#/components/schemas/EventColor"
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        oneOffPolicy:
          $ref: "#/components/schemas/TimePolicy"
        recurrence:
          $ref: "#/components/schemas/RecurrenceDefinition"
        starting:
          type: string
          format: date
        ending:
          type: string
          format: date
        idealTime:
          type: string
          format: partial-time
        durationMinMins:
          type: integer
          format: int32
        durationMaxMins:
          type: integer
          format: int32
        defenseAggression:
          $ref: "#/components/schemas/DefenseAggression"
        defendedDescription:
          type: string
        visibility:
          $ref: "#/components/schemas/SmartSeriesVisibility"
        failurePolicy:
          $ref: "#/components/schemas/SmartSeriesBookingFailurePolicy"
        reservedWords:
          type: array
          items:
            type: string
        description:
          type: string
    CreateSmartHabitRequest:
      required:
      - defenseAggression
      - durationMinMins
      - enabled
      - eventType
      - idealTime
      - organizer
      - recurrence
      - title
      type: object
      properties:
        enabled:
          type: boolean
        type:
          $ref: "#/components/schemas/SmartSeriesType"
        attendees:
          type: array
          items:
            $ref: "#/components/schemas/SmartSeriesAttendeeRequest"
        resources:
          type: array
          items:
            $ref: "#/components/schemas/SmartSeriesResourceRequest"
        reservedWords:
          type: array
          items:
            type: string
        googleMeet:
          type: boolean
          deprecated: true
        conferenceType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ConferenceType"
        visibility:
          $ref: "#/components/schemas/SmartSeriesVisibility"
        calendarId:
          type: integer
          format: int64
        title:
          type: string
        recurrence:
          $ref: "#/components/schemas/RecurrenceDefinition"
        starting:
          type: string
          format: date
        ending:
          type: string
          format: date
        idealTime:
          type: string
          format: partial-time
        durationMinMins:
          type: integer
          format: int32
        durationMaxMins:
          type: integer
          format: int32
        description:
          type: string
        defendedDescription:
          type: string
        autoDecline:
          type: boolean
        autoDeclineText:
          type: string
        organizer:
          $ref: "#/components/schemas/SmartSeriesOrganizerRequest"
        eventType:
          $ref: "#/components/schemas/SmartSeriesEventType"
        color:
          $ref: "#/components/schemas/EventColor"
        defenseAggression:
          $ref: "#/components/schemas/DefenseAggression"
        location:
          type: string
        lastInstance:
          type: string
          format: date-time
        dependencyType:
          $ref: "#/components/schemas/SmartSeriesDependencyType"
        dependencyRef:
          type: integer
          format: int64
        migrationRef:
          type: integer
          format: int64
        originalEventId:
          type: string
        failurePolicy:
          $ref: "#/components/schemas/SmartSeriesBookingFailurePolicy"
        minLeadTimeMins:
          type: integer
          format: int64
        fixedTimePolicy:
          type: boolean
        rescheduleUnstartedOverride:
          type: boolean
          nullable: true
        recurrenceType:
          $ref: "#/components/schemas/SmartSeriesRecurrenceType"
        reminders:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        guestsCanModify:
          type: boolean
    CreateSmartMeetingRequest:
      required:
      - defenseAggression
      - durationMinMins
      - enabled
      - eventType
      - idealTime
      - organizer
      - recurrence
      - title
      type: object
      properties:
        enabled:
          type: boolean
        type:
          $ref: "#/components/schemas/SmartSeriesType"
        attendees:
          type: array
          items:
            $ref: "#/components/schemas/SmartSeriesAttendeeRequest"
        reservedWords:
          type: array
          items:
            type: string
        resources:
          type: array
          items:
            $ref: "#/components/schemas/SmartSeriesResourceRequest"
        googleMeet:
          type: boolean
          deprecated: true
        conferenceType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ConferenceType"
        visibility:
          $ref: "#/components/schemas/SmartSeriesVisibility"
        calendarId:
          type: integer
          format: int64
        title:
          type: string
        recurrence:
          $ref: "#/components/schemas/RecurrenceDefinition"
        starting:
          type: string
          format: date
        ending:
          type: string
          format: date
        idealTime:
          type: string
          format: partial-time
        durationMinMins:
          type: integer
          format: int32
        durationMaxMins:
          type: integer
          format: int32
        description:
          type: string
        defendedDescription:
          type: string
        autoDecline:
          type: boolean
        autoDeclineText:
          type: string
        organizer:
          $ref: "#/components/schemas/SmartSeriesOrganizerRequest"
        eventType:
          $ref: "#/components/schemas/SmartSeriesEventType"
        color:
          $ref: "#/components/schemas/EventColor"
        defenseAggression:
          $ref: "#/components/schemas/DefenseAggression"
        location:
          type: string
        lastInstance:
          type: string
          format: date-time
        dependencyType:
          $ref: "#/components/schemas/SmartSeriesDependencyType"
        dependencyRef:
          type: integer
          format: int64
        migrationRef:
          type: integer
          format: int64
        originalEventId:
          type: string
        failurePolicy:
          $ref: "#/components/schemas/SmartSeriesBookingFailurePolicy"
        minLeadTimeMins:
          type: integer
          format: int64
        fixedTimePolicy:
          type: boolean
        rescheduleUnstartedOverride:
          type: boolean
          nullable: true
        recurrenceType:
          $ref: "#/components/schemas/SmartSeriesRecurrenceType"
        reminders:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        guestsCanModify:
          type: boolean
    CreateTaskAtTimeView:
      required:
      - events
      - task
      type: object
      properties:
        task:
          $ref: "#/components/schemas/Task"
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
    CreateZoomMeetingRequest:
      required:
      - title
      - type
      type: object
      properties:
        title:
          type: string
        type:
          $ref: "#/components/schemas/ZoomMeetingType"
        start:
          type: string
          format: date-time
          nullable: true
        durationMinutes:
          type: integer
          format: int32
          nullable: true
    CreateZoomMeetingResponse:
      required:
      - joinUrl
      - meetingId
      type: object
      properties:
        meetingId:
          type: integer
          format: int64
        joinUrl:
          type: string
    Credential:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: string
        provider:
          type: string
        principal:
          type: string
        name:
          $ref: "#/components/schemas/CredentialName"
        splitScopes:
          type: array
          items:
            type: string
        scopes:
          type: string
        data: {}
        avatar:
          type: string
        userInfo:
          $ref: "#/components/schemas/GoogleUserInfo"
        updated:
          type: string
          format: date-time
        key:
          type: string
        valid:
          type: boolean
        validMicrosoftCredential:
          type: boolean
        serviceAccount:
          type: boolean
        connectedAccountType:
          $ref: "#/components/schemas/ConnectedAccountType"
        email:
          type: string
    CredentialName:
      required:
      - email
      type: object
      properties:
        email:
          type: string
    CustomDataErrorType:
      type: string
      enum:
      - TRUNCATED
      - UNSERIALIZABLE
    CustomTimePolicy:
      required:
      - category
      type: object
      allOf:
      - $ref: "#/components/schemas/TimePolicy"
      - properties:
          category:
            $ref: "#/components/schemas/CustomTimePolicy.Category"
    CustomTimePolicy.Category:
      type: string
      enum:
      - WORK
      - PERSONAL
    DailyDigestReport:
      type: object
      properties:
        emailEnabled:
          type: boolean
        slackEnabled:
          type: boolean
    DailyHabit:
      required:
      - additionalDescription
      - adjusted
      - alwaysPrivate
      - autoDecline
      - autoDeclineText
      - created
      - defendedDescription
      - defenseAggression
      - durationMax
      - durationMin
      - elevated
      - enabled
      - eventCategory
      - eventSubType
      - id
      - idealTime
      - index
      - invitees
      - notification
      - priority
      - recurrence
      - recurringAssignmentType
      - reservedWords
      - timesPerPeriod
      - title
      - type
      - updated
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        alwaysPrivate:
          type: boolean
        eventCategory:
          $ref: "#/components/schemas/EventCategory"
        eventSubType:
          $ref: "#/components/schemas/EventSubType"
        eventColor:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/EventColor"
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        snoozeUntil:
          type: string
          format: date-time
          nullable: true
        defenseAggression:
          $ref: "#/components/schemas/DefenseAggression"
        defendedDescription:
          type: string
        recurringAssignmentType:
          $ref: "#/components/schemas/RecurringAssignmentType"
        invitees:
          type: array
          items:
            $ref: "#/components/schemas/ThinPerson"
        enabled:
          type: boolean
        durationMin:
          type: integer
          format: int32
        durationMax:
          type: integer
          format: int32
        idealTime:
          type: string
          format: partial-time
        idealDay:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/DayOfWeek"
        recurrence:
          $ref: "#/components/schemas/Recurrence"
        timesPerPeriod:
          type: integer
          format: int32
        additionalDescription:
          type: string
        index:
          type: integer
          format: int32
        elevated:
          type: boolean
        type:
          $ref: "#/components/schemas/AssistType"
        reservedWords:
          type: array
          items:
            type: string
        notification:
          type: boolean
        timePolicyType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicyType"
        oneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        timeSchemeId:
          type: string
          nullable: true
        autoDecline:
          type: boolean
        autoDeclineText:
          type: string
        adjusted:
          type: boolean
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        prioritizableType:
          type: string
    DailyHabitSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    DailyHabitTemplate:
      required:
      - displayTitle
      - durationMax
      - durationMin
      - elevated
      - eventCategory
      - idealDay
      - idealTime
      - name
      - oneOffPolicy
      - recurrence
      - reservedWords
      - timePolicyType
      - timesPerPeriod
      type: object
      properties:
        name:
          type: string
        displayTitle:
          type: string
        eventCategory:
          $ref: "#/components/schemas/EventType"
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        oneOffPolicy:
          $ref: "#/components/schemas/TimePolicy"
        idealTime:
          type: string
          format: partial-time
        durationMin:
          type: integer
          format: int32
        durationMax:
          type: integer
          format: int32
        elevated:
          type: boolean
        reservedWords:
          type: array
          items:
            type: string
        recurrence:
          $ref: "#/components/schemas/Recurrence"
        timesPerPeriod:
          type: integer
          format: int32
        idealDay:
          $ref: "#/components/schemas/DayOfWeek"
    DailyHabit_1:
      required:
      - additionalDescription
      - alwaysPrivate
      - autoDecline
      - autoDeclineText
      - conferenceData
      - conferenceType
      - created
      - defendedDescription
      - defenseAggression
      - durationMax
      - durationMin
      - elevated
      - enabled
      - eventColor
      - id
      - idealTime
      - index
      - invitees
      - notification
      - oneOffPolicy
      - priority
      - priorityUntil
      - privateDescription
      - recurringAssignmentType
      - reservedWords
      - rrule
      - snoozeUntil
      - timePolicyType
      - timeSchemeId
      - title
      - updated
      type: object
      properties:
        type:
          $ref: "#/components/schemas/AssistType"
        id:
          type: integer
          format: int64
        index:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        enabled:
          type: boolean
        title:
          type: string
          nullable: true
        defendedDescription:
          type: string
        privateDescription:
          type: string
        additionalDescription:
          type: string
        recurringAssignmentType:
          $ref: "#/components/schemas/RecurringAssignmentType"
        reclaimEventType:
          $ref: "#/components/schemas/ReclaimEventType"
        notification:
          type: boolean
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        oneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        timeSchemeId:
          type: string
          nullable: true
        idealTime:
          type: string
          format: partial-time
        idealDay:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/DayOfWeek"
        recurrence:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/Recurrence"
        rrule:
          type: string
        durationMin:
          type: integer
          description: Duration min in minutes
          format: int32
        durationMax:
          type: integer
          format: int32
        eventCategory:
          $ref: "#/components/schemas/EventCategory"
        eventColor:
          $ref: "#/components/schemas/EventColor"
        deleted:
          type: boolean
          description: Set for websocket callbacks.
        invitees:
          type: array
          items:
            $ref: "#/components/schemas/ThinPerson"
        alwaysPrivate:
          type: boolean
        autoDecline:
          type: boolean
        autoDeclineText:
          type: string
        defenseAggression:
          $ref: "#/components/schemas/DefenseAggression"
        elevated:
          type: boolean
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        priorityUntil:
          type: string
          format: date
        snoozeUntil:
          type: string
          description: Even though we use a zoned date time we really only use the
            date portion.
          format: date-time
          nullable: true
        timesPerPeriod:
          type: integer
          format: int32
        conferenceType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ConferenceType"
        conferenceData:
          type: object
          additionalProperties: true
          nullable: true
        location:
          type: string
          nullable: true
        status:
          $ref: "#/components/schemas/RecurringAssignmentStatus"
        reservedWords:
          type: array
          items:
            type: string
        eventFilter:
          $ref: "#/components/schemas/Predicate_Event_"
        oneOnOne:
          type: boolean
    DailyHabit_2:
      required:
      - additionalDescription
      - alwaysPrivate
      - autoDecline
      - autoDeclineText
      - conferenceData
      - conferenceType
      - created
      - defendedDescription
      - defenseAggression
      - durationMax
      - durationMin
      - elevated
      - enabled
      - eventColor
      - id
      - idealTime
      - index
      - invitees
      - notification
      - oneOffPolicy
      - priority
      - priorityUntil
      - privateDescription
      - recurringAssignmentType
      - reservedWords
      - rrule
      - snoozeUntil
      - timePolicyType
      - timeSchemeId
      - title
      - updated
      type: object
      properties:
        type:
          $ref: "#/components/schemas/AssistType"
        id:
          type: integer
          format: int64
        index:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        enabled:
          type: boolean
        title:
          type: string
          nullable: true
        defendedDescription:
          type: string
        privateDescription:
          type: string
        additionalDescription:
          type: string
        recurringAssignmentType:
          $ref: "#/components/schemas/RecurringAssignmentType"
        reclaimEventType:
          $ref: "#/components/schemas/ReclaimEventType"
        notification:
          type: boolean
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        oneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        timeSchemeId:
          type: string
          nullable: true
        idealTime:
          type: string
          format: partial-time
        idealDay:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/DayOfWeek"
        recurrence:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/Recurrence"
        rrule:
          type: string
        durationMin:
          type: integer
          description: Duration min in minutes
          format: int32
        durationMax:
          type: integer
          format: int32
        eventCategory:
          $ref: "#/components/schemas/EventCategory"
        eventColor:
          $ref: "#/components/schemas/EventColor"
        deleted:
          type: boolean
          description: Set for websocket callbacks.
        invitees:
          type: array
          items:
            $ref: "#/components/schemas/ThinPerson"
        alwaysPrivate:
          type: boolean
        autoDecline:
          type: boolean
        autoDeclineText:
          type: string
        defenseAggression:
          $ref: "#/components/schemas/DefenseAggression"
        elevated:
          type: boolean
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        priorityUntil:
          type: string
          format: date
        snoozeUntil:
          type: string
          description: Even though we use a zoned date time we really only use the
            date portion.
          format: date-time
          nullable: true
        timesPerPeriod:
          type: integer
          format: int32
        conferenceType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ConferenceType"
        conferenceData:
          type: object
          additionalProperties: true
          nullable: true
        location:
          type: string
          nullable: true
        status:
          $ref: "#/components/schemas/RecurringAssignmentStatus"
        reservedWords:
          type: array
          items:
            type: string
        eventFilter:
          $ref: "#/components/schemas/Predicate_Event_"
        oneOnOne:
          type: boolean
    DateFieldOrder:
      type: string
      enum:
      - MDY
      - DMY
      - YMD
    DayHours:
      required:
      - intervals
      type: object
      properties:
        intervals:
          type: array
          items:
            $ref: "#/components/schemas/LocalTimeInterval"
        startOfDay:
          type: string
          format: partial-time
          nullable: true
        endOfDay:
          type: string
          format: partial-time
          nullable: true
    DayOfWeek:
      type: string
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
    DeclineEventActionView:
      required:
      - event
      - policyId
      type: object
      properties:
        policyId:
          $ref: "#/components/schemas/SchedulePolicyIdView"
        event:
          $ref: "#/components/schemas/ScheduleActionEventView"
        type:
          type: string
    DefaultRsvpAvailability:
      type: object
      properties:
        treatNeedsActionRsvpAs:
          $ref: "#/components/schemas/AvailabilityType"
    DefenseAggression:
      type: string
      enum:
      - NONE
      - LOW
      - DEFAULT
      - HIGH
      - MAX
    DelayStart:
      type: string
      enum:
      - NO_DELAY
      - FROM_NOW_MINUTES
      - FROM_NOW_HOURS
      - FROM_NOW_DAYS
      - FROM_NOW_START_OF_NEXT_DAY
      - FROM_NOW_START_OF_NEXT_WEEK
    DelegatedAccessToggleRequest:
      required:
      - enable
      type: object
      properties:
        enable:
          type: boolean
    DelegatedAccessView:
      required:
      - authorizedUserId
      - enable
      - grantorUserId
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        grantorUserId:
          type: string
        authorizedUserId:
          type: string
        enable:
          type: boolean
    DeprecatedClickUpIntegrationPatch:
      type: object
      properties:
        selected_space_ids:
          $ref: "#/components/schemas/ImmutableSet_String_"
        requires_tag:
          type: boolean
        withSelected_space_ids:
          type: array
          items:
            type: string
        withRequires_tag:
          type: boolean
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
      deprecated: true
    DerivativeContext:
      required:
      - ccRecipients
      - selectedAttendee
      - subject
      - toRecipients
      type: object
      properties:
        selectedAttendee:
          $ref: "#/components/schemas/ThinPerson"
        toRecipients:
          type: array
          items:
            $ref: "#/components/schemas/ThinPerson"
        ccRecipients:
          type: array
          items:
            $ref: "#/components/schemas/ThinPerson"
        subject:
          type: string
    DescriptionEventMatcher:
      type: object
      allOf:
      - $ref: "#/components/schemas/StringEventMatcher"
      - $ref: "#/components/schemas/AbstractEventMatcher"
    DetailedEntitlements:
      type: object
      properties:
        unlimitedHabitsEnabled:
          $ref: "#/components/schemas/EntitlementDetails"
        unlimitedSyncEnabled:
          $ref: "#/components/schemas/EntitlementDetails"
        unlimitedConnectedCalendarsEnabled:
          $ref: "#/components/schemas/EntitlementDetails"
        customSyncTransparencyEnabled:
          $ref: "#/components/schemas/EntitlementDetails"
        smart11CreationEnabled:
          $ref: "#/components/schemas/EntitlementDetails"
        customSlackSyncStatusEnabled:
          $ref: "#/components/schemas/EntitlementDetails"
        customConferenceBufferTitleEnabled:
          $ref: "#/components/schemas/EntitlementDetails"
        linearEnabled:
          $ref: "#/components/schemas/EntitlementDetails"
        jiraEnabled:
          $ref: "#/components/schemas/EntitlementDetails"
        todoistEnabled:
          $ref: "#/components/schemas/EntitlementDetails"
        asanaEnabled:
          $ref: "#/components/schemas/EntitlementDetails"
        clickupEnabled:
          $ref: "#/components/schemas/EntitlementDetails"
        trelloEnabled:
          $ref: "#/components/schemas/EntitlementDetails"
        mondayEnabled:
          $ref: "#/components/schemas/EntitlementDetails"
    DirectoryAccess:
      required:
      - enabled
      - oauthURI
      type: object
      properties:
        enabled:
          type: boolean
        oauthURI:
          type: string
          format: uri
    DisabledReason:
      type: string
      enum:
      - LOOP_SUSPECTED
    DropboxSettings:
      type: object
      properties:
        enabled:
          type: boolean
    EffectiveTimePolicyParticipant:
      required:
      - timePolicyType
      - userEmail
      type: object
      properties:
        organizerUserId:
          type: string
          nullable: true
        userEmail:
          type: string
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        oneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        timeSchemeId:
          type: string
          nullable: true
        role:
          nullable: true
          deprecated: true
          allOf:
          - $ref: "#/components/schemas/SmartSeriesRole"
        participantRole:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ParticipantRole"
        targetCalendarId:
          type: integer
          format: int64
          nullable: true
        zoneId:
          type: string
          nullable: true
    EffectiveTimePolicyParticipantView:
      required:
      - participant
      - timePolicy
      - timezone
      type: object
      properties:
        participant:
          $ref: "#/components/schemas/ThinPerson"
        timezone:
          type: string
          nullable: true
        timePolicy:
          $ref: "#/components/schemas/TimePolicy"
    EffectiveTimePolicyRequest:
      required:
      - participants
      - resource
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: "#/components/schemas/EffectiveTimePolicyParticipant"
        resource:
          $ref: "#/components/schemas/EffectiveTimePolicyResource"
        now:
          type: string
          format: date-time
          nullable: true
        fixedTimePolicy:
          type: boolean
          nullable: true
        schedulingLinkId:
          type: string
          nullable: true
    EffectiveTimePolicyResource:
      type: string
      enum:
      - SMART_MEETING
      - SMART_HABIT
      - SCHEDULING_LINK
    EffectiveTimePolicyView:
      required:
      - participants
      - timePolicy
      type: object
      properties:
        timePolicy:
          $ref: "#/components/schemas/TimePolicy"
        participants:
          type: array
          items:
            $ref: "#/components/schemas/EffectiveTimePolicyParticipantView"
    Entitlement:
      type: string
      enum:
      - MAX_TEAM_SIZE
      - SCHEDULER_WEEKS
      - MAX_TASKS
      - MAX_CALENDARS
      - MAX_SYNCS
      - MAX_HABITS
      - MAX_TASKS_WEEK
      - TRAVEL_TIME
      - DECOMPRESSION_TIME
      - CUSTOM_BLOCKING
      - CUSTOM_BLOCKING_DECOMPRESSION
      - CUSTOM_BLOCKING_HABITS
      - CUSTOM_BLOCKING_CALENDAR_SYNC
      - CUSTOM_SLACK_STATUS
      - MAX_SCHEDULING_LINKS
      - DERIVATIVE_SCHEDULING_LINKS
      - SCHEDULING_LINK_SURVEY
      - SCHEDULING_LINK_REDIRECT
      - MAX_SCHEDULING_LINK_MEETINGS_QUARTER
      - MAX_1_ON_1_ORGANIZE
      - MAX_1_ON_1_ATTEND
      - MAX_CUSTOM_TIME_SCHEMES
      - INTEGRATIONS
      - INTEGRATION_GOOGLE_TASKS
      - INTEGRATION_GOOGLE_ADD_ON
      - INTEGRATION_SLACK
      - INTEGRATION_RAYCAST
      - INTEGRATION_ZOOM
      - INTEGRATION_TODOIST
      - INTEGRATION_LINEAR
      - INTEGRATION_JIRA
      - INTEGRATION_CLICKUP
      - INTEGRATION_ASANA
      - INTEGRATION_OFFICE_365
      - INTEGRATION_MONDAY
      - INTEGRATION_TRELLO
      - INTEGRATION_DROPBOX
      - SUPPORT
      - SSO
      - TEAM_ANALYTICS
      - EVENT_PREFERENCES
      - DELEGATED_ACCESS
      - SCHEDULING_LINK_ROUND_ROBIN
      - SCHEDULING_LINK_BRANDING
      - SMART_MEETING_ATTENDEE_USERS
      - WEBHOOKS
      - MAX_STATS_WINDOW
    EntitlementActual_Object_:
      required:
      - actualValue
      - allowedValueForCurrentEdition
      - moreUsageAllowed
      - requiredEdition
      - requiredEditionValue
      type: object
      properties:
        actualValue: {}
        allowedValueForCurrentEdition: {}
        requiredEdition:
          $ref: "#/components/schemas/ReclaimEdition"
        requiredEditionValue: {}
        moreUsageAllowed:
          type: boolean
    EntitlementDetails:
      required:
      - minimumEdition
      - name
      type: object
      properties:
        minimumEdition:
          type: string
        name:
          type: string
        enabledForUser:
          type: boolean
    EntitlementOverageSnapshot:
      required:
      - entitlement
      type: object
      properties:
        disabledIds:
          type: array
          nullable: true
          items:
            type: string
        entitlement:
          $ref: "#/components/schemas/Entitlement"
        wasDisabled:
          type: boolean
          nullable: true
        removedContentMap:
          type: object
          additionalProperties: true
          nullable: true
    EntitlementValue_Object_:
      required:
      - nextEdition
      - nextValue
      - value
      type: object
      properties:
        value: {}
        nextValue:
          nullable: true
        nextEdition:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ReclaimEdition"
    Entitlements:
      type: object
      properties:
        unlimitedHabitsEnabled:
          type: boolean
        unlimitedConnectedCalendarsEnabled:
          type: boolean
        unlimitedSyncEnabled:
          type: boolean
        customSyncTransparencyEnabled:
          type: boolean
        smart11CreationEnabled:
          type: boolean
        customSlackSyncStatusEnabled:
          type: boolean
        customConferenceBufferTitleEnabled:
          type: boolean
        schedulingLinkSurveyEnabled:
          type: boolean
        maxDaysAheadForSchedulingLinks:
          type: integer
          format: int32
        linearEnabled:
          type: boolean
        jiraEnabled:
          type: boolean
        todoistEnabled:
          type: boolean
        asanaEnabled:
          type: boolean
        clickupEnabled:
          type: boolean
        trelloEnabled:
          type: boolean
        mondayEnabled:
          type: boolean
        dropboxEnabled:
          type: boolean
        SSOEnabled:
          type: boolean
    EntityPermissions:
      required:
      - canDelete
      - canEdit
      - canEnable
      - canView
      type: object
      properties:
        canView:
          type: boolean
        canEdit:
          type: boolean
        canEnable:
          type: boolean
        canDelete:
          type: boolean
    EntityType:
      type: string
      enum:
      - ACCOUNT_INVITATION
      - ACCOUNT_TIME_SCHEMES
      - WEBHOOKS_CONFIG
      - WEBHOOKS_ASSOCIATION
      - SMART_HABIT_TEMPLATES
      - TEAM
    EntityTypeAccessView:
      required:
      - permissions
      type: object
      properties:
        permissions:
          $ref: "#/components/schemas/EntityTypePermissionsView"
    EntityTypePermissions:
      required:
      - canCreate
      - canView
      type: object
      properties:
        canView:
          type: boolean
        canCreate:
          type: boolean
    EntityTypePermissionsView:
      required:
      - permissions
      - type
      type: object
      properties:
        type:
          $ref: "#/components/schemas/EntityType"
        permissions:
          $ref: "#/components/schemas/EntityTypePermissions"
    EntityTypeView:
      required:
      - access
      type: object
      properties:
        access:
          $ref: "#/components/schemas/EntityTypeAccessView"
    EntryColor:
      type: string
      enum:
      - NONE
      - LAVENDER
      - SAGE
      - GRAPE
      - FLAMINGO
      - BANANA
      - TANGERINE
      - PEACOCK
      - GRAPHITE
      - BLUEBERRY
      - BASIL
      - TOMATO
    EnumsController.EnumsForFrontend:
      required:
      - oauthErrorCodes
      type: object
      properties:
        oauthErrorCodes:
          $ref: "#/components/schemas/OauthErrorCodes"
    Event:
      required:
      - allocatedTimeChunks
      - assist
      - calendarId
      - categoryOverride
      - description
      - etag
      - eventEnd
      - eventId
      - eventStart
      - key
      - location
      - meetingType
      - organizer
      - priority
      - recurrence
      - recurrenceMax
      - recurringEventId
      - requiresTravel
      - rsvpStatus
      - sourceDetails
      - status
      - subType
      - timeChunks
      - title
      - titleSeenByOthers
      - type
      - updated
      type: object
      properties:
        googleMetadata:
          description: "Returns Google Calendar-specific metadata that doesn't fit\
            \ into a common event model, but that services and UI might be interested\
            \ in introspecting. If the event isn't a Google Calendar event, this method\
            \ will return an empty value."
          nullable: true
          allOf:
          - $ref: "#/components/schemas/GoogleCalendarEventMetadata"
        schedulingLinkId:
          type: string
          nullable: true
        schedulingLinkMeetingId:
          type: string
          nullable: true
        underAssistControl:
          type: boolean
        assist:
          $ref: "#/components/schemas/AssistDetails"
        reclaimEventType:
          $ref: "#/components/schemas/ReclaimEventType"
        personalSync:
          type: boolean
        reclaimManaged:
          type: boolean
          description: "Reclaim likely created and manages this event but important\
            \ to note that this event might not be organized by this user so very\
            \ important to check also [isReclaimManagedAndSelfOrganized](#isReclaimManagedAndSelfOrganized)\
            \ if the calling class would do something different for a Reclaim managed\
            \ event if the person attached to this event is an attendee, rather than\
            \ the organizer."
        reclaimManagedAndSelfOrganized:
          type: boolean
          description: "Important to note that there are Reclaim \"managed\" events\
            \ like smart meetings and scheduling link events where the user associated\
            \ with the event is *not* the organizer, and as a result, we may need\
            \ to do things like color coding or scoring."
        eventId:
          type: string
        calendarId:
          type: integer
          format: int64
        key:
          $ref: "#/components/schemas/EventKey"
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        prioritySource:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/PrioritySource"
        title:
          type: string
        titleSeenByOthers:
          type: string
        location:
          type: string
        onlineMeetingUrlRaw:
          type: string
        onlineMeetingUrl:
          type: string
        description:
          type: string
        sourceDetails:
          $ref: "#/components/schemas/EventSourceDetails"
        mergeDetails:
          $ref: "#/components/schemas/MergeDetails"
        status:
          $ref: "#/components/schemas/EventStatus"
        published:
          type: boolean
        type:
          $ref: "#/components/schemas/EventType"
        subType:
          $ref: "#/components/schemas/EventSubType"
        meetingType:
          $ref: "#/components/schemas/MeetingType"
        categoryOverride:
          $ref: "#/components/schemas/EventCategory"
        eventStart:
          type: string
          format: date-time
        eventEnd:
          type: string
          format: date-time
        timeChunks:
          type: integer
          format: int32
        allocatedTimeChunks:
          type: integer
          format: int32
        recurringEventId:
          type: string
        updated:
          type: string
          format: date-time
        recurringException:
          type: boolean
        recurrence:
          type: string
        recurrenceMax:
          type: string
          format: date-time
        recurring:
          type: boolean
        recurringInstance:
          type: boolean
        private:
          type: boolean
        public:
          type: boolean
        color:
          $ref: "#/components/schemas/EventColor"
        organizer:
          type: string
        numAttendees:
          type: integer
          format: int32
        attendees:
          type: array
          items:
            $ref: "#/components/schemas/EventAttendeeView"
        free:
          type: boolean
        category:
          $ref: "#/components/schemas/EventCategory"
        rsvpStatus:
          $ref: "#/components/schemas/EventResponseStatus"
        requiresTravel:
          type: boolean
        conferenceCall:
          type: boolean
        etag:
          type: string
          nullable: true
        smartSeriesId:
          type: integer
          format: int64
          nullable: true
        sourceEventType:
          $ref: "#/components/schemas/PlatformEventType"
        version:
          type: string
        manuallyStarted:
          type: boolean
        inheritedExternalId:
          type: string
          description: |-
            Retrieves the inherited external ID for the event. The inherited external ID is used in scenarios where a non-pipeline user is invited to an event created by Reclaim on a pipeline user's Microsoft calendar.

            In such cases, the inherited external ID represents the "external-id" of the organizer's event,
            which is crucial for supporting event ID parsing. This mechanism ensures compatibility with Reclaim's
            existing logic for detecting and parsing event information, even when the event ID cannot be directly
            relied upon (e.g., in Microsoft calendars).
          nullable: true
    EventAttendeeView:
      required:
      - additionalGuests
      - email
      - optional
      - organizer
      - resource
      - responseStatus
      - self
      type: object
      properties:
        email:
          type: string
        self:
          type: boolean
        displayName:
          type: string
          nullable: true
        responseStatus:
          $ref: "#/components/schemas/ResponseStatus"
        comment:
          type: string
          nullable: true
        optional:
          type: boolean
        additionalGuests:
          type: integer
          format: int32
        organizer:
          type: boolean
        resource:
          type: boolean
    EventCategory:
      $ref: "#/components/schemas/Colorized"
    EventCategoryEventMatcher:
      required:
      - operator
      - predicateValue
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractEventMatcher"
      - properties:
          operator:
            $ref: "#/components/schemas/EventMatcherOperator"
          predicateValue:
            $ref: "#/components/schemas/EventCategory"
    EventColor:
      type: string
      enum:
      - NONE
      - LAVENDER
      - SAGE
      - GRAPE
      - FLAMINGO
      - BANANA
      - TANGERINE
      - PEACOCK
      - GRAPHITE
      - BLUEBERRY
      - BASIL
      - TOMATO
    EventConflictMetadataView:
      required:
      - conflictType
      type: object
      properties:
        conflictType:
          $ref: "#/components/schemas/ConflictType"
        eventId:
          type: string
          nullable: true
        eventStart:
          type: string
          format: date-time
          nullable: true
        eventEnd:
          type: string
          format: date-time
          nullable: true
        assistType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/AssistType"
        subType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/EventSubType"
        priority:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/PriorityLevel"
        attendeeWithConflict:
          type: string
          nullable: true
    EventDescription:
      required:
      - raw
      type: object
      properties:
        raw:
          type: string
        processed:
          type: string
    EventDisplayPreferences:
      required:
      - attribution
      - busyEmoji
      - description
      - doneEmoji
      - freeEmoji
      - lockEmoji
      - prefix
      - progressEmoji
      - warningEmoji
      type: object
      properties:
        progressEmoji:
          type: boolean
        lockEmoji:
          type: boolean
        freeEmoji:
          type: boolean
        busyEmoji:
          type: boolean
        doneEmoji:
          type: boolean
        warningEmoji:
          type: boolean
        description:
          type: boolean
        attribution:
          type: boolean
        prefix:
          type: boolean
    EventKey:
      required:
      - calendarId
      - eventId
      type: object
      properties:
        eventId:
          type: string
        calendarId:
          type: integer
          format: int64
    EventKeyEventMatcher:
      required:
      - operator
      - predicateValue
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractEventMatcher"
      - properties:
          operator:
            $ref: "#/components/schemas/EventMatcherOperator"
          predicateValue:
            $ref: "#/components/schemas/EventKey"
    EventList:
      required:
      - eventKeys
      type: object
      properties:
        eventKeys:
          type: array
          items:
            $ref: "#/components/schemas/EventKey"
    EventMatcher:
      type: object
      oneOf:
      - $ref: "#/components/schemas/AllEventMatcher"
      - $ref: "#/components/schemas/AndEventMatcher"
      - $ref: "#/components/schemas/AnyEventMatcher"
      - $ref: "#/components/schemas/AnyTextEventMatcher"
      - $ref: "#/components/schemas/DescriptionEventMatcher"
      - $ref: "#/components/schemas/EventCategoryEventMatcher"
      - $ref: "#/components/schemas/EventKeyEventMatcher"
      - $ref: "#/components/schemas/FalseEventMatcher"
      - $ref: "#/components/schemas/HasVideoConferenceEventMatcher"
      - $ref: "#/components/schemas/LocationEventMatcher"
      - $ref: "#/components/schemas/NoneEventMatcher"
      - $ref: "#/components/schemas/NotEventMatcher"
      - $ref: "#/components/schemas/OrEventMatcher"
      - $ref: "#/components/schemas/RequiresTravelEventMatcher"
      - $ref: "#/components/schemas/TitleEventMatcher"
      - $ref: "#/components/schemas/TrueEventMatcher"
    EventMatcherOperator:
      type: string
      enum:
      - NOT_SPECIFIED
      - EQUALS
      - CONTAINS
    EventResponseStatus:
      type: string
      enum:
      - None
      - Organizer
      - Accepted
      - Declined
      - TentativelyAccepted
      - NotResponded
      x-enum-varnames:
      - None
      - Organizer
      - Accepted
      - Declined
      - TentativelyAccepted
      - NotResponded
    EventSourceDetails:
      required:
      - base64Id
      - calendarId
      - description
      - etag
      - eventId
      - eventKey
      - title
      - url
      - writable
      type: object
      properties:
        writable:
          type: boolean
        calendarId:
          type: integer
          format: int64
        eventId:
          type: string
        etag:
          type: string
        eventKey:
          $ref: "#/components/schemas/EventKey"
        base64Id:
          type: string
        url:
          type: string
        title:
          type: string
        description:
          type: string
    EventStatus:
      type: string
      enum:
      - PUBLISHED
      - CANCELLED
    EventSubType:
      type: string
      enum:
      - ONE_ON_ONE
      - STAFF_MEETING
      - OP_REVIEW
      - EXTERNAL
      - IDEATION
      - FOCUS
      - PRODUCTIVITY
      - TRAVEL
      - FLIGHT
      - TRAIN
      - RECLAIM
      - VACATION
      - HEALTH
      - ERRAND
      - OTHER_PERSONAL
      - UNKNOWN
    EventType:
      type: string
      enum:
      - MEETING
      - WORK
      - LOGISTICS
      - PERSONAL
    EventTypeSupport:
      required:
      - checkAfter
      - focusTime
      type: object
      properties:
        focusTime:
          type: boolean
        checkAfter:
          type: string
          format: date-time
    EventWithData:
      required:
      - rawData
      type: object
      allOf:
      - $ref: "#/components/schemas/Event"
      - properties:
          googleMetadata:
            description: "Returns Google Calendar-specific metadata that doesn't fit\
              \ into a common event model, but that services and UI might be interested\
              \ in introspecting. If the event isn't a Google Calendar event, this\
              \ method will return an empty value."
            nullable: true
            allOf:
            - $ref: "#/components/schemas/GoogleCalendarEventMetadata"
          reclaimEventType:
            $ref: "#/components/schemas/ReclaimEventType"
          eventId:
            type: string
          key:
            $ref: "#/components/schemas/EventKey"
          priority:
            $ref: "#/components/schemas/PriorityLevel"
          onlineMeetingUrlRaw:
            type: string
          status:
            $ref: "#/components/schemas/EventStatus"
          subType:
            $ref: "#/components/schemas/EventSubType"
          eventStart:
            type: string
            format: date-time
          eventEnd:
            type: string
            format: date-time
          timeChunks:
            type: integer
            format: int32
          allocatedTimeChunks:
            type: integer
            format: int32
          color:
            $ref: "#/components/schemas/EventColor"
          category:
            $ref: "#/components/schemas/EventCategory"
          manuallyStarted:
            type: boolean
          rawData: {}
    EventsSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    ExperimentalSettings:
      type: object
      properties:
        treatOptionalSmartMeetingAttendeesAsFree:
          type: boolean
        lookAheadForSmartMeetingIdealDayOnWeeklyMeetings:
          type: boolean
    ExternalCalendarId:
      required:
      - externalId
      type: object
      properties:
        externalId:
          type: string
    FalseEventMatcher:
      $ref: "#/components/schemas/AbstractEventMatcher"
    FlexibleTimeSpan:
      type: object
      properties:
        durationMin:
          type: integer
          format: int32
        durationMax:
          type: integer
          format: int32
    FocusInsightsCategory:
      type: string
      enum:
      - ExternalMeeting
      - OneOnOne
      - TeamMeeting
      - SoloWork
      - Personal
      - Logistics
      - Focus
      x-enum-varnames:
      - ExternalMeeting
      - OneOnOne
      - TeamMeeting
      - SoloWork
      - Personal
      - Logistics
      - Focus
    FocusInsightsForDayV3:
      required:
      - day
      - freeTimeMinutes
      - stats
      type: object
      properties:
        day:
          type: string
          format: date
        stats:
          type: array
          items:
            $ref: "#/components/schemas/FocusInsightsStatisticV3"
        freeTimeMinutes:
          type: integer
          format: int64
    FocusInsightsStatisticV3:
      required:
      - count
      - eventMinutesMap
      - focusInsightsCategory
      - minutes
      - reclaimEventType
      type: object
      properties:
        minutes:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        reclaimEventType:
          $ref: "#/components/schemas/ReclaimEventType"
        eventMinutesMap:
          type: object
          additionalProperties:
            type: integer
            format: int32
        focusInsightsCategory:
          $ref: "#/components/schemas/FocusInsightsCategory"
    FocusInsightsViewV3:
      required:
      - insightsForDays
      type: object
      properties:
        insightsForDays:
          type: array
          items:
            $ref: "#/components/schemas/FocusInsightsForDayV3"
    FocusPlannerActionResult:
      required:
      - events
      - focusSettings
      - userInfoMessage
      type: object
      properties:
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
        focusSettings:
          $ref: "#/components/schemas/UserFocusSettingsView"
        userInfoMessage:
          type: string
    FocusSettings:
      type: object
      properties:
        enabled:
          type: boolean
        debug:
          type: boolean
    FocusTimeBalloonFillType:
      type: string
      enum:
      - BALLOON_FILL_NORMAL
      - BALLOON_FILL_MAXIMIZE_DURATIONS
    FocusTimeCircuitBreakerType:
      type: string
      enum:
      - WEEK
      - DAY
      - WEEK_AND_DAY
    FocusTimeCountingStyle:
      type: string
      enum:
      - IGNORE_TIME_SCHEME
      - ONLY_WITHIN_TIME_SCHEME
    FocusTimeRequest:
      required:
      - schedulingTypeV2
      type: object
      properties:
        schedulingType:
          nullable: true
          deprecated: true
          allOf:
          - $ref: "#/components/schemas/FocusTimeSchedulingType"
        schedulingTypeV2:
          $ref: "#/components/schemas/FocusTimeSchedulingTypeV2"
        countingStyle:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/FocusTimeCountingStyle"
        balloonFill:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/BalloonFillRequest"
        circuitBreaker:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/CircuitBreakerRequest"
    FocusTimeSchedulingType:
      type: string
      deprecated: true
      enum:
      - BALLOON_FILL
      - BALLOON_FILL_MAXIMIZE_DURATIONS
      - CIRCUIT_BREAKER_WEEK_LEVEL
      - CIRCUIT_BREAKER_DAY_LEVEL
      - CIRCUIT_BREAKER_WEEK_AND_DAY_LEVEL
    FocusTimeSchedulingTypeV2:
      type: string
      enum:
      - BALLOON_FILL
      - CIRCUIT_BREAKER
    FocusTimeSettingsView:
      required:
      - schedulingType
      - schedulingTypeV2
      type: object
      properties:
        schedulingType:
          $ref: "#/components/schemas/FocusTimeSchedulingType"
        schedulingTypeV2:
          $ref: "#/components/schemas/FocusTimeSchedulingTypeV2"
        balloonFill:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/BalloonFillView"
        circuitBreaker:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/CircuitBreakerView"
    FocusType:
      type: string
      enum:
      - FOCUS_TIME
    FocusVisibility:
      type: string
      enum:
      - DEFAULT
      - PRIVATE
      - PUBLIC
    Frequency:
      type: string
      enum:
      - DAILY
      - WEEKLY
      - MONTHLY
    GCalConstants.AccessRole:
      type: string
      enum:
      - freeBusyReader
      - reader
      - owner
      - writer
      - none
      x-enum-varnames:
      - freeBusyReader
      - reader
      - owner
      - writer
      - none
    GoogleAddOnSettings:
      type: object
      properties:
        enabled:
          type: boolean
    GoogleCalendarEventMetadata:
      required:
      - guestsCanInviteOthers
      - guestsCanModify
      - guestsCanSeeOtherGuests
      type: object
      properties:
        guestsCanModify:
          type: boolean
        guestsCanInviteOthers:
          type: boolean
        guestsCanSeeOtherGuests:
          type: boolean
    GoogleUserInfo:
      type: object
      properties:
        sub:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        email_verified:
          type: boolean
          nullable: true
        name:
          type: string
          nullable: true
        given_name:
          type: string
          nullable: true
        family_name:
          type: string
          nullable: true
        picture:
          type: string
          nullable: true
        locale:
          type: string
          nullable: true
        hd:
          type: string
          nullable: true
        withSub:
          type: string
          nullable: true
        withEmail:
          type: string
          nullable: true
        withEmailVerified:
          type: boolean
        withName:
          type: string
          nullable: true
        withGivenName:
          type: string
          nullable: true
        withFamilyName:
          type: string
          nullable: true
        withPicture:
          type: string
          nullable: true
        withLocale:
          type: string
          nullable: true
        withHd:
          type: string
          nullable: true
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    HabitPolicyView:
      required:
      - calendarId
      - eventMatcher
      - id
      - idealDuration
      - idealTime
      - minDuration
      - recurrence
      - timeScheme
      - title
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SchedulePolicyIdView"
        calendarId:
          type: integer
          format: int64
        eventMatcher:
          $ref: "#/components/schemas/EventMatcher"
        title:
          type: string
        idealTime:
          type: string
          format: partial-time
        idealDuration:
          type: string
        minDuration:
          type: string
        recurrence:
          $ref: "#/components/schemas/RecurrenceForPolicy"
        timeScheme:
          $ref: "#/components/schemas/BasicTimeSchemeView"
    HabitTemplateKey:
      type: string
      enum:
      - LUNCH
      - MEDITATION
      - TAKE_A_WALK
      - READING
      - WRITING
      - MORNING_CATCHUP
      - AFTERNOON_CATCHUP
      - MONTHLY_METRICS_REVIEW
      - SPRINT_PLANNING
      - CUSTOMER_FEEDBACK_REVIEW
      - WEEKLY_STATUS_REPORT
      - PRODUCT_BACKLOG_REVIEW
      - PRODUCT_REQUIREMENTS
      - RETROSPECTIVE_PLANNING
      - PRODUCT_LAUNCH_PLANNING
      - FOCUS_TIME
      - DEBUGGING
      - FEATURE_BACKLOG
      - TESTING
      - CUSTOMER_RESEARCH
      - RECRUITMENT
      - QUARTERLY_RESEARCH_REPORT
      - STRATEGIC_PLANNING
      - DEPLOY
      - PRODUCT_DOCUMENTATION
      - CODING
      - ARCHITECTURE_DESIGN_REVIEW
      - CODE_REVIEW
      - TRAINING
      - TROUBLESHOOT_ESCALATED_ISSUES
      - REVIEW_PRODUCT_UPDATES
      - COMMUNITY_ENGAGEMENT
      - SUPPORT_TIME
      - SHARE_CUSTOMER_FEEDBACK
      - SNIPPET_TEMPLATE_UPDATES
      - ADVERTISING_REVIEW
      - COMPETITOR_RESEARCH
      - PR_PLANNING
      - SEO_REVIEW
      - SOCIAL_MEDIA_UPDATES
      - NEWSLETTER
      - BLOG_WRITING
      - WEBINAR_PREP
      - EMAIL_INBOUND_LEADS
      - KEY_ACCOUNT_CHECK_INS
      - SALES_PIPELINE_REVIEW
      - WRITE_PROPOSAL
      - CRM_UPDATES
      - PROSPECTING
      - UPDATE_SALES_PRESENTATIONS
      - OUTBOUND_CALLS
      - WEEKLY_DESIGN_REVIEW
      - FREE_DESIGN_HOUR
      - USER_RESEARCH
      - DESIGN_USER_TESTS
      - DAILY_DESIGN_TIME
      - WIREFRAMES
      - USER_FLOW_DESIGN
      - EMPLOYEE_RELATIONS_REVIEW
      - PTO_REVIEW
      - PRODUCTIVITY_REVIEW
      - DEI_REVIEW
      - PROCESS_BACKGROUND_CHECKS
      - QUARTERLY_TRAINING_PREP
      - APPLICANT_REVIEW
      - EMPLOYEE_RECOGNITION
      - PAYROLL_UPDATES
      - INTERVIEW_PREP
      - EMPLOYEE_SURVEYS
      - UPDATE_JOB_POSTINGS
      - EMPLOYEE_NEWSLETTER_PREP
      - REVIEW_DEPARTMENT_REQUIREMENTS
      - SECURITY_REVIEWS
      - TEAM_MEETING_PREP
      - LEGAL_COMPLIANCE_REVIEW
      - VENDOR_REVIEWS
      - BUSINESS_PERFORMANCE_REVIEW
      - REVIEW_PROCUREMENT_REQUESTS
      - REVIEW_SUPPLIER_AGREEMENTS
      - UPDATE_INTERNAL_POLICIES
      - ANALYZE_TECHNOLOGY_USAGE
      - REVIEW_TEAM_WORKFLOWS
      - UPDATE_OPERATIONAL_PROCEDURES
      - REVIEW_FINANCIAL_REPORTS
      - INVESTOR_UPDATE
      - MONTH_END_FINANCIAL_STATEMENTS
      - REVIEW_FORECAST_REPORTS
      - BUDGET_PLANNING
      - REVIEW_MONTHLY_REPORTS
      - REVIEW_EXPENSE_REPORT
      - PREPARE_MONTHLY_REPORTS
      - UPDATE_JOURNAL_ENTRIES
      - REVIEW_TIME_SHEETS
      - PROCESS_PAYMENTS
      - REVIEW_ACCOUNTS_PAYABLE
      - TAX_PLANNING
      - WEEKDAY_STUDY
      - GROCERY_SHOPPING
      - LAUNDRY
      - INTERNSHIP_APPLICATIONS
      - WEEKEND_STUDY
      - EXERCISE
      - CLEAN_HOUSE
      - CALL_FAMILY
      - WORK_ON_THESIS
    HasVideoConferenceEventMatcher:
      required:
      - predicateValue
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractEventMatcher"
      - properties:
          predicateValue:
            type: boolean
    HttpStatus:
      type: string
      enum:
      - CONTINUE
      - SWITCHING_PROTOCOLS
      - PROCESSING
      - EARLY_HINTS
      - OK
      - CREATED
      - ACCEPTED
      - NON_AUTHORITATIVE_INFORMATION
      - NO_CONTENT
      - RESET_CONTENT
      - PARTIAL_CONTENT
      - MULTI_STATUS
      - ALREADY_IMPORTED
      - IM_USED
      - MULTIPLE_CHOICES
      - MOVED_PERMANENTLY
      - FOUND
      - SEE_OTHER
      - NOT_MODIFIED
      - USE_PROXY
      - SWITCH_PROXY
      - TEMPORARY_REDIRECT
      - PERMANENT_REDIRECT
      - BAD_REQUEST
      - UNAUTHORIZED
      - PAYMENT_REQUIRED
      - FORBIDDEN
      - NOT_FOUND
      - METHOD_NOT_ALLOWED
      - NOT_ACCEPTABLE
      - PROXY_AUTHENTICATION_REQUIRED
      - REQUEST_TIMEOUT
      - CONFLICT
      - GONE
      - LENGTH_REQUIRED
      - PRECONDITION_FAILED
      - REQUEST_ENTITY_TOO_LARGE
      - REQUEST_URI_TOO_LONG
      - UNSUPPORTED_MEDIA_TYPE
      - REQUESTED_RANGE_NOT_SATISFIABLE
      - EXPECTATION_FAILED
      - I_AM_A_TEAPOT
      - ENHANCE_YOUR_CALM
      - MISDIRECTED_REQUEST
      - UNPROCESSABLE_ENTITY
      - LOCKED
      - FAILED_DEPENDENCY
      - TOO_EARLY
      - UPGRADE_REQUIRED
      - PRECONDITION_REQUIRED
      - TOO_MANY_REQUESTS
      - REQUEST_HEADER_FIELDS_TOO_LARGE
      - NO_RESPONSE
      - BLOCKED_BY_WINDOWS_PARENTAL_CONTROLS
      - UNAVAILABLE_FOR_LEGAL_REASONS
      - REQUEST_HEADER_TOO_LARGE
      - INTERNAL_SERVER_ERROR
      - NOT_IMPLEMENTED
      - BAD_GATEWAY
      - SERVICE_UNAVAILABLE
      - GATEWAY_TIMEOUT
      - HTTP_VERSION_NOT_SUPPORTED
      - VARIANT_ALSO_NEGOTIATES
      - INSUFFICIENT_STORAGE
      - LOOP_DETECTED
      - BANDWIDTH_LIMIT_EXCEEDED
      - NOT_EXTENDED
      - NETWORK_AUTHENTICATION_REQUIRED
      - CONNECTION_TIMED_OUT
    IconType:
      type: string
      enum:
      - LIGHT
      - COFFEE
      - BOLT
      - COMMENT
      - STAR
      - AIRPLANE
      - TWINKLE
      - COMPASS
      - SUN
      - SMILE
    IdealMonthlyDay:
      type: object
      properties:
        idealDayOfMonth:
          type: integer
          format: int32
        idealDayOfWeek:
          $ref: "#/components/schemas/DayOfWeek"
        idealWeek:
          type: integer
          format: int32
    ImmutableCollection_AbstractLinearTeam_:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractCollection_AbstractLinearTeam_"
      - properties:
          empty:
            type: boolean
          partialView:
            type: boolean
    ImmutableCollection_AsanaFormFieldOption_:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractCollection_AsanaFormFieldOption_"
      - properties:
          empty:
            type: boolean
          partialView:
            type: boolean
    ImmutableCollection_AsanaIntegrationTitleOptions_:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractCollection_AsanaIntegrationTitleOptions_"
      - properties:
          empty:
            type: boolean
          partialView:
            type: boolean
    ImmutableCollection_AsanaProject_:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractCollection_AsanaProject_"
      - properties:
          empty:
            type: boolean
          partialView:
            type: boolean
    ImmutableCollection_AsanaSyncFormField_:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractCollection_AsanaSyncFormField_"
      - properties:
          empty:
            type: boolean
          partialView:
            type: boolean
    ImmutableCollection_AsanaWidgetField_:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractCollection_AsanaWidgetField_"
      - properties:
          empty:
            type: boolean
          partialView:
            type: boolean
    ImmutableCollection_CalendarView_:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractCollection_CalendarView_"
      - properties:
          empty:
            type: boolean
          partialView:
            type: boolean
    ImmutableCollection_ClickUpSpace_:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractCollection_ClickUpSpace_"
      - properties:
          empty:
            type: boolean
          partialView:
            type: boolean
    ImmutableCollection_ClickUpStatus_:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractCollection_ClickUpStatus_"
      - properties:
          empty:
            type: boolean
          partialView:
            type: boolean
    ImmutableCollection_JiraProject_:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractCollection_JiraProject_"
      - properties:
          empty:
            type: boolean
          partialView:
            type: boolean
    ImmutableCollection_String_:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractCollection_String_"
      - properties:
          empty:
            type: boolean
          partialView:
            type: boolean
    ImmutableCollection_TodoistLabel_:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractCollection_TodoistLabel_"
      - properties:
          empty:
            type: boolean
          partialView:
            type: boolean
    ImmutableCollection_TodoistProject_:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractCollection_TodoistProject_"
      - properties:
          empty:
            type: boolean
          partialView:
            type: boolean
    ImmutableList_AbstractLinearTeam_:
      type: object
      allOf:
      - $ref: "#/components/schemas/ImmutableCollection_AbstractLinearTeam_"
      - $ref: "#/components/schemas/AbstractCollection_AbstractLinearTeam_"
      - properties:
          empty:
            type: boolean
          first:
            $ref: "#/components/schemas/AbstractLinearTeam"
          last:
            $ref: "#/components/schemas/AbstractLinearTeam"
    ImmutableList_AsanaFormFieldOption_:
      type: object
      allOf:
      - $ref: "#/components/schemas/ImmutableCollection_AsanaFormFieldOption_"
      - $ref: "#/components/schemas/AbstractCollection_AsanaFormFieldOption_"
      - properties:
          empty:
            type: boolean
          first:
            $ref: "#/components/schemas/AsanaFormFieldOption"
          last:
            $ref: "#/components/schemas/AsanaFormFieldOption"
    ImmutableList_AsanaIntegrationTitleOptions_:
      type: object
      allOf:
      - $ref: "#/components/schemas/ImmutableCollection_AsanaIntegrationTitleOptions_"
      - $ref: "#/components/schemas/AbstractCollection_AsanaIntegrationTitleOptions_"
      - properties:
          empty:
            type: boolean
          first:
            $ref: "#/components/schemas/AsanaIntegrationTitleOptions"
          last:
            $ref: "#/components/schemas/AsanaIntegrationTitleOptions"
    ImmutableList_AsanaProject_:
      type: object
      allOf:
      - $ref: "#/components/schemas/ImmutableCollection_AsanaProject_"
      - $ref: "#/components/schemas/AbstractCollection_AsanaProject_"
      - properties:
          empty:
            type: boolean
          first:
            $ref: "#/components/schemas/AsanaProject"
          last:
            $ref: "#/components/schemas/AsanaProject"
    ImmutableList_AsanaSyncFormField_:
      type: object
      allOf:
      - $ref: "#/components/schemas/ImmutableCollection_AsanaSyncFormField_"
      - $ref: "#/components/schemas/AbstractCollection_AsanaSyncFormField_"
      - properties:
          empty:
            type: boolean
          first:
            $ref: "#/components/schemas/AsanaSyncFormField"
          last:
            $ref: "#/components/schemas/AsanaSyncFormField"
    ImmutableList_AsanaWidgetField_:
      type: object
      allOf:
      - $ref: "#/components/schemas/ImmutableCollection_AsanaWidgetField_"
      - $ref: "#/components/schemas/AbstractCollection_AsanaWidgetField_"
      - properties:
          empty:
            type: boolean
          first:
            $ref: "#/components/schemas/AsanaWidgetField"
          last:
            $ref: "#/components/schemas/AsanaWidgetField"
    ImmutableList_ClickUpStatus_:
      type: object
      allOf:
      - $ref: "#/components/schemas/ImmutableCollection_ClickUpStatus_"
      - $ref: "#/components/schemas/AbstractCollection_ClickUpStatus_"
      - properties:
          empty:
            type: boolean
          first:
            $ref: "#/components/schemas/ClickUpStatus"
          last:
            $ref: "#/components/schemas/ClickUpStatus"
    ImmutableList_TodoistProject_:
      type: object
      allOf:
      - $ref: "#/components/schemas/ImmutableCollection_TodoistProject_"
      - $ref: "#/components/schemas/AbstractCollection_TodoistProject_"
      - properties:
          empty:
            type: boolean
          first:
            $ref: "#/components/schemas/TodoistProject"
          last:
            $ref: "#/components/schemas/TodoistProject"
    ImmutableSet_CalendarView_:
      type: object
      allOf:
      - $ref: "#/components/schemas/ImmutableCollection_CalendarView_"
      - $ref: "#/components/schemas/AbstractCollection_CalendarView_"
      - properties:
          empty:
            type: boolean
          hashCodeFast:
            type: boolean
    ImmutableSet_ClickUpSpace_:
      type: object
      allOf:
      - $ref: "#/components/schemas/ImmutableCollection_ClickUpSpace_"
      - $ref: "#/components/schemas/AbstractCollection_ClickUpSpace_"
      - properties:
          empty:
            type: boolean
          hashCodeFast:
            type: boolean
    ImmutableSet_JiraProject_:
      type: object
      allOf:
      - $ref: "#/components/schemas/ImmutableCollection_JiraProject_"
      - $ref: "#/components/schemas/AbstractCollection_JiraProject_"
      - properties:
          empty:
            type: boolean
          hashCodeFast:
            type: boolean
    ImmutableSet_String_:
      type: object
      allOf:
      - $ref: "#/components/schemas/ImmutableCollection_String_"
      - $ref: "#/components/schemas/AbstractCollection_String_"
      - properties:
          empty:
            type: boolean
          hashCodeFast:
            type: boolean
    ImmutableSet_TodoistLabel_:
      type: object
      allOf:
      - $ref: "#/components/schemas/ImmutableCollection_TodoistLabel_"
      - $ref: "#/components/schemas/AbstractCollection_TodoistLabel_"
      - properties:
          empty:
            type: boolean
          hashCodeFast:
            type: boolean
    IneligibilityReason:
      type: string
      enum:
      - MAIN_ACCOUNT_PRIMARY
      - SYNCED_ALREADY
      - FREE_BUSY_ONLY
    IntegrationStatus:
      type: object
      properties:
        ASANA:
          type: boolean
        CLICKUP:
          type: boolean
        JIRA:
          type: boolean
        LINEAR:
          type: boolean
        TODOIST:
          type: boolean
        ZOOM:
          type: boolean
        ADD_ON:
          type: boolean
        SLACK:
          type: boolean
        GOOGLE_TASKS:
          type: boolean
        DROPBOX:
          type: boolean
        slackIntegrationDetails:
          $ref: "#/components/schemas/SlackIntegrationDetails"
    InterpretedPlanGet:
      required:
      - id
      - planDetails
      - planType
      type: object
      properties:
        planType:
          type: string
        id:
          type: string
        planDetails:
          $ref: "#/components/schemas/PlanView"
      description: For use in response to an HTTP Get call.
    InterpretedPlansGet:
      required:
      - interpretedPlans
      type: object
      properties:
        interpretedPlans:
          type: array
          description: the list of interpreted plans
          items:
            $ref: "#/components/schemas/InterpretedPlanGet"
      description: For use in HTTP Get calls that return a list of InterpretedPlanGet
        interpretedPlans
    Interval:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        empty:
          type: boolean
        unboundedStart:
          type: boolean
        unboundedEnd:
          type: boolean
    InviteeEligibility:
      required:
      - oneOnOneInviteeEligibility
      - resolvedEmail
      - resolvedId
      - shouldOfferTeamInvite
      type: object
      properties:
        oneOnOneInviteeEligibility:
          $ref: "#/components/schemas/OneOnOneInviteeEligibility"
        shouldOfferTeamInvite:
          type: boolean
        resolvedEmail:
          type: string
        resolvedId:
          type: string
          nullable: true
    JiraIntegration:
      type: object
      properties:
        id:
          type: string
        installation:
          type: string
        available_projects:
          $ref: "#/components/schemas/ImmutableSet_JiraProject_"
        selected_project_keys:
          $ref: "#/components/schemas/ImmutableSet_String_"
        due_date_required:
          type: boolean
        withId:
          type: string
        withInstallation:
          type: string
        withAvailable_projects:
          type: array
          items:
            $ref: "#/components/schemas/JiraProject"
        withSelected_project_keys:
          type: array
          items:
            type: string
        withDue_date_required:
          type: boolean
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    JiraIntegrationPatch:
      type: object
      properties:
        installation:
          type: string
        selected_project_keys:
          $ref: "#/components/schemas/ImmutableSet_String_"
        due_date_required:
          type: boolean
          nullable: true
        withInstallation:
          type: string
        withSelected_project_keys:
          type: array
          items:
            type: string
        withDue_date_required:
          type: boolean
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    JiraProject:
      type: object
      properties:
        project_key:
          type: string
        project_name:
          type: string
        withProject_key:
          type: string
        withProject_name:
          type: string
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
        toAnalyticsValue:
          nullable: true
    LinearIntegration:
      type: object
      properties:
        id:
          type: string
        requiresLabel:
          type: boolean
        requiresDueDate:
          type: boolean
        availableTeams:
          $ref: "#/components/schemas/ImmutableList_AbstractLinearTeam_"
        selectedTeamIds:
          $ref: "#/components/schemas/ImmutableSet_String_"
        withId:
          type: string
        withRequiresLabel:
          type: boolean
        withRequiresDueDate:
          type: boolean
        withAvailableTeams:
          type: array
          items:
            $ref: "#/components/schemas/AbstractLinearTeam"
        withSelectedTeamIds:
          type: array
          items:
            type: string
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    LinearIntegrationPatch:
      type: object
      properties:
        requiresLabel:
          type: boolean
          nullable: true
        dueDateRequired:
          type: boolean
          nullable: true
        selectedTeamIds:
          type: array
          nullable: true
          items:
            type: string
        withRequiresLabel:
          type: boolean
        withDueDateRequired:
          type: boolean
        withSelectedTeamIds:
          type: array
          nullable: true
          items:
            type: string
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    LinearTaskDetails:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        owner:
          type: boolean
        status:
          $ref: "#/components/schemas/TaskStatus"
        withTaskId:
          type: integer
          format: int64
        withOwner:
          type: boolean
        withStatus:
          $ref: "#/components/schemas/TaskStatus"
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    LinkInvalidationReason:
      type: string
      enum:
      - ACCESS_LOST
      - USER_INITIATED
    List_String_:
      type: object
      allOf:
      - $ref: "#/components/schemas/SequencedCollection_String_"
      - $ref: "#/components/schemas/Collection_String_"
      - properties:
          empty:
            type: boolean
          first:
            type: string
          last:
            type: string
    LocalTimeInterval:
      required:
      - end
      - start
      type: object
      properties:
        start:
          type: string
          format: partial-time
        end:
          type: string
          format: partial-time
        duration:
          type: string
    LocationEventMatcher:
      type: object
      allOf:
      - $ref: "#/components/schemas/StringEventMatcher"
      - $ref: "#/components/schemas/AbstractEventMatcher"
    LockChangedMetadataView:
      required:
      - end
      - start
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        previousLockState:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/LockState"
        newLockState:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/LockState"
    LockState:
      type: string
      enum:
      - MANUALLY_LOCKED
      - ADJUSTED
      - UPCOMING_WINDOW
      - MANUALLY_UNLOCKED
      - DELETED
      - DECLINED
      - IN_THE_PAST
    LogContext:
      type: object
    MeetingLimit:
      required:
      - limit
      - period
      type: object
      properties:
        limit:
          type: integer
          format: int32
        period:
          $ref: "#/components/schemas/MeetingLimit.MeetingLimitPeriod"
    MeetingLimit.MeetingLimitPeriod:
      type: string
      enum:
      - DAILY
      - WEEKLY
    MeetingLocation:
      required:
      - conferenceType
      type: object
      properties:
        conferenceType:
          $ref: "#/components/schemas/ConferenceType"
        location:
          type: string
          nullable: true
        disabled:
          type: boolean
          nullable: true
    MeetingType:
      type: string
      enum:
      - DIRECT_11
      - PEER_11
      - SKIP_11
      - XFUNC_11
      - OTHER_11
      - TEAM
      - XFUNC_TEAM
      - EXEC
      - SKIP_TEAM
      - ALL_HANDS
      - ONBOARDING_TRAINING
      - COMPANY_EVENT
      - BOARD_MEETING
      - OTHER_STAFF
      - DEAL_REVIEW
      - EXECUTION_REVIEW
      - DEMO
      - PLANNING_MEETING
      - RETRO
      - EMERGENCY
      - PEOPLE_REVIEW
      - OTHER_OP
      - ROADMAP
      - CUST_MEETING
      - CUST_RESEARCH
      - CUST_URGENT
      - RECRUIT_SCREEN
      - OTHER_EXTERNAL
      - DESIGN_BRAIN
      - TECH_REVIEW
      - KICKOFF
      - REQ_BRAIN
      - OTHER_IDEATION
      - UNKNOWN
    MergeDetails:
      required:
      - key
      - sourceCalendarId
      - sourceReclaimCalendarId
      - type
      type: object
      properties:
        key:
          type: string
        type:
          $ref: "#/components/schemas/MergeDetails.EventType"
        sourceCalendarId:
          type: string
          nullable: true
        sourceReclaimCalendarId:
          type: integer
          format: int64
          nullable: true
    MergeDetails.EventType:
      type: string
      enum:
      - ORGANIZER_EVENT
      - ATTENDEE_EVENT
      - SYNC_EVENT
    MessagePost:
      required:
      - category
      - message
      - subtype
      type: object
      properties:
        category:
          type: string
        subtype:
          type: string
        message:
          type: string
    MicrosoftSettings:
      type: object
      properties:
        authnEnabled:
          type: boolean
        syncEnabled:
          type: boolean
        connectedCalendarsEnabled:
          type: boolean
        writeEnabled:
          type: boolean
        smartSeriesDetectionEnabled:
          type: boolean
        useFullyExpandedSeriesMasterForInterop:
          type: boolean
        useReclaimForNonMemberAttendeeVisibility:
          type: boolean
        resolveReclaimForNonMemberUsingCalendarView:
          type: boolean
    Moment:
      required:
      - additionalEvents
      - now
      type: object
      properties:
        event:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/Event"
        additionalEvents:
          type: array
          items:
            $ref: "#/components/schemas/Event"
        now:
          type: string
          format: date-time
      description: "Reflects what the current moment of time is for a user. Payload\
        \ includes the \"primary\" active event (or none, if nothing is active) as\
        \ well as any additional events that might also be in flight but are deemed\
        \ by Reclaim as secondary/less important. Additionally, if the active event\
        \ is a Reclaim-managed assignment (ex: task, habit, smart 1:1), it is also\
        \ included in the payload. When there are multiple active events, the logic\
        \ for what is considered \"primary\" vs \"secondary\" is an internal implementation,\
        \ but generally speaking it should match the same logic that the Slack integration\
        \ uses for determining which status to display when there are overlaps."
    MomentSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    NoneEventMatcher:
      required:
      - matchers
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractEventMatcher"
      - properties:
          matchers:
            type: array
            items:
              $ref: "#/components/schemas/EventMatcher"
    NotEventMatcher:
      required:
      - toNegate
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractEventMatcher"
      - properties:
          toNegate:
            $ref: "#/components/schemas/EventMatcher"
    NotificationKeyRequest:
      type: object
      properties:
        notificationKey:
          type: string
          nullable: true
    OauthErrorCodes:
      type: string
      enum:
      - auth_failed
      - access_token
      - invalid_state
      - invalid_id_token
      - invalid_scopes
      - primary_mismatch
      - credential_not_found
      - wrong_account
      - not_a_google_calendar_user
      - hosted_on_premise
      - wrong_domain
      - unknown
      - primary_calendar_not_found
      x-enum-varnames:
      - auth_failed
      - access_token
      - invalid_state
      - invalid_id_token
      - invalid_scopes
      - primary_mismatch
      - credential_not_found
      - wrong_account
      - not_a_google_calendar_user
      - hosted_on_premise
      - wrong_domain
      - unknown
      - primary_calendar_not_found
    ObservedUser:
      type: object
      allOf:
      - $ref: "#/components/schemas/LogContext"
      - properties:
          id:
            type: string
          trackingCode:
            type: string
          edition:
            $ref: "#/components/schemas/ReclaimEdition"
    OnboardFocusTimeRequest:
      required:
      - schedulingTypeV2
      type: object
      properties:
        schedulingType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/FocusTimeSchedulingType"
        schedulingTypeV2:
          $ref: "#/components/schemas/FocusTimeSchedulingTypeV2"
        countingStyle:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/FocusTimeCountingStyle"
        balloonFill:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/BalloonFillRequest"
        circuitBreaker:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/CircuitBreakerRequest"
    OnboardedState:
      required:
      - hasDecompressionTime
      - hasTravelBuffer
      type: object
      properties:
        habitTemplateKeys:
          type: array
          nullable: true
          deprecated: true
          items:
            $ref: "#/components/schemas/HabitTemplateKey"
        smartHabitTemplateKeys:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/SmartHabitTemplateKey"
        hasTravelBuffer:
          type: boolean
        hasDecompressionTime:
          type: boolean
        goals:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/UserProfileGoal"
        detectedHabitEventKeysToConvert:
          type: array
          nullable: true
          items:
            type: string
        detectedMeetingEventKeysToConvert:
          type: array
          nullable: true
          items:
            type: string
        detectedAttendeeMeetingsToInviteOrganizer:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
        selectedSharedHabitIds:
          type: array
          nullable: true
          items:
            type: string
        customHabitTemplateIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
        focusTimeRequest:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/OnboardFocusTimeRequest"
    OneOfActionView:
      required:
      - options
      - policyId
      type: object
      properties:
        policyId:
          $ref: "#/components/schemas/SchedulePolicyIdView"
        options:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleActionView"
        type:
          type: string
    OneOnOneInviteeEligibility:
      type: string
      enum:
      - RECLAIM_USER
      - NON_RECLAIM_USER_W_CALENDAR_ACCESS
      - NON_RECLAIM_USER
    OneOnOneSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    OpenAISettings:
      type: object
      properties:
        enabled:
          type: boolean
    OptionsLoadEndpointRequest:
      type: object
      properties:
        response_url:
          type: string
          nullable: true
        payload:
          type: string
          nullable: true
    OrEventMatcher:
      required:
      - left
      - right
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractEventMatcher"
      - properties:
          left:
            $ref: "#/components/schemas/EventMatcher"
          right:
            $ref: "#/components/schemas/EventMatcher"
    OrgMetadata:
      type: object
      properties:
        employeeNumber:
          type: string
          nullable: true
        costCenter:
          type: string
          nullable: true
        organization:
          type: string
          nullable: true
        division:
          type: string
          nullable: true
        department:
          type: string
          nullable: true
        manager:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/OrgMetadata.OrgManager"
        customValues:
          type: object
          additionalProperties: true
          nullable: true
    OrgMetadata.OrgManager:
      required:
      - displayName
      - managerId
      - ref
      type: object
      properties:
        managerId:
          type: string
        displayName:
          type: string
        ref:
          type: string
    ParticipantRole:
      type: string
      enum:
      - NONE
      - ORGANIZER
      - REQUIRED
      - OPTIONAL
      - ANY_OF
      - ROUND_ROBIN
    PatchSmartHabitCustomTemplateRequest:
      type: object
      properties:
        title:
          type: string
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        eventType:
          $ref: "#/components/schemas/SmartSeriesEventType"
        color:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/EventColor"
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        oneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        recurrence:
          $ref: "#/components/schemas/RecurrenceDefinition"
        starting:
          type: string
          format: date
          nullable: true
        ending:
          type: string
          format: date
          nullable: true
        idealTime:
          type: string
          format: partial-time
        durationMinMins:
          type: integer
          format: int32
        durationMaxMins:
          type: integer
          format: int32
        defenseAggression:
          $ref: "#/components/schemas/DefenseAggression"
        defendedDescription:
          type: string
          nullable: true
        visibility:
          $ref: "#/components/schemas/SmartSeriesVisibility"
        failurePolicy:
          $ref: "#/components/schemas/SmartSeriesBookingFailurePolicy"
        reservedWords:
          type: array
          items:
            type: string
        description:
          type: string
    PatchSmartHabitRequest:
      type: object
      properties:
        googleMeet:
          type: boolean
          deprecated: true
        conferenceType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ConferenceType"
        autoDecline:
          type: boolean
        guestsCanModify:
          type: boolean
        title:
          type: string
        description:
          type: string
          nullable: true
        recurrence:
          $ref: "#/components/schemas/RecurrenceDefinition"
        starting:
          type: string
          format: date
        ending:
          type: string
          format: date
          nullable: true
        idealTime:
          type: string
          format: partial-time
        durationMinMins:
          type: integer
          format: int32
        durationMaxMins:
          type: integer
          format: int32
          nullable: true
        eventType:
          $ref: "#/components/schemas/SmartSeriesEventType"
        color:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/EventColor"
        defenseAggression:
          $ref: "#/components/schemas/DefenseAggression"
        visibility:
          $ref: "#/components/schemas/SmartSeriesVisibility"
        defendedDescription:
          type: string
          nullable: true
        autoDeclineText:
          type: string
          nullable: true
        organizer:
          $ref: "#/components/schemas/SmartSeriesOrganizerRequest"
        attendees:
          type: array
          items:
            $ref: "#/components/schemas/SmartSeriesAttendeeRequest"
        resources:
          type: array
          items:
            $ref: "#/components/schemas/SmartSeriesResourceRequest"
        location:
          type: string
          nullable: true
        reservedWords:
          type: array
          items:
            type: string
        dependencyType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SmartSeriesDependencyType"
        dependencyRef:
          type: integer
          format: int64
          nullable: true
        failurePolicy:
          $ref: "#/components/schemas/SmartSeriesBookingFailurePolicy"
        minLeadTimeMins:
          type: integer
          format: int64
        fixedTimePolicy:
          type: boolean
        rescheduleUnstartedOverride:
          type: boolean
          nullable: true
        forceSuccessor:
          type: boolean
        reminders:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        calendarId:
          type: integer
          format: int64
    PatchSmartMeetingRequest:
      type: object
      properties:
        googleMeet:
          type: boolean
          deprecated: true
        conferenceType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ConferenceType"
        autoDecline:
          type: boolean
        guestsCanModify:
          type: boolean
        title:
          type: string
        description:
          type: string
          nullable: true
        recurrence:
          $ref: "#/components/schemas/RecurrenceDefinition"
        starting:
          type: string
          format: date
        ending:
          type: string
          format: date
          nullable: true
        idealTime:
          type: string
          format: partial-time
        durationMinMins:
          type: integer
          format: int32
        durationMaxMins:
          type: integer
          format: int32
          nullable: true
        eventType:
          $ref: "#/components/schemas/SmartSeriesEventType"
        color:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/EventColor"
        defenseAggression:
          $ref: "#/components/schemas/DefenseAggression"
        visibility:
          $ref: "#/components/schemas/SmartSeriesVisibility"
        defendedDescription:
          type: string
          nullable: true
        autoDeclineText:
          type: string
          nullable: true
        organizer:
          $ref: "#/components/schemas/SmartSeriesOrganizerRequest"
        attendees:
          type: array
          items:
            $ref: "#/components/schemas/SmartSeriesAttendeeRequest"
        resources:
          type: array
          items:
            $ref: "#/components/schemas/SmartSeriesResourceRequest"
        location:
          type: string
          nullable: true
        reservedWords:
          type: array
          items:
            type: string
        dependencyType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SmartSeriesDependencyType"
        dependencyRef:
          type: integer
          format: int64
          nullable: true
        failurePolicy:
          $ref: "#/components/schemas/SmartSeriesBookingFailurePolicy"
        minLeadTimeMins:
          type: integer
          format: int64
        fixedTimePolicy:
          type: boolean
        rescheduleUnstartedOverride:
          type: boolean
          nullable: true
        forceSuccessor:
          type: boolean
        reminders:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        calendarId:
          type: integer
          format: int64
    PeriodSkippedDueToReservedWordMetadataView:
      type: object
      properties:
        periodStart:
          type: string
          format: date-time
          nullable: true
        periodEnd:
          type: string
          format: date-time
          nullable: true
        eventWithReservedWord:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/EventKey"
        eventWithReservedWordStart:
          type: string
          format: date-time
          nullable: true
        eventWithReservedWordEnd:
          type: string
          format: date-time
          nullable: true
    PeriodSkippedMetadataView:
      type: object
      properties:
        start:
          type: string
          format: date-time
          nullable: true
        end:
          type: string
          format: date-time
          nullable: true
    PlanView:
      type: object
      description: Interface to tag calendar plan view models meant to be sent to
        client applications.
    PlannerActionIntermediateResult:
      required:
      - events
      type: object
      properties:
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
        taskOrHabit:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TaskOrHabit"
        timeoutReached:
          type: boolean
          nullable: true
        userInfoMessage:
          type: string
          nullable: true
    PlatformEventType:
      type: string
      enum:
      - DEFAULT
      - OUT_OF_OFFICE
      - FROM_MAIL
      - WORKING_LOCATION
      - FOCUS_TIME
      - BIRTHDAY
    Predicate_Event_:
      type: object
    PrioritiesSettings:
      type: object
      properties:
        enabled:
          type: boolean
    Prioritizable:
      type: object
      properties:
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        priorityUntil:
          type: string
          format: date
      discriminator:
        propertyName: prioritizableType
        mapping:
          HABIT: "#/components/schemas/DailyHabit"
          TASK: "#/components/schemas/Task"
          ONE_ON_ONE: "#/components/schemas/RecurringOneOnOne"
    PriorityLevel:
      type: string
      enum:
      - P1
      - P2
      - P3
      - P4
      - PRIORITIZE
      - DEFAULT
      x-deprecated:
      - PRIORITIZE
      - DEFAULT
    PrioritySource:
      type: string
      enum:
      - MANUAL
      - AI
      - RULES
    ProductUsageReport:
      required:
      - actuals
      - currentEdition
      - overage
      - recommendedEdition
      - terminalActuals
      - terminalEdition
      - usageEdition
      type: object
      properties:
        currentEdition:
          $ref: "#/components/schemas/ReclaimEdition"
        actuals:
          properties:
            MAX_TEAM_SIZE:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SCHEDULER_WEEKS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_TASKS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_CALENDARS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_SYNCS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_HABITS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_TASKS_WEEK:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            TRAVEL_TIME:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            DECOMPRESSION_TIME:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            CUSTOM_BLOCKING:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            CUSTOM_BLOCKING_DECOMPRESSION:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            CUSTOM_BLOCKING_HABITS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            CUSTOM_BLOCKING_CALENDAR_SYNC:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            CUSTOM_SLACK_STATUS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_SCHEDULING_LINKS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            DERIVATIVE_SCHEDULING_LINKS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SCHEDULING_LINK_SURVEY:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SCHEDULING_LINK_REDIRECT:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_SCHEDULING_LINK_MEETINGS_QUARTER:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_1_ON_1_ORGANIZE:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_1_ON_1_ATTEND:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_CUSTOM_TIME_SCHEMES:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATIONS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_GOOGLE_TASKS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_GOOGLE_ADD_ON:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_SLACK:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_RAYCAST:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_ZOOM:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_TODOIST:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_LINEAR:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_JIRA:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_CLICKUP:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_ASANA:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_OFFICE_365:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_MONDAY:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_TRELLO:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_DROPBOX:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SUPPORT:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SSO:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            TEAM_ANALYTICS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            EVENT_PREFERENCES:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            DELEGATED_ACCESS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SCHEDULING_LINK_ROUND_ROBIN:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SCHEDULING_LINK_BRANDING:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SMART_MEETING_ATTENDEE_USERS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            WEBHOOKS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_STATS_WINDOW:
              $ref: "#/components/schemas/EntitlementActual_Object_"
        terminalActuals:
          properties:
            MAX_TEAM_SIZE:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SCHEDULER_WEEKS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_TASKS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_CALENDARS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_SYNCS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_HABITS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_TASKS_WEEK:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            TRAVEL_TIME:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            DECOMPRESSION_TIME:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            CUSTOM_BLOCKING:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            CUSTOM_BLOCKING_DECOMPRESSION:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            CUSTOM_BLOCKING_HABITS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            CUSTOM_BLOCKING_CALENDAR_SYNC:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            CUSTOM_SLACK_STATUS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_SCHEDULING_LINKS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            DERIVATIVE_SCHEDULING_LINKS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SCHEDULING_LINK_SURVEY:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SCHEDULING_LINK_REDIRECT:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_SCHEDULING_LINK_MEETINGS_QUARTER:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_1_ON_1_ORGANIZE:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_1_ON_1_ATTEND:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_CUSTOM_TIME_SCHEMES:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATIONS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_GOOGLE_TASKS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_GOOGLE_ADD_ON:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_SLACK:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_RAYCAST:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_ZOOM:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_TODOIST:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_LINEAR:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_JIRA:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_CLICKUP:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_ASANA:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_OFFICE_365:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_MONDAY:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_TRELLO:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            INTEGRATION_DROPBOX:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SUPPORT:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SSO:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            TEAM_ANALYTICS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            EVENT_PREFERENCES:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            DELEGATED_ACCESS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SCHEDULING_LINK_ROUND_ROBIN:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SCHEDULING_LINK_BRANDING:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            SMART_MEETING_ATTENDEE_USERS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            WEBHOOKS:
              $ref: "#/components/schemas/EntitlementActual_Object_"
            MAX_STATS_WINDOW:
              $ref: "#/components/schemas/EntitlementActual_Object_"
        usageEdition:
          $ref: "#/components/schemas/ReclaimEdition"
        terminalEdition:
          $ref: "#/components/schemas/ReclaimEdition"
        recommendedEdition:
          $ref: "#/components/schemas/ReclaimEdition"
        overage:
          type: boolean
    ProductUsageSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    ProjectsSettings:
      type: object
      properties:
        enabled:
          type: boolean
    QuestSettings:
      type: object
      properties:
        enabled:
          type: boolean
    QuestSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    QuestType:
      type: string
      enum:
      - HOURS_OVERVIEW_2
      - PLANNER_OVERVIEW_2
      - TASK_INTEGRATIONS_2
      - EXTENSIONS_2
      - AUTO_COLOR_CODING
      - PRIORITIZATION
      - BUILD_YOUR_TEAM
      - SETTINGS_OVERVIEW_2
      - FLEXIBLE_TIME_BLOCKING
      - MEETING_BUFFERS
      - SCHEDULING_LINK_OVERVIEW_2
      - CALENDAR_SYNC_OVERVIEW_2
      - SLACK_STATUS_SYNC_2
      - NO_MEETING_DAYS
      - SMART_1_1_2
      - STATS_2
      - HABITS_OVERVIEW_2
      - TASKS_OVERVIEW_2
      - TASKS_BATCH_ACTIONS
      - SMART_MEETINGS_OVERVIEW
      - SMART_HABITS_OVERVIEW
      - SMART_MEETINGS_JUST_NEW
      - SMART_HABITS_JUST_NEW
      - WELCOME_TO_RECLAIM
      - SET_AVAILABILITY
      - SYNC_CALENDAR
      - SET_SCHEDULING_HOURS
      - INSTALL_GCAL_ADDON
      - INSTALL_SLACK_INTEGRATION
      - HABITS_OVERVIEW
      - CREATE_AND_CUSTOMIZE_HABITS
      - MANAGE_HABITS
      - SCHEDULING_LINKS_OVERVIEW
      - SETUP_SCHEDULING_LINKS
      - SETUP_TEAM_LINKS
      - SMART_ONE_ON_ONE_OVERVIEW
      - SETUP_FIRST_SMART_ONE_ON_ONE
      - MANAGE_SMART_ONE_ON_ONE
      - TASK_OVERVIEW
      - ADD_FIRST_TASK
      - ADD_TASK_INTEGRATION
      - MANAGE_TASKS
      - SET_TASK_DEFAULTS
      - AUTO_SCHEDULE_BREAK_AND_TRAVEL_TIME
      - SETUP_NO_MEETING_DAYS
      - CUSTOMIZE_EVENT_COLOR_CODING
      - TRACK_AND_ANALYZE_PRODUCTIVITY
      - ADD_MEMBERS_TO_TEAM
      - SELECT_PLAN
    RSVPSetting:
      type: object
      properties:
        calendarSync:
          $ref: "#/components/schemas/DefaultRsvpAvailability"
    ReclaimEdition:
      type: string
      enum:
      - NONE
      - TRIAL
      - ASSISTANT
      - PRO
      - TEAM
      - REWARD
      - LEGACY_PRO_TRIAL
      - LEGACY_TEAM_TRIAL
      - LITE
      - STARTER
      - BUSINESS
      - TRIAL_BUSINESS
      - TRIAL_BUSINESS_12W
      - TRIAL_BUSINESS_FOR_LEGACY_PLANS
      - ENTERPRISE
      - TEAM_REWARD
      - LITE_V2
    ReclaimEventMetadata:
      type: object
      properties:
        eventReference:
          type: string
          nullable: true
        version:
          type: integer
          format: int32
        eventType:
          $ref: "#/components/schemas/ReclaimEventType"
    ReclaimEventType:
      type: string
      enum:
      - USER
      - SYNC
      - HABIT_ASSIGNMENT
      - SMART_HABIT
      - ONE_ON_ONE_ASSIGNMENT
      - SMART_MEETING
      - TASK_ASSIGNMENT
      - CONF_BUFFER
      - TRAVEL_BUFFER
      - SCHEDULING_LINK_MEETING
      - UNKNOWN
      - FOCUS
    Recurrence:
      type: string
      enum:
      - Daily
      - Weekly
      - Biweekly
      - Monthly
      - Quarterly
      x-enum-descriptions:
      - ""
      - ""
      - Every other week.
      - ""
      - ""
      x-enum-varnames:
      - Daily
      - Weekly
      - Biweekly
      - Monthly
      - Quarterly
    RecurrenceDefinition:
      required:
      - frequency
      type: object
      properties:
        interval:
          type: integer
          format: int32
        frequency:
          $ref: "#/components/schemas/Frequency"
        idealDays:
          type: array
          items:
            $ref: "#/components/schemas/DayOfWeek"
        idealMonthlyDay:
          $ref: "#/components/schemas/IdealMonthlyDay"
        daysBetweenPeriods:
          type: integer
          format: int32
          readOnly: true
    RecurrenceExDates:
      required:
      - timezone
      - value
      type: object
      properties:
        value:
          type: string
        timezone:
          type: string
    RecurrenceForPolicy:
      type: string
      enum:
      - EVERY_WEEK_DAY
      - EVERY_DAY
    RecurringAssignmentAttendee.Status:
      type: string
      enum:
      - INVITING
      - PENDING
      - ACCEPTED
      - DECLINED
      - ASSUMED_ACCEPTED
    RecurringAssignmentInstance:
      required:
      - end
      - eventId
      - eventStatus
      - instanceId
      - start
      type: object
      properties:
        instanceId:
          type: integer
          format: int64
        eventId:
          type: string
        eventKey:
          $ref: "#/components/schemas/EventKey"
        eventStatus:
          $ref: "#/components/schemas/EventStatus"
        etag:
          type: string
        attendees:
          type: array
          items:
            type: object
            additionalProperties: true
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    RecurringAssignmentStatus:
      type: string
      enum:
      - NEW
      - ACCEPTED
      - DECLINED
      - SCHEDULED
      - INVITEE_ERROR
    RecurringAssignmentType:
      type: string
      enum:
      - ONE_ON_ONE
      - DAILY_HABIT
      - TASK
    RecurringEventUpdatePeriod:
      type: string
      enum:
      - ALL
      - SINGLE
    RecurringOneOnOne:
      required:
      - adjusted
      - created
      - deleted
      - displayTitle
      - duration
      - effectiveTimePolicy
      - enabled
      - id
      - idealTime
      - instances
      - invitee
      - inviteeTimePolicy
      - organizerTimePolicy
      - organizerUserId
      - organizersTimeZone
      - priority
      - recurrence
      - recurringEventId
      - rrule
      - status
      - title
      - updated
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        snoozeUntil:
          type: string
          format: date-time
          nullable: true
        enabled:
          type: boolean
        idealTime:
          type: string
          format: partial-time
        idealDay:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/DayOfWeek"
        invitee:
          $ref: "#/components/schemas/ThinPerson"
        inviteeTimePolicyType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicyType"
        inviteeOneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        inviteeTimeSchemeId:
          type: string
          nullable: true
        displayTitle:
          type: string
        organizerUserId:
          type: string
        instances:
          type: array
          items:
            $ref: "#/components/schemas/RecurringAssignmentInstance"
        duration:
          type: integer
          format: int32
        conferenceType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ConferenceType"
        conferenceData:
          type: object
          additionalProperties: true
          nullable: true
        recurringEventId:
          type: string
        inviteKey:
          type: string
          nullable: true
        additionalDescription:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        status:
          $ref: "#/components/schemas/RecurringAssignmentStatus"
        recurrence:
          $ref: "#/components/schemas/Recurrence"
        organizersTimeZone:
          type: string
        deleted:
          type: boolean
        rrule:
          type: string
        organizer:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ThinPerson"
        adjusted:
          type: boolean
        effectiveTimePolicy:
          $ref: "#/components/schemas/TimePolicy"
        organizerTimePolicy:
          $ref: "#/components/schemas/AttendeeTimePolicyView"
        inviteeTimePolicy:
          $ref: "#/components/schemas/AttendeeTimePolicyView"
        organizerTimePolicyType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicyType"
        organizerOneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        organizerTimeSchemeId:
          type: string
          nullable: true
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        prioritizableType:
          type: string
    RecurringOneOnOneRespondRequest:
      required:
      - status
      type: object
      properties:
        status:
          $ref: "#/components/schemas/RecurringAssignmentAttendee.Status"
    RecurringOneOnOne_1:
      required:
      - invitee
      type: object
      properties:
        id:
          type: integer
          format: int64
        timesPerPeriod:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        enabled:
          type: boolean
        notification:
          type: boolean
        organizerTimePolicyType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicyType"
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        organizerOneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        oneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        organizerTimeSchemeId:
          type: string
          nullable: true
        timeSchemeId:
          type: string
          nullable: true
        idealTime:
          type: string
          format: partial-time
        idealDay:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/DayOfWeek"
        rrule:
          type: string
        recurrence:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/Recurrence"
        duration:
          maximum: 480
          minimum: 15
          type: integer
          description: Duration min in minutes
          format: int32
        deleted:
          type: boolean
          description: Set for websocket callbacks.
        invitee:
          $ref: "#/components/schemas/ThinPerson"
        inviteeTimePolicyType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicyType"
        inviteeTimeSchemeId:
          type: string
          nullable: true
        inviteeOneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        inviteKey:
          type: string
          nullable: true
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        priorityUntil:
          type: string
          format: date
        snoozeUntil:
          type: string
          format: date-time
          nullable: true
        assistTimePolicy:
          $ref: "#/components/schemas/TimePolicy"
        conferenceType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ConferenceType"
        conferenceData:
          type: object
          additionalProperties: true
          nullable: true
        location:
          type: string
          nullable: true
        status:
          $ref: "#/components/schemas/RecurringAssignmentStatus"
        organizerUserId:
          type: string
        additionalDescription:
          type: string
          nullable: true
        recurringEventId:
          type: string
        instances:
          type: array
          items:
            $ref: "#/components/schemas/RecurringAssignmentInstance"
        personalizedInviteMessage:
          type: string
          nullable: true
        title:
          type: string
        displayTitle:
          type: string
        organizersTimeZone:
          type: string
        eventFilter:
          $ref: "#/components/schemas/Predicate_Event_"
        recurringAssignmentType:
          $ref: "#/components/schemas/RecurringAssignmentType"
        reclaimEventType:
          $ref: "#/components/schemas/ReclaimEventType"
    RecurringOneOnOne_2:
      required:
      - invitee
      type: object
      properties:
        id:
          type: integer
          format: int64
        timesPerPeriod:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        enabled:
          type: boolean
        notification:
          type: boolean
        organizerTimePolicyType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicyType"
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        organizerOneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        oneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        organizerTimeSchemeId:
          type: string
          nullable: true
        timeSchemeId:
          type: string
          nullable: true
        idealTime:
          type: string
          format: partial-time
        idealDay:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/DayOfWeek"
        rrule:
          type: string
        recurrence:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/Recurrence"
        duration:
          maximum: 480
          minimum: 15
          type: integer
          description: Duration min in minutes
          format: int32
        deleted:
          type: boolean
          description: Set for websocket callbacks.
        invitee:
          $ref: "#/components/schemas/ThinPerson"
        inviteeTimePolicyType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicyType"
        inviteeTimeSchemeId:
          type: string
          nullable: true
        inviteeOneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        inviteKey:
          type: string
          nullable: true
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        priorityUntil:
          type: string
          format: date
        snoozeUntil:
          type: string
          format: date-time
          nullable: true
        assistTimePolicy:
          $ref: "#/components/schemas/TimePolicy"
        conferenceType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ConferenceType"
        conferenceData:
          type: object
          additionalProperties: true
          nullable: true
        location:
          type: string
          nullable: true
        status:
          $ref: "#/components/schemas/RecurringAssignmentStatus"
        organizerUserId:
          type: string
        additionalDescription:
          type: string
          nullable: true
        recurringEventId:
          type: string
        instances:
          type: array
          items:
            $ref: "#/components/schemas/RecurringAssignmentInstance"
        personalizedInviteMessage:
          type: string
          nullable: true
        title:
          type: string
        displayTitle:
          type: string
        organizersTimeZone:
          type: string
        eventFilter:
          $ref: "#/components/schemas/Predicate_Event_"
        recurringAssignmentType:
          $ref: "#/components/schemas/RecurringAssignmentType"
        reclaimEventType:
          $ref: "#/components/schemas/ReclaimEventType"
    ReferralStats:
      required:
      - active
      - deleted
      - signedUp
      type: object
      properties:
        signedUp:
          type: integer
          format: int32
        active:
          type: integer
          format: int32
        deleted:
          type: integer
          format: int32
        claimed:
          type: integer
          format: int32
        availableCredits:
          type: integer
          format: int32
    Reindex:
      required:
      - reindexDirection
      - relativeTaskId
      type: object
      properties:
        relativeTaskId:
          type: integer
          format: int64
        reindexDirection:
          $ref: "#/components/schemas/ReindexDirection"
    ReindexDirection:
      type: string
      enum:
      - before
      - after
      x-enum-varnames:
      - before
      - after
    RepairCustomersRequest:
      required:
      - partnerStackKey
      type: object
      properties:
        partnerStackKey:
          type: string
    RequiresTravelEventMatcher:
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractEventMatcher"
      - properties:
          predicateValue:
            type: boolean
    RescheduleEventActionView:
      required:
      - event
      - policyId
      type: object
      properties:
        policyId:
          $ref: "#/components/schemas/SchedulePolicyIdView"
        event:
          $ref: "#/components/schemas/ScheduleActionEventView"
        type:
          type: string
    RescheduleEventAndCancelOthersActionView:
      required:
      - event
      - eventsToCancel
      - policyId
      type: object
      properties:
        policyId:
          $ref: "#/components/schemas/SchedulePolicyIdView"
        event:
          $ref: "#/components/schemas/ScheduleActionEventView"
        eventsToCancel:
          type: array
          items:
            $ref: "#/components/schemas/CancelEventActionView"
        type:
          type: string
    ResourceType:
      type: string
      enum:
      - user
      - task
      - tag
      - project
      - workspace
      - story
      - webhook
      - user_task_list
      - custom_field
      - attachment
      - team
      x-enum-varnames:
      - user
      - task
      - tag
      - project
      - workspace
      - story
      - webhook
      - user_task_list
      - custom_field
      - attachment
      - team
    Resources:
      required:
      - habitList
      - oneOnOneList
      - schedulingLinkList
      - smartHabitsList
      - smartMeetingsList
      - taskList
      type: object
      properties:
        taskList:
          type: array
          items:
            $ref: "#/components/schemas/Task"
        habitList:
          type: array
          items:
            $ref: "#/components/schemas/DailyHabit"
        oneOnOneList:
          type: array
          items:
            $ref: "#/components/schemas/RecurringOneOnOne"
        schedulingLinkList:
          type: array
          items:
            $ref: "#/components/schemas/SchedulingLink"
        smartMeetingsList:
          type: array
          items:
            $ref: "#/components/schemas/SmartMeetingLineageView"
        smartHabitsList:
          type: array
          items:
            $ref: "#/components/schemas/SmartHabitLineageView"
    ResponseStatus:
      type: string
      enum:
      - DECLINED
      - NEEDS_ACTION
      - TENTATIVE
      - ACCEPTED
    RestorableItem:
      required:
      - id
      - isRestorable
      - title
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        isRestorable:
          type: boolean
    RestorableSnapshot:
      required:
      - entitlement
      - removedContentMap
      - restorableSnapshot
      type: object
      properties:
        entitlement:
          $ref: "#/components/schemas/Entitlement"
        restorableSnapshot:
          type: array
          items:
            $ref: "#/components/schemas/RestorableItem"
        removedContentMap:
          type: object
          additionalProperties: true
    Rfc2445Definition:
      required:
      - exDates
      - rrule
      type: object
      properties:
        rrule:
          type: string
        exDates:
          type: array
          items:
            $ref: "#/components/schemas/RecurrenceExDates"
    RichAppendixEntry:
      required:
      - missingScopes
      - values
      type: object
      properties:
        missingScopes:
          type: array
          items:
            type: string
        values:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/AnalyticsService.RichContact"
    RoomView:
      required:
      - capacity
      - category
      - floorName
      - id
      - name
      - resourceEmail
      - resourceId
      - roomBuildingTextForSearch
      - userId
      type: object
      properties:
        id:
          type: string
        resourceId:
          type: string
        name:
          type: string
        resourceEmail:
          type: string
        capacity:
          type: integer
          format: int32
        buildingId:
          type: string
          nullable: true
        buildingName:
          type: string
          nullable: true
        buildingDescription:
          type: string
          nullable: true
        floorName:
          type: string
        category:
          type: string
        roomBuildingTextForSearch:
          type: string
        userId:
          type: string
    RsvpResponseBody:
      required:
      - responseStatus
      - sendUpdates
      type: object
      properties:
        responseStatus:
          $ref: "#/components/schemas/EventResponseStatus"
        sendUpdates:
          type: boolean
        comment:
          type: string
          nullable: true
        period:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/RsvpResponsePeriod"
    RsvpResponsePeriod:
      type: string
      enum:
      - SINGLE
      - FORWARD
      - ALL
    RsvpSettingsView:
      required:
      - calendarSyncTreatNeedsActionAs
      type: object
      properties:
        calendarSyncTreatNeedsActionAs:
          $ref: "#/components/schemas/AvailabilityType"
    ScheduleActionEventView:
      required:
      - category
      - color
      - end
      - key
      - responseStatus
      - start
      - title
      type: object
      properties:
        key:
          $ref: "#/components/schemas/EventKey"
        title:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        category:
          $ref: "#/components/schemas/EventCategory"
        color:
          $ref: "#/components/schemas/EntryColor"
        responseStatus:
          $ref: "#/components/schemas/EventResponseStatus"
    ScheduleActionRequest:
      required:
      - actionsTaken
      - scheduleWindow
      type: object
      properties:
        scheduleWindow:
          $ref: "#/components/schemas/ScheduleWindowView"
        actionsTaken:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleActionView"
    ScheduleActionResponse:
      required:
      - actionsGroupedByType
      - actionsTaken
      - current
      - scheduleWindow
      type: object
      properties:
        scheduleWindow:
          $ref: "#/components/schemas/ScheduleWindowView"
        current:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleActionEventView"
        actionsGroupedByType:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/ScheduleActionView"
        actionsTaken:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleActionView"
    ScheduleActionResultView:
      type: string
      enum:
      - SUCCESS
      - FAILED_DUE_TO_ETAG_MISMATCH
      - GENERIC_ERROR
    ScheduleActionResultWithMessageView:
      required:
      - action
      - result
      type: object
      properties:
        result:
          $ref: "#/components/schemas/ScheduleActionResultView"
        action:
          $ref: "#/components/schemas/ScheduleActionView"
        message:
          type: string
          nullable: true
    ScheduleActionView:
      type: object
      discriminator:
        propertyName: type
        mapping:
          DeclineEventActionView: "#/components/schemas/DeclineEventActionView"
          OneOfActionView: "#/components/schemas/OneOfActionView"
          RescheduleEventActionView: "#/components/schemas/RescheduleEventActionView"
          ShieldsUpForDayView: "#/components/schemas/ShieldsUpForDayView"
          CancelEventActionView: "#/components/schemas/CancelEventActionView"
          RescheduleEventAndCancelOthersActionView: "#/components/schemas/RescheduleEventAndCancelOthersActionView"
          AddBufferEventActionView: "#/components/schemas/AddBufferEventActionView"
          AddEventActionView: "#/components/schemas/AddEventActionView"
      oneOf:
      - $ref: "#/components/schemas/AddEventActionView"
      - $ref: "#/components/schemas/AddBufferEventActionView"
      - $ref: "#/components/schemas/CancelEventActionView"
      - $ref: "#/components/schemas/DeclineEventActionView"
      - $ref: "#/components/schemas/OneOfActionView"
      - $ref: "#/components/schemas/RescheduleEventActionView"
      - $ref: "#/components/schemas/RescheduleEventAndCancelOthersActionView"
      - $ref: "#/components/schemas/ShieldsUpForDayView"
    SchedulePolicyIdView:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          format: uuid
    SchedulePolicyView:
      type: object
      oneOf:
      - $ref: "#/components/schemas/AvoidConflictingEventsPolicyView"
      - $ref: "#/components/schemas/BufferEventPolicyView"
      - $ref: "#/components/schemas/HabitPolicyView"
      - $ref: "#/components/schemas/ShieldsUpPolicyView"
    ScheduleWindowView:
      required:
      - end
      - start
      type: object
      properties:
        start:
          type: string
          format: date
        end:
          type: string
          format: date
    SchedulingBehaviorSettings:
      required:
      - rescheduleUnstarted
      - taskAutoWorkflowSettings
      type: object
      properties:
        taskAutoWorkflowSettings:
          $ref: "#/components/schemas/TaskAutoWorkflowSettings"
        rescheduleUnstarted:
          type: boolean
    SchedulingLink:
      required:
      - branding
      - delayStart
      - disableBuffers
      - durations
      - effectiveTimePolicy
      - enabled
      - fixedTimePolicy
      - fourOhFourAlerts
      - hidden
      - iconType
      - id
      - linkOwnerTeamId
      - optionalOrganizer
      - organizers
      - owner
      - pageSlug
      - permissions
      - resolvedBrandingMode
      - sharedMeetingTimes
      - slug
      - title
      - webhookConfigIds
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        slug:
          type: string
        pageSlug:
          type: string
        description:
          type: string
          nullable: true
        enabled:
          type: boolean
        hidden:
          type: boolean
        mainOrganizerId:
          type: string
          nullable: true
          deprecated: true
        hostId:
          type: string
          nullable: true
        owner:
          $ref: "#/components/schemas/ThinPerson"
        linkOwnerTeamId:
          type: integer
          format: int64
        organizers:
          type: array
          items:
            $ref: "#/components/schemas/SchedulingLinkOrganizerView"
        effectiveTimePolicy:
          $ref: "#/components/schemas/TimePolicy"
        durations:
          type: array
          items:
            type: integer
            format: int32
        defaultDuration:
          type: integer
          format: int32
          nullable: true
        delayStart:
          $ref: "#/components/schemas/DelayStart"
        delayStartUnits:
          type: integer
          format: int32
          nullable: true
        daysIntoFuture:
          type: integer
          format: int32
          nullable: true
        startDate:
          type: string
          format: date
          nullable: true
        endDate:
          type: string
          format: date
          nullable: true
        priority:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SchedulingPriority"
        locationOptions:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/MeetingLocation"
        defaultLocationIndex:
          type: integer
          format: int32
          nullable: true
        iconType:
          $ref: "#/components/schemas/IconType"
        organizerRefCode:
          type: string
          nullable: true
          deprecated: true
        ownerRefCode:
          type: string
          nullable: true
        parentId:
          type: string
          nullable: true
        meetingTitle:
          type: string
          nullable: true
        linkGroupId:
          type: string
          nullable: true
        linkGroupName:
          type: string
          nullable: true
        linkGroupDescription:
          type: string
          nullable: true
        derivativeContext:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/DerivativeContext"
        expires:
          type: string
          format: date-time
          nullable: true
        reminderEmailDurationMins:
          type: integer
          format: int32
          nullable: true
        reminderEmailMessage:
          type: string
          nullable: true
        targetCalendarId:
          type: integer
          format: int64
          nullable: true
          deprecated: true
        invalidationReason:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/LinkInvalidationReason"
        permissions:
          $ref: "#/components/schemas/EntityPermissions"
        meetingLimit:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/MeetingLimit"
        survey:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/Survey"
        redirectUrl:
          type: string
          nullable: true
        disableBuffers:
          type: boolean
        sharedMeetingTimes:
          type: array
          items:
            type: integer
            format: int32
        brandingMode:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/BrandingMode"
        resolvedBrandingMode:
          $ref: "#/components/schemas/BrandingMode"
        branding:
          $ref: "#/components/schemas/SchedulingLinkBrandingResponse"
        optionalOrganizer:
          type: boolean
        ownerAttendanceType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/AttendanceType"
        fixedTimePolicy:
          type: boolean
        webhookConfigIds:
          type: array
          items:
            type: string
        fourOhFourAlerts:
          type: array
          items:
            $ref: "#/components/schemas/SchedulingLinkFourOhFourAlert"
    SchedulingLinkBrandingResponse:
      required:
      - bannerUrl
      - logoUrl
      - mode
      - websiteUrl
      type: object
      properties:
        mode:
          $ref: "#/components/schemas/BrandingMode"
        bannerUrl:
          type: string
        logoUrl:
          type: string
        websiteUrl:
          type: string
    SchedulingLinkFourOhFourAlert:
      type: string
      enum:
      - CALENDAR_ACCESS
      - DISABLED
    SchedulingLinkMemberStatus:
      type: string
      enum:
      - ACTIVE
      - UNPAID
      - NOT_IN_TEAM
      - ACCOUNT_DELETED
      - UNAUTHORIZED
    SchedulingLinkNameVisibility:
      type: string
      enum:
      - NEVER
      - USER_IS_LINK_OWNER
      - VISIBLE_TO_TEAM_MEMBERS
      - VISIBLE_ON_TEAM_MEMBERS_LINKS
      - ALWAYS
    SchedulingLinkOrganizerView:
      required:
      - attendanceType
      - optional
      - organizer
      - resolvedTimePolicy
      - role
      - timePolicyType
      - timezone
      - validConferenceTypes
      type: object
      properties:
        organizer:
          $ref: "#/components/schemas/ThinPerson"
        role:
          $ref: "#/components/schemas/SchedulingLinkRole"
        timezone:
          type: string
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        oneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        timeSchemeId:
          type: string
          nullable: true
        resolvedTimePolicy:
          $ref: "#/components/schemas/TimePolicy"
        status:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SchedulingLinkMemberStatus"
        optional:
          type: boolean
        attendanceType:
          $ref: "#/components/schemas/AttendanceType"
        validConferenceTypes:
          type: array
          items:
            $ref: "#/components/schemas/ConferenceType"
        targetCalendarId:
          type: integer
          format: int64
          nullable: true
        bookingPreference:
          type: integer
          format: int32
          nullable: true
    SchedulingLinkRole:
      type: string
      enum:
      - MAIN_ORGANIZER
      - CO_ORGANIZER
      - HOST
      x-deprecated:
      - MAIN_ORGANIZER
    SchedulingLinkSettings:
      type: object
      properties:
        enabled:
          type: boolean
        note:
          type: string
        remindersMigrated:
          type: boolean
        messageTemplates:
          type: object
          additionalProperties:
            type: string
        nameVisibility:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SchedulingLinkNameVisibility"
    SchedulingLinkSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    SchedulingPriority:
      type: string
      enum:
      - P1
      - P2
      - P3
      - P4
      - DEFAULT
      - HIGH
      x-deprecated:
      - DEFAULT
      - HIGH
    SchedulingWindowWeeks:
      type: string
      enum:
      - ONE
      - TWO
      - THREE
      - FOUR
      - FIVE
      - SIX
      - SEVEN
      - EIGHT
      - NINE
      - TEN
      - ELEVEN
      - TWELVE
    SchedulingWindowWeeksOverride:
      type: string
      enum:
      - ONE
      - TWO
      - THREE
      - FOUR
      - FIVE
      - SIX
      - SEVEN
      - EIGHT
      - NINE
      - TEN
      - ELEVEN
      - TWELVE
    ScimEmail:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
        display:
          type: string
        primary:
          type: boolean
    ScimEnterprise:
      type: object
      properties:
        employeeNumber:
          type: string
          nullable: true
        costCenter:
          type: string
          nullable: true
        organization:
          type: string
          nullable: true
        division:
          type: string
          nullable: true
        department:
          type: string
          nullable: true
        manager:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ScimManager"
    ScimManager:
      type: object
      properties:
        displayName:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        ref:
          type: string
          nullable: true
    ScimMeta:
      type: object
      properties:
        resourceType:
          type: string
        created:
          type: string
          format: date-time
    ScimName:
      required:
      - familyName
      - givenName
      type: object
      properties:
        givenName:
          type: string
        familyName:
          type: string
    ScimOperations:
      required:
      - op
      - value
      type: object
      properties:
        op:
          type: string
        path:
          type: string
        value:
          type: object
          additionalProperties: true
    ScimPatch:
      required:
      - Operations
      - schemas
      type: object
      properties:
        schemas:
          type: array
          items:
            type: string
        Operations:
          type: array
          items:
            $ref: "#/components/schemas/ScimOperations"
    ScimResource:
      type: object
    ScimResourceList:
      required:
      - Resources
      - itemsPerPage
      - startIndex
      - totalResults
      type: object
      properties:
        totalResults:
          type: integer
          format: int32
        itemsPerPage:
          type: integer
          format: int32
        startIndex:
          type: integer
          format: int32
        schemas:
          type: array
          items:
            type: string
        Resources:
          type: array
          items:
            $ref: "#/components/schemas/ScimResource"
    ScimUser:
      type: object
      properties:
        userName:
          type: string
        name:
          $ref: "#/components/schemas/ScimName"
        id:
          type: string
        emails:
          type: array
          items:
            $ref: "#/components/schemas/ScimEmail"
        active:
          type: boolean
        displayName:
          type: string
        externalId:
          type: string
        meta:
          $ref: "#/components/schemas/ScimMeta"
        schemas:
          type: array
          items:
            type: string
        scimEnterprise:
          $ref: "#/components/schemas/ScimEnterprise"
    SequencedCollection_String_:
      type: object
      allOf:
      - $ref: "#/components/schemas/Collection_String_"
      - properties:
          first:
            type: string
          last:
            type: string
    Settings:
      type: object
      properties:
        autoAddHangouts:
          type: boolean
        defaultEventLength:
          type: integer
          format: int32
        weekStart:
          type: integer
          format: int32
        format24HourTime:
          type: boolean
        locale:
          type: string
        showDeclinedEvents:
          type: boolean
        timezone:
          type: string
        dateFieldOrder:
          $ref: "#/components/schemas/DateFieldOrder"
    SharedCalendarsAccess:
      required:
      - enabled
      - oauthURI
      type: object
      properties:
        enabled:
          type: boolean
        oauthURI:
          type: string
          format: uri
    SharedSmartHabit:
      required:
      - createdAt
      - hits
      - id
      - shortCode
      - template
      - updatedAt
      type: object
      properties:
        id:
          type: integer
          format: int64
        shortCode:
          type: string
        template:
          $ref: "#/components/schemas/SmartHabitTemplate"
        sourceHabitLineageId:
          type: integer
          format: int64
          nullable: true
        hits:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        meta:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SharedSmartHabitMeta"
    SharedSmartHabitMeta:
      required:
      - background
      - description
      - title
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        background:
          type: string
    SharedSmartHabitView:
      required:
      - shortCode
      - template
      type: object
      properties:
        shortCode:
          type: string
        template:
          $ref: "#/components/schemas/SmartHabitTemplate"
        meta:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SharedSmartHabitMeta"
    ShieldsUpForDayView:
      required:
      - day
      - eventsToAdd
      - policyId
      type: object
      properties:
        policyId:
          $ref: "#/components/schemas/SchedulePolicyIdView"
        day:
          type: string
          format: date
        eventsToAdd:
          type: array
          items:
            $ref: "#/components/schemas/AddEventActionView"
        type:
          type: string
    ShieldsUpPolicyView:
      required:
      - availableChunksInDayThreshold
      - calendarId
      - id
      - timeScheme
      - title
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SchedulePolicyIdView"
        calendarId:
          type: integer
          format: int64
        title:
          type: string
        availableChunksInDayThreshold:
          type: integer
          format: int32
        timeScheme:
          $ref: "#/components/schemas/BasicTimeSchemeView"
    SignupMethod:
      type: string
      enum:
      - SCIM
      - ADMIN_API
      - SLACK
      - SELF
    SlackFeature:
      required:
      - enable
      - featureDescription
      - urlToAdd
      type: object
      properties:
        featureDescription:
          type: string
        enable:
          type: boolean
        urlToAdd:
          type: string
    SlackIntegrationDetails:
      required:
      - integrationEnable
      - workspaces
      type: object
      properties:
        integrationEnable:
          type: boolean
        workspaces:
          type: array
          items:
            $ref: "#/components/schemas/SlackWorkspace"
    SlackOutsideHoursSetting:
      required:
      - dnd
      - policy
      type: object
      properties:
        policy:
          type: string
        message:
          type: string
          nullable: true
        dnd:
          type: boolean
    SlackSettings:
      type: object
      properties:
        enabled:
          type: boolean
        customSlackStatusWaterMark:
          type: string
          nullable: true
        previousStatusWaterMarks:
          type: array
          nullable: true
          items:
            type: string
        personalSyncNotifyNew:
          type: boolean
        personalSyncNotifyUpdated:
          type: boolean
        personalSyncNotifyDeleted:
          type: boolean
        personalSyncNotificationsIncludingSelf:
          type: boolean
        habitNotifyUpcoming:
          type: boolean
        taskNotifyUpcoming:
          type: boolean
        travelNotify:
          type: boolean
        outsideHoursMigrated:
          type: boolean
        statusSync:
          $ref: "#/components/schemas/SlackSettings.StatusSync"
        statusEnabled:
          type: boolean
        privateStatus:
          $ref: "#/components/schemas/SlackStatusSetting"
        statuses:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/SlackStatusSetting"
        outSideHours:
          $ref: "#/components/schemas/SlackOutsideHoursSetting"
    SlackSettings.StatusSync:
      type: string
      enum:
      - "OFF"
      - DEFAULT
      - BUSY
      - CUSTOM
      - TEAM
    SlackStatusSetting:
      type: object
      properties:
        emoji:
          type: string
        template:
          type: string
        dnd:
          type: boolean
        enabled:
          type: boolean
    SlackWorkspace:
      required:
      - features
      - name
      type: object
      properties:
        name:
          type: string
        features:
          type: array
          items:
            $ref: "#/components/schemas/SlackFeature"
    SmartHabitCustomTemplateView:
      required:
      - defendedDescription
      - defenseAggression
      - description
      - durationMaxMins
      - durationMinMins
      - enabled
      - entityType
      - eventType
      - id
      - idealTime
      - priority
      - recurrence
      - reservedWords
      - timePolicyType
      - title
      - visibility
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        recurrence:
          $ref: "#/components/schemas/RecurrenceDefinition"
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        eventType:
          $ref: "#/components/schemas/SmartSeriesEventType"
        color:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/EventColor"
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        oneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        starting:
          type: string
          format: date
          nullable: true
        ending:
          type: string
          format: date
          nullable: true
        idealTime:
          type: string
          format: partial-time
        durationMinMins:
          type: integer
          format: int32
        durationMaxMins:
          type: integer
          format: int32
        failurePolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SmartSeriesBookingFailurePolicy"
        visibility:
          $ref: "#/components/schemas/SmartSeriesVisibility"
        defenseAggression:
          $ref: "#/components/schemas/DefenseAggression"
        defendedDescription:
          type: string
        enabled:
          type: boolean
        reservedWords:
          type: array
          items:
            type: string
        description:
          type: string
        entityType:
          $ref: "#/components/schemas/EntityTypeView"
    SmartHabitLineageView:
      $ref: "#/components/schemas/SmartSeriesLineageView"
    SmartHabitSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    SmartHabitTemplate:
      required:
      - durationMaxMins
      - durationMinMins
      - eventType
      - idealTime
      - name
      - oneOffPolicy
      - priority
      - recurrence
      - timePolicyType
      - title
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        idealTime:
          type: string
          format: partial-time
        recurrence:
          $ref: "#/components/schemas/RecurrenceDefinition"
        durationMaxMins:
          type: integer
          format: int32
        durationMinMins:
          type: integer
          format: int32
        eventType:
          $ref: "#/components/schemas/SmartSeriesEventType"
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        oneOffPolicy:
          $ref: "#/components/schemas/TimePolicy"
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        description:
          type: string
          nullable: true
        createdBy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ThinPerson"
        createdByTrackingCode:
          type: string
          nullable: true
        reservedWords:
          type: array
          nullable: true
          items:
            type: string
    SmartHabitTemplateKey:
      type: string
      enum:
      - LUNCH
      - MEDITATION
      - TAKE_A_WALK
      - READING
      - WRITING
      - MORNING_CATCHUP
      - AFTERNOON_CATCHUP
      - MONTHLY_METRICS_REVIEW
      - SPRINT_PLANNING
      - CUSTOMER_FEEDBACK_REVIEW
      - WEEKLY_STATUS_REPORT
      - PRODUCT_BACKLOG_REVIEW
      - PRODUCT_REQUIREMENTS
      - RETROSPECTIVE_PLANNING
      - PRODUCT_LAUNCH_PLANNING
      - FOCUS_TIME
      - DEBUGGING
      - FEATURE_BACKLOG
      - TESTING
      - CUSTOMER_RESEARCH
      - RECRUITMENT
      - QUARTERLY_RESEARCH_REPORT
      - STRATEGIC_PLANNING
      - DEPLOY
      - PRODUCT_DOCUMENTATION
      - CODING
      - ARCHITECTURE_DESIGN_REVIEW
      - CODE_REVIEW
      - TRAINING
      - TROUBLESHOOT_ESCALATED_ISSUES
      - REVIEW_PRODUCT_UPDATES
      - COMMUNITY_ENGAGEMENT
      - SUPPORT_TIME
      - SHARE_CUSTOMER_FEEDBACK
      - SNIPPET_TEMPLATE_UPDATES
      - ADVERTISING_REVIEW
      - COMPETITOR_RESEARCH
      - PR_PLANNING
      - SEO_REVIEW
      - SOCIAL_MEDIA_UPDATES
      - NEWSLETTER
      - BLOG_WRITING
      - WEBINAR_PREP
      - EMAIL_INBOUND_LEADS
      - KEY_ACCOUNT_CHECK_INS
      - SALES_PIPELINE_REVIEW
      - WRITE_PROPOSAL
      - CRM_UPDATES
      - PROSPECTING
      - UPDATE_SALES_PRESENTATIONS
      - OUTBOUND_CALLS
      - WEEKLY_DESIGN_REVIEW
      - FREE_DESIGN_HOUR
      - USER_RESEARCH
      - DESIGN_USER_TESTS
      - DAILY_DESIGN_TIME
      - WIREFRAMES
      - USER_FLOW_DESIGN
      - EMPLOYEE_RELATIONS_REVIEW
      - PTO_REVIEW
      - PRODUCTIVITY_REVIEW
      - DEI_REVIEW
      - PROCESS_BACKGROUND_CHECKS
      - QUARTERLY_TRAINING_PREP
      - APPLICANT_REVIEW
      - EMPLOYEE_RECOGNITION
      - PAYROLL_UPDATES
      - INTERVIEW_PREP
      - EMPLOYEE_SURVEYS
      - UPDATE_JOB_POSTINGS
      - EMPLOYEE_NEWSLETTER_PREP
      - REVIEW_DEPARTMENT_REQUIREMENTS
      - SECURITY_REVIEWS
      - TEAM_MEETING_PREP
      - LEGAL_COMPLIANCE_REVIEW
      - VENDOR_REVIEWS
      - BUSINESS_PERFORMANCE_REVIEW
      - REVIEW_PROCUREMENT_REQUESTS
      - REVIEW_SUPPLIER_AGREEMENTS
      - UPDATE_INTERNAL_POLICIES
      - ANALYZE_TECHNOLOGY_USAGE
      - REVIEW_TEAM_WORKFLOWS
      - UPDATE_OPERATIONAL_PROCEDURES
      - REVIEW_FINANCIAL_REPORTS
      - INVESTOR_UPDATE
      - MONTH_END_FINANCIAL_STATEMENTS
      - REVIEW_FORECAST_REPORTS
      - BUDGET_PLANNING
      - REVIEW_MONTHLY_REPORTS
      - REVIEW_EXPENSE_REPORT
      - PREPARE_MONTHLY_REPORTS
      - UPDATE_JOURNAL_ENTRIES
      - REVIEW_TIME_SHEETS
      - PROCESS_PAYMENTS
      - REVIEW_ACCOUNTS_PAYABLE
      - TAX_PLANNING
      - WEEKDAY_STUDY
      - GROCERY_SHOPPING
      - LAUNDRY
      - INTERNSHIP_APPLICATIONS
      - WEEKEND_STUDY
      - EXERCISE
      - CLEAN_HOUSE
      - CALL_FAMILY
      - WORK_ON_THESIS
      - REVIEW_TIME_TRACKING_ANALYTICS
      - SEND_MONTHLY_INVOICES
      - PERFORMANCE_REVIEW_PLANNING
      - SALES_AND_REVENUE_ANALYSIS
      - INVENTORY_MANAGEMENT_AND_RECONCILIATION
      - QUALITY_CONTROL_ASSESSMENTS
      - UPDATE_WEBSITE_CONTENT
      - UPDATE_SOFTWARE_SYSTEMS_AND_APPLICATIONS
      - EQUIPMENT_MAINTENANCE_AND_SERVICING
      - REVIEW_AND_REPLENISH_OFFICE_SUPPLIES
      - EVENT_AND_CONFERENCE_PLANNING
      - HEALTH_AND_SAFETY_INSPECTIONS
      - UPDATE_PROJECT_TIMELINES_AND_MILESTONES
      - REVIEW_MARKETING_STRATEGIES
      - UPDATE_EMPLOYEE_SCHEDULES
      - MARKET_RESEARCH
      - PREPARE_MONTHLY_TEAM_BUILDING_ACTIVITIES
      - CONTENT_CALENDAR_PLANNING
      - REVIEW_COMPANY_GOALS
      - ANALYZE_EMPLOYEE_TURNOVER_RATES
      - PAY_BILLS
      - PAY_CREDIT_CARD
      - MOW_LAWN
      - PERSONAL_FINANCIAL_PLANNING
      - MEAL_PLANNING
      - REVIEW_PERSONAL_GOALS
      - SELF_CARE_TIME
      - GARDENING
      - HOME_MAINTENANCE
      - DECLUTTERING_AND_DONATING
      - REVIEW_AND_UPDATE_PASSWORDS
      - UPDATE_PERSONAL_PORTFOLIO
      - UPDATE_RESUME_CV
      - SEND_MONTHLY_BIRTHDAY_CARDS
      - DAILY_JOURNALING_DIARY
      - DEEP_CLEAN_VEHICLE
      - SCHEDULE_DENTAL_CLEANING
      - RUNNING
      - MORNING_MINDFULNESS
      - BEDTIME_WINDDOWN
      - DAILY_LEARNING_HOUR
      - COMPANY_CULTURE_QUARTERLY_REVIEW
      - LEADERSHIP_MEETING_PREP
      - QUARTERLY_POLICY_PROCESS_REVIEW
      - RESOURCE_REVIEW
      - SHAREHOLDER_MEETING_PREP
      - SPEAKING_ENGAGEMENTS_PREP
      - PRODUCT_ROADMAP_REVIEW
      - MONTHLY_GTM_REVIEW
      - QUARTERLY_GOAL_PLANNING
      - MONTHLY_OPERATIONAL_REVIEW
      - AM_EXECUTIVE_EMAIL_REVIEW
      - PM_EXECUTIVE_EMAIL_REVIEW
      - DRAFT_MEMOS
      - PREP_MEETING_AGENDAS
      - PREP_MEETING_MINUTES
      - ARRANGE_WEEKLY_TRANSPORTATION
      - INVITATION_REVIEW
      - WEEKLY_APPOINTMENT_SCHEDULING
      - DOCUMENT_PREP
      - EXECUTIVE_CALENDAR_REVIEW
      - WEEKLY_EXPENSE_REPORTING
      - DELIVERABLES_FOLLOW_UP
      - PROJECT_COORDINATION
      - VENDOR_STAKEHOLDER_CHECKINS
      - WEEKLY_RESEARCH_REPORT
      - FAMILY_MOVIE_NIGHT
      - DINNER_WITH_FAMILY
      - WEEKEND_OUTING
      - FAMILY_GAME_NIGHT
      - PLAN_FAMILY_VACATION
      - SCHOOL_DROPOFF
      - ORGANIZE_PLAYDATES
      - PLAN_FAMILY_BUDGET
      - DAILY_ACCESS_ACCOUNT_REVIEW
      - NETWORK_VULNERABILITY_SCAN
      - CRITICAL_SECURITY_UPDATES
      - SECURITY_AWARENESS
      - PHISHING_SIMULATION
    SmartMeetingDeclinedMetadataView:
      type: object
      properties:
        attendees:
          type: array
          nullable: true
          items:
            type: object
            additionalProperties: true
    SmartMeetingLineageView:
      $ref: "#/components/schemas/SmartSeriesLineageView"
    SmartMeetingSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    SmartOneOnOneSettings:
      type: object
      properties:
        enabled:
          type: boolean
    SmartSeriesActionPlannedResult:
      required:
      - events
      - series
      - timeoutReached
      - userInfoMessage
      type: object
      properties:
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
        series:
          $ref: "#/components/schemas/SmartSeriesView"
        userInfoMessage:
          type: string
        timeoutReached:
          type: boolean
      description: "The expected result of a planner action. Note: this isn't the\
        \ reality at the point it's returned, but what we expect to make reality as\
        \ we execute the planner action."
    SmartSeriesAttendeeRequest:
      type: object
      properties:
        email:
          type: string
        LOG_KEY:
          type: string
        REGEX_MASK_EMAIL:
          type: string
        required:
          type: boolean
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        timeSchemeId:
          type: string
          nullable: true
        oneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        priority:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/PriorityLevel"
        responseStatus:
          $ref: "#/components/schemas/SmartSeriesAttendeeResponseStatus"
    SmartSeriesAttendeeResponseStatus:
      type: string
      enum:
      - NEEDS_ACTION
      - ACCEPTED
      - TENTATIVE
      - DECLINED
    SmartSeriesAttendeeView:
      required:
      - attendee
      - priority
      - required
      - responseStatus
      - role
      - timePolicyType
      - visibility
      type: object
      properties:
        attendee:
          $ref: "#/components/schemas/ThinPerson"
        required:
          type: boolean
        role:
          $ref: "#/components/schemas/SmartSeriesRole"
        timezone:
          type: string
          nullable: true
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        oneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        timeSchemeId:
          type: string
          nullable: true
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        responseStatus:
          $ref: "#/components/schemas/SmartSeriesAttendeeResponseStatus"
        visibility:
          $ref: "#/components/schemas/AttendeeCalendarVisibility"
    SmartSeriesBookingFailurePolicy:
      type: string
      enum:
      - REMOVE
      - LEAVE_LAST
      - LEAVE_LAST_OR_RETURN_TO_ORIGINAL
    SmartSeriesDependencyType:
      type: string
      enum:
      - BEFORE_ON_SAME_DAY
      - AFTER_ON_SAME_DAY
      - NOT_SAME_DAY
      - ATTEMPT_AFTER
    SmartSeriesEventMovedView:
      required:
      - conflicts
      type: object
      properties:
        newStart:
          type: string
          format: date-time
          nullable: true
        newEnd:
          type: string
          format: date-time
          nullable: true
        newEventStatus:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/EventStatus"
        previousStart:
          type: string
          format: date-time
          nullable: true
        previousEnd:
          type: string
          format: date-time
          nullable: true
        previousEventStatus:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/EventStatus"
        deltaDistanceFromIdeal:
          type: integer
          format: int64
          nullable: true
        deltaDuration:
          type: integer
          format: int64
          nullable: true
        conflicts:
          type: array
          items:
            $ref: "#/components/schemas/EventConflictMetadataView"
    SmartSeriesEventType:
      type: string
      enum:
      - FOCUS
      - SOLO_WORK
      - PERSONAL
      - TEAM_MEETING
      - EXTERNAL_MEETING
      - ONE_ON_ONE
      x-deprecated:
      - FOCUS
    SmartSeriesLineageView:
      type: object
      properties:
        lineageId:
          type: integer
          format: int64
        calendarId:
          type: integer
          format: int64
        type:
          $ref: "#/components/schemas/SmartSeriesType"
        status:
          $ref: "#/components/schemas/SmartSeriesStatus"
        activeSeries:
          $ref: "#/components/schemas/SmartSeriesView"
        series:
          type: array
          items:
            $ref: "#/components/schemas/SmartSeriesView"
        periods:
          type: array
          items:
            $ref: "#/components/schemas/SmartSeriesPeriodView"
        enabled:
          type: boolean
        restorable:
          type: boolean
        recurrenceType:
          $ref: "#/components/schemas/SmartSeriesRecurrenceType"
    SmartSeriesOrganizerRequest:
      type: object
      properties:
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        timeSchemeId:
          type: string
          nullable: true
        oneOffPolicy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        priority:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/PriorityLevel"
        LOG_KEY:
          type: string
        PATCH_TIME_SCHEME_ID:
          type: string
        PATCH_ONE_OFF_POLICY:
          type: string
        PATCH_PRIORITY:
          type: string
    SmartSeriesPeriodEventStatus:
      type: string
      enum:
      - NONE
      - PRESENT
      - DEFENDED
      - LOCKED
      - DONE
      - UNKNOWN
      x-deprecated:
      - UNKNOWN
    SmartSeriesPeriodSchedulerStatus:
      type: string
      enum:
      - NOT_SKIPPED
      - SKIPPED_BY_USER
      - NO_OVERLAP_WITH_TIME_SCHEME_WINDOWS
      - NO_FREE_TIME
      - NO_FREE_TIME_LEFT_LAST
      - NO_FREE_TIME_RETURN_TO_ORIGINAL
      - PARTIAL_PERIOD_SCHEDULED
      - PARTIAL_PERIOD_SKIPPED
      - SKIPPED_DUE_TO_RESERVED_WORD
    SmartSeriesPeriodView:
      required:
      - changes
      - done
      - end
      - eventKey
      - eventStatus
      - forceSkipped
      - hasTimePolicyExceptions
      - locked
      - schedulerSkipped
      - schedulerStatus
      - seriesId
      - start
      - targetDateTime
      type: object
      properties:
        eventKey:
          $ref: "#/components/schemas/EventKey"
        seriesId:
          type: integer
          format: int64
        start:
          type: string
          format: date
        end:
          type: string
          format: date
        done:
          type: boolean
        locked:
          type: boolean
        forceSkipped:
          type: boolean
          deprecated: true
        schedulerSkipped:
          type: boolean
          deprecated: true
        schedulerStatus:
          $ref: "#/components/schemas/SmartSeriesPeriodSchedulerStatus"
        eventStatus:
          $ref: "#/components/schemas/SmartSeriesPeriodEventStatus"
        eventStart:
          type: string
          format: date-time
          nullable: true
        eventEnd:
          type: string
          format: date-time
          nullable: true
        hasTimePolicyExceptions:
          type: boolean
        targetDateTime:
          type: string
          format: date-time
        changes:
          type: array
          deprecated: true
          items:
            $ref: "#/components/schemas/ChangeLogEntryView"
    SmartSeriesRecurrenceType:
      type: string
      enum:
      - SINGLE_INSTANCES
      - RECURRING_SERIES
    SmartSeriesResourceRequest:
      required:
      - email
      - roomId
      type: object
      properties:
        roomId:
          type: string
        email:
          type: string
    SmartSeriesResourceView:
      required:
      - buildingId
      - buildingName
      - capacity
      - category
      - email
      - floorName
      - roomId
      - roomName
      type: object
      properties:
        email:
          type: string
        roomId:
          type: string
          nullable: true
        capacity:
          type: integer
          format: int32
          nullable: true
        buildingId:
          type: string
          nullable: true
        buildingName:
          type: string
          nullable: true
        roomName:
          type: string
          nullable: true
        floorName:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
    SmartSeriesRole:
      type: string
      enum:
      - ORGANIZER
      - REQUIRED_ATTENDEE
      - OPTIONAL_ATTENDEE
    SmartSeriesStatus:
      type: string
      enum:
      - NEW
      - ACTIVE
      - ACTIVE_TIME_POLICY_EMPTY
      - ACTIVE_TIME_POLICY_LOW
      - ACTIVE_EVERYONE_DECLINED
      - ACTIVE_EVERY_REQUIRED_DECLINED
      - DISABLED
      - INACTIVE_CALENDAR_NOT_VALID
      - INACTIVE_CALENDAR_NOT_CONNECTED
      - INACTIVE_CALENDAR_NOT_WRITABLE
      - INACTIVE_MULTI_CONNECTED_CALENDAR
      - INACTIVE_CALENDAR_NOT_FOUND
      - INACTIVE_ORGANIZER_MISSING
      - EVERYONE_DECLINED
      - EVERY_REQUIRED_DECLINED
      - CORRUPTED
      - UNKNOWN
      - NO_ACCESS
    SmartSeriesType:
      type: string
      enum:
      - HABIT
      - MEETING
    SmartSeriesView:
      type: object
      properties:
        attendees:
          type: array
          items:
            $ref: "#/components/schemas/SmartSeriesAttendeeView"
        resources:
          type: array
          items:
            $ref: "#/components/schemas/SmartSeriesResourceView"
        id:
          type: integer
          format: int64
        calendarId:
          type: integer
          format: int64
        eventId:
          type: string
        title:
          type: string
        recurrence:
          $ref: "#/components/schemas/RecurrenceDefinition"
        starting:
          type: string
          format: date
        ending:
          type: string
          format: date
          nullable: true
        idealTime:
          type: string
          format: partial-time
        durationMinMins:
          type: integer
          format: int32
        durationMaxMins:
          type: integer
          format: int32
        eventType:
          $ref: "#/components/schemas/SmartSeriesEventType"
        defenseAggression:
          $ref: "#/components/schemas/DefenseAggression"
        visibility:
          $ref: "#/components/schemas/SmartSeriesVisibility"
        color:
          $ref: "#/components/schemas/EventColor"
        description:
          type: string
          nullable: true
        defendedDescription:
          type: string
          nullable: true
        autoDecline:
          type: boolean
        autoDeclineText:
          type: string
          nullable: true
        googleMeet:
          type: boolean
        conferenceDetails:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ConferenceDetails"
        location:
          type: string
        reservedWords:
          type: array
          items:
            type: string
        dependencyType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SmartSeriesDependencyType"
        dependencyRef:
          type: integer
          format: int64
          nullable: true
        failurePolicy:
          $ref: "#/components/schemas/SmartSeriesBookingFailurePolicy"
        timezone:
          type: string
          nullable: true
        fixedTimePolicy:
          type: boolean
        rescheduleUnstartedOverride:
          type: boolean
          nullable: true
        timePolicyType:
          $ref: "#/components/schemas/TimePolicyType"
        recurrenceType:
          $ref: "#/components/schemas/SmartSeriesRecurrenceType"
        reminders:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        status:
          $ref: "#/components/schemas/SmartSeriesStatus"
        conferenceType:
          $ref: "#/components/schemas/ConferenceType"
        guestsCanModify:
          type: boolean
    SmartSeriesVisibility:
      type: string
      enum:
      - DEFAULT
      - PRIVATE
      - PUBLIC
    SnoozeOption:
      type: string
      enum:
      - FROM_NOW_15M
      - FROM_NOW_30M
      - FROM_NOW_1H
      - FROM_NOW_2H
      - FROM_NOW_4H
      - TOMORROW
      - IN_TWO_DAYS
      - NEXT_WEEK
    Snoozeable:
      type: object
      properties:
        snoozeUntil:
          type: string
          format: date-time
          nullable: true
    SortOrder:
      type: string
      enum:
      - ASCENDING
      - DESCENDING
      - UNSORTED
    StringEventMatcher:
      required:
      - operator
      - predicateValue
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractEventMatcher"
      - properties:
          operator:
            $ref: "#/components/schemas/EventMatcherOperator"
          predicateValue:
            type: string
    SubscribeAction:
      type: object
      allOf:
      - $ref: "#/components/schemas/WebSocketRequestAction"
      - properties:
          subscription:
            $ref: "#/components/schemas/Subscription"
          subscriptionId:
            type: string
    Subscription:
      type: object
      properties:
        subscriptionType:
          $ref: "#/components/schemas/SubscriptionType"
      discriminator:
        propertyName: subscriptionType
        mapping:
          Task: "#/components/schemas/TaskSubscription"
          User: "#/components/schemas/UserSubscription"
          AssistCompleted: "#/components/schemas/AssistCompletedSubscription"
          ProductUsage: "#/components/schemas/ProductUsageSubscription"
          AssistantInteraction: "#/components/schemas/AssistantInteractionSubscription"
          AssistPlanned: "#/components/schemas/AssistPlannedSubscription"
          SyncStatus: "#/components/schemas/SyncStatusSubscription"
          SmartHabit: "#/components/schemas/SmartHabitSubscription"
          SchedulingLink: "#/components/schemas/SchedulingLinkSubscription"
          Quest: "#/components/schemas/QuestSubscription"
          Analytics: "#/components/schemas/AnalyticsSubscription"
          DailyHabit: "#/components/schemas/DailyHabitSubscription"
          OneOnOne: "#/components/schemas/OneOnOneSubscription"
          Moment: "#/components/schemas/MomentSubscription"
          Events: "#/components/schemas/EventsSubscription"
          UserReset: "#/components/schemas/UserResetSubscription"
          Team: "#/components/schemas/TeamSubscription"
          SmartMeeting: "#/components/schemas/SmartMeetingSubscription"
    SubscriptionType:
      type: string
      enum:
      - Events
      - SyncStatus
      - DailyHabit
      - OneOnOne
      - Task
      - AssistCompleted
      - AssistPlanned
      - NewSubscription
      - Moment
      - Quest
      - ProductUsage
      - User
      - Team
      - SchedulingLink
      - Analytics
      - SmartMeeting
      - SmartHabit
      - Unsubscribe
      - AssistantInteraction
      - UserReset
      x-enum-varnames:
      - Events
      - SyncStatus
      - DailyHabit
      - OneOnOne
      - Task
      - AssistCompleted
      - AssistPlanned
      - NewSubscription
      - Moment
      - Quest
      - ProductUsage
      - User
      - Team
      - SchedulingLink
      - Analytics
      - SmartMeeting
      - SmartHabit
      - Unsubscribe
      - AssistantInteraction
      - UserReset
    Survey:
      required:
      - questions
      type: object
      properties:
        questions:
          type: array
          items:
            $ref: "#/components/schemas/SurveyQuestion"
    SurveyQuestion:
      required:
      - isRequired
      - questionValue
      - type
      type: object
      properties:
        questionValue:
          type: string
        type:
          $ref: "#/components/schemas/SurveyQuestionType"
        isRequired:
          type: boolean
        options:
          type: array
          nullable: true
          items:
            type: string
    SurveyQuestionType:
      type: string
      enum:
      - ONE_LINE
      - RADIO
      - MULTI_LINE
      - DROPDOWN
      - PHONE_NUMBER
      - EMAIL
    SyncAllDayEvents:
      type: string
      enum:
      - SKIP_ALL
      - SYNC_BUSY
      - SYNC_ALL
    SyncCalendarType:
      type: string
      enum:
      - BUSINESS
      - PERSONAL
      - TRAVEL
      - OOO
    SyncFeatureSettings:
      type: object
      properties:
        enabled:
          type: boolean
        hasVipPrivileges:
          type: boolean
    SyncSettings:
      type: object
      properties:
        transparency:
          $ref: "#/components/schemas/SyncTransparency"
        workingHours:
          type: boolean
        defaultType:
          $ref: "#/components/schemas/EventType"
        type:
          $ref: "#/components/schemas/SyncCalendarType"
        color:
          $ref: "#/components/schemas/EventColor"
        allDayEvents:
          $ref: "#/components/schemas/SyncAllDayEvents"
        syncReclaimEvents:
          type: boolean
    SyncStatusSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    SyncTransparency:
      type: string
      enum:
      - DEFAULT
      - SEMI_PRIVATE
      - PRIVATE
      - PUBLIC
      - SEMI_PRIVATE_ALT
    Task:
      required:
      - adjusted
      - alwaysPrivate
      - atRisk
      - created
      - deferred
      - deleted
      - eventCategory
      - eventSubType
      - id
      - index
      - maxChunkSize
      - minChunkSize
      - notes
      - onDeck
      - priority
      - readOnlyFields
      - sortKey
      - status
      - taskSource
      - timeChunksRemaining
      - timeChunksRequired
      - timeChunksSpent
      - timeSchemeId
      - title
      - updated
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        notes:
          type: string
        eventCategory:
          $ref: "#/components/schemas/EventCategory"
        eventSubType:
          $ref: "#/components/schemas/EventSubType"
        eventColor:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/EventColor"
        status:
          $ref: "#/components/schemas/TaskStatus"
        timeChunksRequired:
          type: integer
          format: int32
        timeChunksSpent:
          type: integer
          format: int32
        timeChunksRemaining:
          type: integer
          format: int32
        minChunkSize:
          type: integer
          format: int32
        maxChunkSize:
          type: integer
          format: int32
        alwaysPrivate:
          type: boolean
        deleted:
          type: boolean
        index:
          type: number
          format: double
        due:
          type: string
          format: date-time
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        finished:
          type: string
          format: date-time
          nullable: true
        snoozeUntil:
          type: string
          format: date-time
          nullable: true
        adjusted:
          type: boolean
        atRisk:
          type: boolean
        timeSchemeId:
          type: string
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        onDeck:
          type: boolean
        deferred:
          type: boolean
        sortKey:
          type: number
          format: double
        taskSource:
          $ref: "#/components/schemas/TaskSource"
        readOnlyFields:
          type: array
          items:
            type: string
        prioritizableType:
          type: string
        type:
          type: string
    TaskAutoWorkflowSettings:
      type: object
      properties:
        category:
          $ref: "#/components/schemas/TaskAutoWorkflowType"
        durationToWaitInDays:
          type: integer
          format: int32
    TaskAutoWorkflowType:
      type: string
      enum:
      - NOTHING
      - REOPEN
      - CLOSE
    TaskCategory:
      type: string
      enum:
      - WORK
      - PERSONAL
      - BOTH
    TaskCooldown:
      type: string
      enum:
      - NONE
      - LEGACY
      - HALF_HOUR
      - ONE_HOUR
      - TWO_HOURS
      - FOUR_HOURS
      - ONCE_A_DAY
    TaskDefaults:
      type: object
      properties:
        timeChunksRequired:
          type: integer
          format: int32
        commsTimeChunksRequired:
          type: integer
          format: int32
        delayedStartInMinutes:
          type: integer
          format: int32
        dueInDays:
          type: integer
          format: int32
          nullable: true
        category:
          deprecated: true
          allOf:
          - $ref: "#/components/schemas/EventCategory"
        alwaysPrivate:
          type: boolean
        minChunkSize:
          type: integer
          format: int32
        maxChunkSize:
          type: integer
          format: int32
        timeSchemeId:
          type: string
          nullable: true
        priority:
          type: string
        onDeck:
          type: boolean
        splitUp:
          type: boolean
        googleTaskIntegrationNoDueDateWhenMissing:
          type: boolean
    TaskOrHabit:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: "#/components/schemas/AssistType"
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        recurringAssignmentType:
          $ref: "#/components/schemas/RecurringAssignmentType"
        alwaysPrivate:
          type: boolean
        title:
          type: string
        eventSubType:
          $ref: "#/components/schemas/EventSubType"
        eventCategory:
          $ref: "#/components/schemas/EventCategory"
        eventColor:
          $ref: "#/components/schemas/EventColor"
        invitees:
          type: array
          items:
            $ref: "#/components/schemas/ThinPerson"
        defendedDescription:
          type: string
        additionalDescription:
          type: string
        priority:
          $ref: "#/components/schemas/PriorityLevel"
        location:
          type: string
      discriminator:
        propertyName: type
        mapping:
          TASK: "#/components/schemas/Task"
          CUSTOM_DAILY: "#/components/schemas/DailyHabit"
      allOf:
      - $ref: "#/components/schemas/Prioritizable"
      - $ref: "#/components/schemas/Snoozeable"
      - $ref: "#/components/schemas/FlexibleTimeSpan"
      - $ref: "#/components/schemas/LogContext"
    TaskPatch:
      required:
      - patch
      - taskId
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        patch:
          type: object
          additionalProperties: true
        notificationKey:
          type: string
          nullable: true
    TaskSettings:
      required:
      - defaults
      type: object
      properties:
        enabled:
          type: boolean
        googleTasks:
          type: boolean
        defaults:
          $ref: "#/components/schemas/TaskDefaults"
        autoWorkflowSettings:
          $ref: "#/components/schemas/TaskAutoWorkflowSettings"
        scheduleWorkQueueOnly:
          type: boolean
        cooldown:
          $ref: "#/components/schemas/TaskCooldown"
    TaskSource:
      type: object
      properties:
        type:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TaskSourceType"
        id:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
    TaskSourceType:
      type: string
      enum:
      - TODOIST
      - TRELLO
      - GTASKS
      - LINEAR
      - ASANA
      - CLICK_UP
      - JIRA
      - RECLAIM_APP
      - SLACK
      - RECLAIM_ASSIST
      - RECLAIM_ASSISTANT
    TaskStatus:
      type: string
      enum:
      - NEW
      - SCHEDULED
      - IN_PROGRESS
      - COMPLETE
      - CANCELLED
      - ARCHIVED
    TaskSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    TeamFocusSettingsCreateRequest:
      required:
      - focusTimeSettings
      - focusType
      - policyType
      - title
      - visibility
      type: object
      properties:
        autoDecline:
          type: boolean
          nullable: true
        title:
          type: string
        description:
          type: string
          nullable: true
        focusType:
          $ref: "#/components/schemas/FocusType"
        focusTimeSettings:
          $ref: "#/components/schemas/FocusTimeRequest"
        policyType:
          $ref: "#/components/schemas/TimePolicyType"
        autoDeclineText:
          type: string
          nullable: true
        visibility:
          $ref: "#/components/schemas/FocusVisibility"
    TeamFocusSettingsPatchRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
          nullable: true
        focusType:
          $ref: "#/components/schemas/FocusType"
        focusTimeSettings:
          $ref: "#/components/schemas/FocusTimeRequest"
        enabled:
          type: boolean
        policyType:
          $ref: "#/components/schemas/TimePolicyType"
        autoDecline:
          type: boolean
        autoDeclineText:
          type: string
          nullable: true
        visibility:
          $ref: "#/components/schemas/FocusVisibility"
    TeamFocusSettingsView:
      required:
      - autoDecline
      - description
      - enabled
      - focusType
      - id
      - policyType
      - title
      - visibility
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        focusType:
          $ref: "#/components/schemas/FocusType"
        focusTimeSettings:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/FocusTimeSettingsView"
        enabled:
          type: boolean
        policyType:
          $ref: "#/components/schemas/TimePolicyType"
        autoDecline:
          type: boolean
        autoDeclineText:
          type: string
          nullable: true
        visibility:
          $ref: "#/components/schemas/FocusVisibility"
    TeamSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    TemplateRequest:
      required:
      - templates
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: "#/components/schemas/HabitTemplateKey"
    TentativeSlot:
      required:
      - eventMetadata
      - eventType
      - free
      - id
      - interval
      - isDamped
      - isForceBusy
      - isForceFree
      - isOrganizer
      - locked
      - priorityLevel
      - responseStatus
      - source
      - sourceKey
      - status
      type: object
      properties:
        id:
          type: string
        eventType:
          $ref: "#/components/schemas/ReclaimEventType"
        assignmentId:
          type: integer
          format: int64
          nullable: true
        smartSeriesLineageId:
          type: integer
          format: int64
          nullable: true
        status:
          $ref: "#/components/schemas/EventStatus"
        interval:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/Interval"
        free:
          type: boolean
        locked:
          type: boolean
        isForceFree:
          type: boolean
        isForceBusy:
          type: boolean
        isDamped:
          type: boolean
        responseStatus:
          $ref: "#/components/schemas/EventResponseStatus"
        source:
          $ref: "#/components/schemas/TentativeSlot.Source"
        sourceKey:
          type: string
        eventMetadata:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ReclaimEventMetadata"
        priorityLevel:
          $ref: "#/components/schemas/PriorityLevel"
        isOrganizer:
          type: boolean
        parentId:
          type: string
          nullable: true
    TentativeSlot.Source:
      type: string
      enum:
      - RECLAIM
      - CALENDAR
    ThinCalendar:
      required:
      - calendarId
      - credentialEmail
      - credentialId
      - id
      - lastSynced
      - timezone
      type: object
      properties:
        id:
          type: integer
          format: int64
        timezone:
          type: string
        calendarId:
          type: string
        lastSynced:
          type: string
          format: date-time
        credentialId:
          type: integer
          format: int64
        credentialEmail:
          type: string
    ThinPerson:
      required:
      - email
      type: object
      properties:
        reclaimUser:
          type: boolean
        userId:
          type: string
          nullable: true
        email:
          minLength: 1
          type: string
        name:
          type: string
        avatarUrl:
          type: string
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
    TimePolicy:
      required:
      - dayHours
      type: object
      properties:
        startOfWeek:
          $ref: "#/components/schemas/DayOfWeek"
        endOfWeek:
          $ref: "#/components/schemas/DayOfWeek"
        dayHours:
          properties:
            MONDAY:
              $ref: "#/components/schemas/DayHours"
            TUESDAY:
              $ref: "#/components/schemas/DayHours"
            WEDNESDAY:
              $ref: "#/components/schemas/DayHours"
            THURSDAY:
              $ref: "#/components/schemas/DayHours"
            FRIDAY:
              $ref: "#/components/schemas/DayHours"
            SATURDAY:
              $ref: "#/components/schemas/DayHours"
            SUNDAY:
              $ref: "#/components/schemas/DayHours"
    TimePolicyType:
      type: string
      enum:
      - WORK
      - PERSONAL
      - MEETING
      - ONE_OFF
      - INHERITED
      - CUSTOM
    TimeScheme:
      required:
      - description
      - features
      - id
      - policy
      - policyType
      - status
      - title
      - userId
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        status:
          $ref: "#/components/schemas/TimeSchemeStatus"
        policyType:
          $ref: "#/components/schemas/TimePolicyType"
        policy:
          $ref: "#/components/schemas/TimePolicy"
        taskCategory:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TaskCategory"
        taskTargetCalendar:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/CalendarView"
        title:
          type: string
        description:
          type: string
        features:
          type: array
          items:
            $ref: "#/components/schemas/ReclaimEventType"
    TimeSchemeCreateRequest:
      required:
      - description
      - features
      - policy
      - policyType
      - title
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        policyType:
          $ref: "#/components/schemas/TimePolicyType"
        policy:
          $ref: "#/components/schemas/TimePolicy"
        taskCategory:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TaskCategory"
        taskTargetCalendarId:
          type: integer
          format: int64
          nullable: true
        features:
          type: array
          items:
            $ref: "#/components/schemas/ReclaimEventType"
    TimeSchemeIntegrationRule:
      required:
      - action
      - id
      - index
      - ruleType
      - serviceType
      - userId
      type: object
      properties:
        dueDateRequired:
          type: boolean
          nullable: true
        id:
          type: string
        userId:
          type: string
        labels:
          type: array
          nullable: true
          items:
            type: string
        projectIds:
          type: array
          nullable: true
          items:
            type: string
        action:
          $ref: "#/components/schemas/TimeSchemeIntegrationRuleAction"
        timeSchemeId:
          type: string
          nullable: true
        serviceType:
          $ref: "#/components/schemas/TimeSchemeIntegrationRuleServiceType"
        index:
          type: integer
          format: int32
        ruleType:
          $ref: "#/components/schemas/TimeSchemeIntegrationRuleType"
        workspaceId:
          type: string
          nullable: true
    TimeSchemeIntegrationRuleAction:
      type: string
      enum:
      - SYNC_TO
      - DONT_SYNC
    TimeSchemeIntegrationRuleCreateRequest:
      required:
      - action
      - ruleType
      - serviceType
      type: object
      properties:
        labels:
          type: array
          nullable: true
          items:
            type: string
        projectIds:
          type: array
          nullable: true
          items:
            type: string
        action:
          $ref: "#/components/schemas/TimeSchemeIntegrationRuleAction"
        serviceType:
          $ref: "#/components/schemas/TimeSchemeIntegrationRuleServiceType"
        timeSchemeId:
          type: string
          nullable: true
        ruleType:
          $ref: "#/components/schemas/TimeSchemeIntegrationRuleType"
        workspaceId:
          type: string
          nullable: true
        dueDateRequired:
          type: boolean
          nullable: true
    TimeSchemeIntegrationRuleReindexRequest:
      required:
      - newIndex
      - serviceType
      - shiftDirection
      type: object
      properties:
        serviceType:
          $ref: "#/components/schemas/TimeSchemeIntegrationRuleServiceType"
        workspaceId:
          type: string
          nullable: true
        newIndex:
          type: integer
          format: int32
        shiftDirection:
          type: integer
          format: int32
    TimeSchemeIntegrationRuleServiceType:
      type: string
      enum:
      - TODOIST
      - CLICK_UP
    TimeSchemeIntegrationRuleType:
      type: string
      enum:
      - CASE
      - OTHERWISE
    TimeSchemeIntegrationRuleUpdateRequest:
      type: object
      properties:
        labels:
          type: array
          nullable: true
          items:
            type: string
        projectIds:
          type: array
          nullable: true
          items:
            type: string
        action:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimeSchemeIntegrationRuleAction"
        timeSchemeId:
          type: string
          nullable: true
        dueDateRequired:
          type: boolean
          nullable: true
    TimeSchemeStatus:
      type: string
      enum:
      - ACTIVE
      - TASK_CALENDAR_NOT_VALID
      - TASK_CALENDAR_NOT_CONNECTED
      - TASK_CALENDAR_NOT_WRITABLE
      - TASK_CALENDAR_NOT_FOUND
      - TASK_CALENDAR_MULTI_CONNECTIONS
    TimeSchemeUpdateRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        policyType:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicyType"
        policy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TimePolicy"
        taskCategory:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TaskCategory"
        taskTargetCalendarId:
          type: integer
          format: int64
          nullable: true
        features:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/ReclaimEventType"
    TimeSpentDuringWeek:
      required:
      - eventType
      - eventTypeFriendly
      - hours
      - increased
      - infinity
      - noChange
      - percentChange
      type: object
      properties:
        eventType:
          $ref: "#/components/schemas/EventType"
        eventTypeFriendly:
          type: string
        hours:
          type: number
          format: double
        percentChange:
          type: number
          format: double
        noChange:
          type: boolean
        increased:
          type: boolean
        infinity:
          type: boolean
    TimeZoneView:
      required:
      - fullLabel
      - shortLabel
      - timeZone
      type: object
      properties:
        timeZone:
          type: string
        shortLabel:
          type: string
        fullLabel:
          type: string
    TimezonePreference:
      type: string
      enum:
      - USE_PRIMARY_CALENDAR_TZ
      - USE_RECLAIM_TZ
    TimezoneSettings:
      required:
      - timeZonePreference
      type: object
      properties:
        zoneId:
          type: string
          nullable: true
        timeZonePreference:
          $ref: "#/components/schemas/TimezonePreference"
        timezonePreference:
          $ref: "#/components/schemas/TimezonePreference"
    TimezoneSettingsPatch:
      type: object
      properties:
        zoneId:
          type: string
          nullable: true
    TitleEventMatcher:
      type: object
      allOf:
      - $ref: "#/components/schemas/StringEventMatcher"
      - $ref: "#/components/schemas/AbstractEventMatcher"
    TodoistIntegration:
      type: object
      properties:
        id:
          type: string
        requiresLabel:
          type: boolean
        availableProjects:
          $ref: "#/components/schemas/ImmutableList_TodoistProject_"
        selectedProjectIds:
          $ref: "#/components/schemas/ImmutableSet_String_"
        labels:
          $ref: "#/components/schemas/ImmutableSet_TodoistLabel_"
        settings:
          $ref: "#/components/schemas/TodoistSettings"
        withId:
          type: string
        withRequiresLabel:
          type: boolean
        withAvailableProjects:
          type: array
          items:
            $ref: "#/components/schemas/TodoistProject"
        withSelectedProjectIds:
          type: array
          items:
            type: string
        withLabels:
          type: array
          items:
            $ref: "#/components/schemas/TodoistLabel"
        withSettings:
          $ref: "#/components/schemas/TodoistSettings"
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    TodoistIntegrationDetails:
      type: object
      properties:
        id:
          type: string
        availableProjects:
          $ref: "#/components/schemas/ImmutableList_TodoistProject_"
        labels:
          deprecated: true
          allOf:
          - $ref: "#/components/schemas/ImmutableSet_TodoistLabel_"
        labelNames:
          $ref: "#/components/schemas/ImmutableSet_String_"
        lastSyncedAt:
          type: string
          format: date-time
          nullable: true
        settings:
          $ref: "#/components/schemas/TodoistSettings"
        withId:
          type: string
        withAvailableProjects:
          type: array
          items:
            $ref: "#/components/schemas/TodoistProject"
        withLabels:
          type: array
          deprecated: true
          items:
            $ref: "#/components/schemas/TodoistLabel"
        withLabelNames:
          type: array
          items:
            type: string
        withLastSyncedAt:
          type: string
          format: date-time
        withSettings:
          $ref: "#/components/schemas/TodoistSettings"
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    TodoistIntegrationPatch:
      type: object
      properties:
        requiresLabel:
          type: boolean
          nullable: true
        selectedProjectIds:
          type: array
          nullable: true
          items:
            type: string
        settings:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TodoistSettings"
        withRequiresLabel:
          type: boolean
        withSelectedProjectIds:
          type: array
          nullable: true
          items:
            type: string
        withSettings:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/TodoistSettings"
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    TodoistLabel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        withId:
          type: string
        withName:
          type: string
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    TodoistProject:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        parent_id:
          type: string
          nullable: true
        is_archived:
          type: boolean
        shared:
          type: boolean
        is_deleted:
          type: boolean
        withId:
          type: string
        withName:
          type: string
        withParent_id:
          type: string
          nullable: true
        withIs_archived:
          type: boolean
        withShared:
          type: boolean
        withIs_deleted:
          type: boolean
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
        additionalContexts:
          type: array
          items:
            $ref: "#/components/schemas/LogContext"
        logKey:
          type: string
        logValue: {}
    TodoistSettings:
      type: object
      properties:
        titleFormat:
          $ref: "#/components/schemas/TodoistTitleFormat"
        withTitleFormat:
          $ref: "#/components/schemas/TodoistTitleFormat"
        equals: {}
        hashCode:
          type: integer
          format: int32
        toString:
          type: string
    TodoistTitleFormat:
      type: string
      enum:
      - TASK_TITLE_ONLY
      - TASK_TITLE_THEN_PROJECT
      - PROJECT_NAME_THEN_TASK_TITLE
    TrueEventMatcher:
      $ref: "#/components/schemas/AbstractEventMatcher"
    UnsubscribeAction:
      type: object
      allOf:
      - $ref: "#/components/schemas/WebSocketRequestAction"
      - properties:
          subscriptionId:
            type: string
    User:
      required:
      - edition
      - editionUsage
      - sku
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        principal:
          type: string
        provider:
          type: string
        baseProvider:
          type: string
        name:
          type: string
        firstName:
          type: string
        entitlements:
          $ref: "#/components/schemas/Entitlements"
        detailedEntitlements:
          $ref: "#/components/schemas/DetailedEntitlements"
        editionEntitlements:
          properties:
            MAX_TEAM_SIZE:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            SCHEDULER_WEEKS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            MAX_TASKS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            MAX_CALENDARS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            MAX_SYNCS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            MAX_HABITS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            MAX_TASKS_WEEK:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            TRAVEL_TIME:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            DECOMPRESSION_TIME:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            CUSTOM_BLOCKING:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            CUSTOM_BLOCKING_DECOMPRESSION:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            CUSTOM_BLOCKING_HABITS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            CUSTOM_BLOCKING_CALENDAR_SYNC:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            CUSTOM_SLACK_STATUS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            MAX_SCHEDULING_LINKS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            DERIVATIVE_SCHEDULING_LINKS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            SCHEDULING_LINK_SURVEY:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            SCHEDULING_LINK_REDIRECT:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            MAX_SCHEDULING_LINK_MEETINGS_QUARTER:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            MAX_1_ON_1_ORGANIZE:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            MAX_1_ON_1_ATTEND:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            MAX_CUSTOM_TIME_SCHEMES:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATIONS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATION_GOOGLE_TASKS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATION_GOOGLE_ADD_ON:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATION_SLACK:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATION_RAYCAST:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATION_ZOOM:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATION_TODOIST:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATION_LINEAR:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATION_JIRA:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATION_CLICKUP:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATION_ASANA:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATION_OFFICE_365:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATION_MONDAY:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATION_TRELLO:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            INTEGRATION_DROPBOX:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            SUPPORT:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            SSO:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            TEAM_ANALYTICS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            EVENT_PREFERENCES:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            DELEGATED_ACCESS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            SCHEDULING_LINK_ROUND_ROBIN:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            SCHEDULING_LINK_BRANDING:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            SMART_MEETING_ATTENDEE_USERS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            WEBHOOKS:
              $ref: "#/components/schemas/EntitlementValue_Object_"
            MAX_STATS_WINDOW:
              $ref: "#/components/schemas/EntitlementValue_Object_"
        lastName:
          type: string
        avatarUrl:
          type: string
        admin:
          type: boolean
        slackEnabled:
          type: boolean
        impersonated:
          type: boolean
        timestampOffsetMs:
          type: integer
          format: int64
        features:
          $ref: "#/components/schemas/UserSettings"
        settings:
          $ref: "#/components/schemas/Settings"
        metadata:
          $ref: "#/components/schemas/UserMetadata"
        created:
          type: string
          format: date-time
        deleted:
          type: string
          format: date-time
        onboarded:
          type: boolean
        trackingCode:
          type: string
        locale:
          type: string
        likelyPersonal:
          type: boolean
        apiKey:
          type: string
        sku:
          deprecated: true
          allOf:
          - $ref: "#/components/schemas/ReclaimEdition"
        edition:
          $ref: "#/components/schemas/ReclaimEdition"
        editionAfterTrial:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ReclaimEdition"
        editionUsage:
          $ref: "#/components/schemas/ReclaimEdition"
        preDowngradeEditionUsage:
          $ref: "#/components/schemas/ReclaimEdition"
        overage:
          type: boolean
        logContextUser:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ObservedUser"
        refCode:
          type: string
        hostedDomain:
          type: string
          nullable: true
        primaryCalendar:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ThinCalendar"
        primaryCalendarId:
          type: string
        timezone:
          type: string
        startOfWeek:
          $ref: "#/components/schemas/DayOfWeek"
        usingDelegatedAccess:
          type: boolean
        firstLogin:
          type: string
          format: date-time
          nullable: true
        signupMethod:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/SignupMethod"
        schedulerWindowWeeks:
          $ref: "#/components/schemas/SchedulingWindowWeeks"
    UserAccountLock:
      required:
      - accountLockType
      - lockMessage
      type: object
      properties:
        accountLockType:
          $ref: "#/components/schemas/UserAccountLock.AccountLockType"
        lockMessage:
          type: string
    UserAccountLock.AccountLockType:
      type: string
      enum:
      - PIPELINE_MIGRATION
    UserEntityTypeAccessView:
      required:
      - permissions
      type: object
      properties:
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/EntityTypePermissionsView"
    UserFocusSettingsCreateRequest:
      required:
      - focusTimeSettings
      - focusType
      - timeSchemeId
      - title
      - visibility
      type: object
      properties:
        autoDecline:
          type: boolean
          nullable: true
        title:
          type: string
        description:
          type: string
          nullable: true
        focusType:
          $ref: "#/components/schemas/FocusType"
        focusTimeSettings:
          $ref: "#/components/schemas/FocusTimeRequest"
        timeSchemeId:
          type: string
        autoDeclineText:
          type: string
          nullable: true
        calendarId:
          type: integer
          format: int64
          nullable: true
        visibility:
          $ref: "#/components/schemas/FocusVisibility"
    UserFocusSettingsPatchRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
          nullable: true
        focusType:
          $ref: "#/components/schemas/FocusType"
        focusTimeSettings:
          $ref: "#/components/schemas/FocusTimeRequest"
        enabled:
          type: boolean
        timeSchemeId:
          type: string
        autoDecline:
          type: boolean
        autoDeclineText:
          type: string
          nullable: true
        calendarId:
          type: integer
          format: int64
        visibility:
          $ref: "#/components/schemas/FocusVisibility"
    UserFocusSettingsStatus:
      type: string
      enum:
      - ACTIVE
      - DISABLED
      - CALENDAR_NOT_FOUND
      - CALENDAR_NOT_VALID
      - CALENDAR_NOT_CONNECTED
    UserFocusSettingsView:
      required:
      - autoDecline
      - description
      - enabled
      - focusType
      - id
      - status
      - timeSchemeId
      - title
      - visibility
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        focusType:
          $ref: "#/components/schemas/FocusType"
        focusTimeSettings:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/FocusTimeSettingsView"
        enabled:
          type: boolean
        timeSchemeId:
          type: string
        status:
          $ref: "#/components/schemas/UserFocusSettingsStatus"
        autoDecline:
          type: boolean
        autoDeclineText:
          type: string
          nullable: true
        calendarId:
          type: integer
          format: int64
          nullable: true
        visibility:
          $ref: "#/components/schemas/FocusVisibility"
    UserInterests:
      type: object
      properties:
        tasks:
          type: boolean
        priorities:
          type: boolean
        office365:
          type: boolean
        calendar:
          type: boolean
        asana:
          type: boolean
        trello:
          type: boolean
        todoist:
          type: boolean
        jira:
          type: boolean
        linear:
          type: boolean
        clickup:
          type: boolean
        monday:
          type: boolean
        MSTeams:
          type: boolean
    UserMetadata:
      type: object
      properties:
        jobTitle:
          type: string
        companyName:
          type: string
        companySize:
          $ref: "#/components/schemas/UserMetadataCompanySize"
        usecase:
          $ref: "#/components/schemas/UserMetadataUsecase"
        role:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserProfileRole"
        goals:
          type: array
          items:
            $ref: "#/components/schemas/UserProfileGoal"
        isWorkspace:
          type: boolean
        department:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserProfileDepartment"
        orgMetadata:
          $ref: "#/components/schemas/OrgMetadata"
    UserMetadataCompanySize:
      type: string
      enum:
      - SUB_10
      - SUB_50
      - SUB_100
      - SUB_500
      - SUB_1000
      - THOUSAND_PLUS
    UserMetadataUsecase:
      type: string
      enum:
      - EDUCATION
      - WORK
      - NON_PROFIT
      - TEAM
      - SOLO_WORK
      - PERSONAL
      x-deprecated:
      - EDUCATION
      - NON_PROFIT
    UserOnboard:
      type: object
      properties:
        habits:
          type: boolean
        tasks:
          type: boolean
        googleTasks:
          type: boolean
        planItemPrioritized:
          type: boolean
        smartOneOnOnes:
          type: boolean
        bufferTime:
          type: boolean
        tasksReindex:
          type: boolean
        googleAddOn:
          type: boolean
        v16Scheduler:
          type: boolean
        helpMenus:
          type: boolean
        smartMeetingsJustNewQuest:
          type: boolean
        smartHabitsJustNewQuest:
          type: boolean
        smartMeetingsNavItem:
          type: boolean
        smartMeetingsPricingWarning:
          type: boolean
        showDowngradeAcknowledgement:
          type: boolean
        showUpgradeRestoreModal:
          type: boolean
        setupGuideV2:
          type: boolean
        accountAndPersonalSettings:
          type: boolean
        webhooks:
          type: boolean
        focus:
          type: boolean
        schedulingLinks:
          type: boolean
    UserPayload:
      required:
      - email
      - orgMetadata
      type: object
      properties:
        email:
          type: string
        name:
          type: string
          nullable: true
        givenName:
          type: string
          nullable: true
        familyName:
          type: string
          nullable: true
        principal:
          type: string
          nullable: true
        orgMetadata:
          $ref: "#/components/schemas/OrgMetadata"
    UserPermissionsView:
      required:
      - access
      type: object
      properties:
        access:
          $ref: "#/components/schemas/UserEntityTypeAccessView"
    UserPostOnboard:
      type: object
      properties:
        welcomed:
          $ref: "#/components/schemas/UserPostOnboardState"
        focus:
          $ref: "#/components/schemas/UserPostOnboardState"
        hours:
          $ref: "#/components/schemas/UserPostOnboardState"
        habits:
          $ref: "#/components/schemas/UserPostOnboardState"
        firstTask:
          $ref: "#/components/schemas/UserPostOnboardState"
        integration:
          $ref: "#/components/schemas/UserPostOnboardState"
        smartMeetings:
          $ref: "#/components/schemas/UserPostOnboardState"
        schedulingLinks:
          $ref: "#/components/schemas/UserPostOnboardState"
        slackStatusSync:
          $ref: "#/components/schemas/UserPostOnboardState"
        travelTime:
          $ref: "#/components/schemas/UserPostOnboardState"
        zoom:
          $ref: "#/components/schemas/UserPostOnboardState"
        connectCalendars:
          $ref: "#/components/schemas/UserPostOnboardState"
        colors:
          $ref: "#/components/schemas/UserPostOnboardState"
        reclaimFree:
          $ref: "#/components/schemas/UserPostOnboardState"
        guidedTours:
          $ref: "#/components/schemas/UserPostOnboardState"
    UserPostOnboardPatchRequest:
      type: object
      properties:
        welcomed:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
        focus:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
        hours:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
        habits:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
        firstTask:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
        integration:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
        smartMeetings:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
        schedulingLinks:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
        slackStatusSync:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
        travelTime:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
        zoom:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
        connectCalendars:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
        colors:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
        reclaimFree:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
        guidedTours:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/UserPostOnboardState"
    UserPostOnboardState:
      type: string
      enum:
      - NEVER_SHOWN
      - NEVER_INTERACTED
      - PASS
      - CHECK
      - CTA
    UserProfileDepartment:
      type: string
      enum:
      - PRODUCT
      - ENGINEERING
      - SUPPORT
      - MARKETING
      - SALES
      - DESIGN
      - HR
      - OPERATIONS
      - ACCOUNTING_AND_FINANCE
      - FOUNDER
      - EXECUTIVE_ASSISTANT
      - IT_SECURITY
      - OTHER
      x-deprecated:
      - OTHER
    UserProfileGoal:
      type: string
      enum:
      - HEADS_DOWN_TIME
      - MEETINGS
      - WORK_LIFE_BALANCE
      - MULTIPLE_CALENDARS
    UserProfileRole:
      type: string
      enum:
      - EXEC
      - MANAGER
      - NON_MANAGER
      - CONSULTANT
      - STUDENT
    UserQuests:
      required:
      - completedQuests
      type: object
      properties:
        completedQuests:
          type: array
          items:
            $ref: "#/components/schemas/QuestType"
    UserResetSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    UserSettings:
      required:
      - accountLocks
      - appNotifications
      - asana
      - assistSettings
      - billing
      - calendar
      - calendarEntrySettings
      - colors
      - dailyDigestReport
      - dropboxSettings
      - eventDisplayPreferences
      - experimentalSettings
      - focus
      - googleAddOnSettings
      - interests
      - microsoft
      - onboard
      - openAISettings
      - postOnboard
      - priorities
      - projects
      - quests
      - rsvpSetting
      - schedulingLinks
      - slackSettings
      - smartOneOnOnes
      - sync
      - taskSettings
      - timezoneSettings
      - webhookSettings
      - weeklyReport
      type: object
      properties:
        assistSettings:
          $ref: "#/components/schemas/AssistSettings"
        scheduler:
          type: integer
          format: int32
        prioritizationEnabled:
          type: boolean
        extraScopes:
          type: boolean
        peopleScopes:
          type: boolean
        directoryScopes:
          type: boolean
        taskSettings:
          $ref: "#/components/schemas/TaskSettings"
        priorities:
          $ref: "#/components/schemas/PrioritiesSettings"
        colors:
          $ref: "#/components/schemas/ColorsSettings"
        calendar:
          $ref: "#/components/schemas/CalendarSettings"
        focus:
          $ref: "#/components/schemas/FocusSettings"
        asana:
          $ref: "#/components/schemas/AsanaSettings"
        openAISettings:
          $ref: "#/components/schemas/OpenAISettings"
        webhookSettings:
          $ref: "#/components/schemas/WebhookSettings"
        billing:
          $ref: "#/components/schemas/BillingSettings"
        projects:
          $ref: "#/components/schemas/ProjectsSettings"
        sync:
          $ref: "#/components/schemas/SyncFeatureSettings"
        slackSettings:
          $ref: "#/components/schemas/SlackSettings"
        appNotifications:
          $ref: "#/components/schemas/AppNotificationsSettings"
        interests:
          $ref: "#/components/schemas/UserInterests"
        onboard:
          $ref: "#/components/schemas/UserOnboard"
        postOnboard:
          $ref: "#/components/schemas/UserPostOnboard"
        weeklyReport:
          $ref: "#/components/schemas/WeeklyReport"
        dailyDigestReport:
          $ref: "#/components/schemas/DailyDigestReport"
        smartOneOnOnes:
          $ref: "#/components/schemas/SmartOneOnOneSettings"
        schedulingLinks:
          $ref: "#/components/schemas/SchedulingLinkSettings"
        quests:
          $ref: "#/components/schemas/QuestSettings"
        googleAddOnSettings:
          $ref: "#/components/schemas/GoogleAddOnSettings"
        calendarEntrySettings:
          $ref: "#/components/schemas/CalendarEntrySettings"
        microsoft:
          $ref: "#/components/schemas/MicrosoftSettings"
        eventDisplayPreferences:
          $ref: "#/components/schemas/EventDisplayPreferences"
        timezoneSettings:
          $ref: "#/components/schemas/TimezoneSettings"
        rsvpSetting:
          $ref: "#/components/schemas/RSVPSetting"
        experimentalSettings:
          $ref: "#/components/schemas/ExperimentalSettings"
        dropboxSettings:
          $ref: "#/components/schemas/DropboxSettings"
        accountLocks:
          type: array
          items:
            $ref: "#/components/schemas/UserAccountLock"
        appNotificationsSettings:
          $ref: "#/components/schemas/AppNotificationsSettings"
        availableMeetingTimes:
          type: array
          items:
            type: integer
            format: int32
    UserSubscription:
      type: object
      allOf:
      - $ref: "#/components/schemas/Subscription"
      - properties:
          subscriptionType:
            $ref: "#/components/schemas/SubscriptionType"
    UserTemplateData:
      required:
      - disablePromotions
      - domain
      - email
      - firstName
      - slackEnabled
      - slackStatusEnabled
      - teamId
      - trackingCode
      type: object
      properties:
        email:
          type: string
        domain:
          type: string
        teamId:
          type: integer
          format: int64
        disablePromotions:
          type: boolean
        firstName:
          type: string
        trackingCode:
          type: string
        slackEnabled:
          type: boolean
        slackStatusEnabled:
          type: boolean
    UserTrait:
      type: string
      enum:
      - EMAIL
      - AUTH_ID
      - FULL_NAME
      - FIRST_NAME
      - LAST_NAME
      - CREATED_AT
      - SIGNED_UP
      - MAIN_TIMEZONE
      - REFERRAL_CODE
      - ONBOARDED
      - LIKELY_PERSONAL
      - CLUSTERDEX
      - TRACKING_CODE
      - JOB_TITLE
      - COMPANY_NAME
      - COMPANY_SIZE
      - USECASE
      - ROLE
      - DEPARTMENT
      - GOALS_HEADS_DOWN_TIME
      - GOALS_MEETINGS
      - GOALS_WORK_LIFE_BALANCE
      - GOALS_MULTIPLE_CALENDARS
      - PRIMARY_CALENDAR_LINKED
      - PRIMARY_CALENDAR_ID
      - EDITION
      - EDITION_HR
      - EDITION_AFTER_TRIAL
      - EDITION_AFTER_TRIAL_HR
      - PREDICTED_EDITION
      - PREDICTED_EDITION_HR
      - PREDICTED_EDITION_BEFORE_LAST_DOWNGRADE
      - PREDICTED_EDITION_AFTER_LAST_DOWNGRADE
      - PREVIOUS_EDITION_BEFORE_LAST_DOWNGRADE
      - PREVIOUS_EDITION_BEFORE_LAST_DOWNGRADE_HR
      - ACCOUNT_ID
      - ACCOUNT_MEMBERS
      - ACCOUNT_SUBSCRIPTION_CHANGE
      - ACCOUNT_ROLE
      - ACCOUNT_PLAN_HR
      - ACCOUNT_TRIAL_END_DATE
      - ACCOUNT_TRIAL_DAYS_REMAINING
      - ACCOUNT_SUBSCRIPTION_STATUS
      - TRIAL_END_DATE
      - TRIAL_DAYS_REMAINING
      - USAGE_SYNC_POLICY_COUNT
      - USAGE_SYNC_POLICY_CUSTOM_COUNT
      - USAGE_CONNECTED_CALENDAR_COUNT
      - USAGE_HABIT_ACTIVE_COUNT
      - USAGE_SMART_11_ACTIVE_COUNT
      - USAGE_CUSTOM_DECOMPRESSION
      - PERSONAL_CALENDARS_COUNT
      - PERSONAL_CALENDAR_LINKED
      - PERSONAL_CALENDAR_ID
      - OUTLOOK_ENABLED
      - OUTLOOK_CALENDARS_COUNT
      - ONE_ON_ONES_ACTIVE
      - ONE_ON_ONES_PENDING
      - ONE_ON_ONES_ORGANIZED
      - ONE_ON_ONES_INVITED_TO
      - ONE_ON_ONES_TOTAL
      - ONE_ON_ONES_DETECTED
      - SMART_SERIES_ENABLED
      - SMART_MEETINGS_CAN_OPT_IN
      - SMART_HABITS_DISABLED
      - SMART_HABITS_TOTAL
      - SMART_HABITS_ACTIVE
      - SMART_MEETINGS_ACTIVE
      - SMART_MEETINGS_ORGANIZED
      - SMART_MEETINGS_1_1s
      - SMART_MEETINGS_GROUP_MEETINGS
      - SMART_MEETINGS_INVITED_TO
      - SMART_MEETINGS_TOTAL
      - SMART_MEETINGS_TOTAL_RECLAIM_USERS
      - SMART_MEETINGS_UNIQUE_RECLAIM_USERS
      - SMART_MEETINGS_UNIQUE_NON_RECLAIM_USERS
      - SMART_MEETINGS_TOTAL_NON_RECLAIM_USERS
      - DAILY_HABITS_ACTIVE
      - DAILY_HABITS_TOTAL
      - DAILY_HABITS_ACTIVATED
      - TASKS_TOTAL
      - TASKS_RECENT
      - SLACK_ACTION_TAKEN
      - DOMAIN
      - DOMAIN_IS_GOOGLE_WORKSPACE
      - HAS_GOOGLE_WORKSPACE_CREDENTIAL
      - HAS_GOOGLE_GMAIL_CREDENTIAL
      - HAS_MICROSOFT_WORKSPACE_CREDENTIAL
      - HAS_MICROSOFT_OUTLOOK_CREDENTIAL
      - DOMAIN_SLACK_USERS
      - FEATURE_ASSIST_TRAVEL
      - FEATURE_ASSIST_CONFERENCE_BUFFER
      - FEATURE_SLACK_ENABLED
      - FEATURE_SLACK_STATUS_SYNC
      - FEATURE_TASKS_ENABLED
      - FEATURE_GOOGLE_TASKS_ENABLED
      - FEATURE_COLORS_ENABLED
      - INTEREST_OFFICE365
      - INTEREST_INTEGRATION_TRELLO
      - INTEREST_INTEGRATION_MONDAY
      - INTEREST_INTEGRATION_MSTEAMS
      - ONBOARD_HABITS
      - ONBOARD_TASKS
      - ONBOARD_GOOGLE_TASKS
      - ONBOARD_PLAN_ITEM_PRIORITIZED
      - ONBOARD_SMART_ONE_ON_ONES
      - ONBOARD_BUFFER_TIME
      - ONBOARD_TASKS_REINDEX
      - ONBOARD_GOOGLE_ADDON
      - ONBOARD_SCHEDULING_LINKS
      - ONBOARD_V16_SCHEDULER
      - ONBOARD_HELP_MENUS
      - ONBOARD_SETUP_GUIDE_V2
      - ONBOARD_SMART_MEETINGS_JUST_NEW_QUEST
      - ONBOARD_SMART_HABITS_JUST_NEW_QUEST
      - ONBOARD_SMART_MEETINGS_NAV_ITEM
      - ONBOARD_SMART_MEETINGS_PRICING_WARNING
      - ONBOARD_ACCOUNT_AND_PERSONAL_SETTINGS
      - ONBOARD_WEBHOOKS
      - ONBOARD_FOCUS
      - SCHEDULER_VERSION
      - PRIORITIZATION_ENABLED
      - REFERRALS_SIGNED_UP
      - REFERRALS_ACTIVE
      - REFERRALS_DELETED
      - REFERRAL_CREDITS_CLAIMED
      - INVITES_SENT
      - INVITEES_SIGNED_UP
      - INVITEES_ACTIVE
      - INVITEES_DELETED
      - WEEKLY_REPORT_SUBSCRIBED
      - DAILY_DIGEST_EMAIL_REPORT_SUBSCRIBED
      - DAILY_DIGEST_SLACK_REPORT_SUBSCRIBED
      - ZOOM_ENABLED
      - LINEAR_ENABLED
      - JIRA_ENABLED
      - TODOIST_ENABLED
      - ASANA_ENABLED
      - CLICKUP_ENABLED
      - ADD_ON_INSTALLED
      - SCHEDULING_LINKS_LINK_COUNT
      - SCHEDULING_LINKS_MEETING_COUNT
      - QUEST_WELCOME_TO_RECLAIM
      - QUEST_SET_AVAILABILITY
      - QUEST_SYNC_CALENDAR
      - QUEST_SET_SCHEDULING_HOURS
      - QUEST_INSTALL_GCAL_ADDON
      - QUEST_INSTALL_SLACK_INTEGRATION
      - QUEST_HABITS_OVERVIEW
      - QUEST_CREATE_AND_CUSTOMIZE_HABITS
      - QUEST_MANAGE_HABITS
      - QUEST_SCHEDULING_LINKS_OVERVIEW
      - QUEST_SETUP_SCHEDULING_LINKS
      - QUEST_SETUP_TEAM_LINKS
      - QUEST_SMART_ONE_ON_ONE_OVERVIEW
      - QUEST_SETUP_FIRST_SMART_ONE_ON_ONE
      - QUEST_MANAGE_SMART_ONE_ON_ONE
      - QUEST_TASK_OVERVIEW
      - QUEST_ADD_FIRST_TASK
      - QUEST_ADD_TASK_INTEGRATION
      - QUEST_MANAGE_TASKS
      - QUEST_SET_TASK_DEFAULTS
      - QUEST_AUTO_SCHEDULE_BREAK_AND_TRAVEL_TIME
      - QUEST_SETUP_NO_MEETING_DAYS
      - QUEST_CUSTOMIZE_EVENT_COLOR_CODING
      - QUEST_TRACK_AND_ANALYZE_PRODUCTIVITY
      - QUEST_ADD_MEMBERS_TO_TEAM
      - QUEST_SELECT_PLAN
      - QUEST_PRIORITIZATION
      - QUEST_AUTO_COLOR_CODING
      - QUEST_EXTENSIONS_2
      - QUEST_FLEXIBLE_TIME_BLOCKING
      - QUEST_HABITS_OVERVIEW_2
      - QUEST_HOURS_OVERVIEW_2
      - QUEST_PLANNER_OVERVIEW_2
      - QUEST_TASK_INTEGRATIONS_2
      - QUEST_BUILD_YOUR_TEAM
      - QUEST_SETTINGS_OVERVIEW_2
      - QUEST_MEETING_BUFFERS
      - QUEST_SCHEDULING_LINK_OVERVIEW_2
      - QUEST_CALENDAR_SYNC_OVERVIEW_2
      - QUEST_SLACK_STATUS_SYNC_2
      - QUEST_NO_MEETING_DAYS
      - QUEST_SMART_1_1_2
      - QUEST_STATS_2
      - QUEST_TASKS_OVERVIEW_2
      - QUEST_TASKS_BATCH_ACTIONS
      - QUEST_SMART_MEETINGS_OVERVIEW
      - QUEST_SMART_HABITS_OVERVIEW
      - QUEST_SMART_MEETINGS_JUST_NEW
      - QUEST_SMART_HABITS_JUST_NEW
      - CANCELLATION_REASON
      - CHURN_DISCOUNT_APPLIED
      - TRIAL_EXTENSION_ELIGIBLE
      - TEAM_SEATS_CONSUMED
      - TEAM_SEATS_PURCHASED
      - TEAM_SEATS_OVERAGE
      - TEAM_HARD_DOWNGRADE_DATE
      - TEAM_HARD_DOWNGRADE_DAYS_REMAINING
      - TEAM_SUBSCRIPTION_END_DATE
      - FIRST_PURCHASE_DATE
      - OVERAGE_CUSTOM_BLOCKING_CALENDAR_SYNC
      - OVERAGE_CUSTOM_BLOCKING_DECOMPRESSION
      - OVERAGE_CUSTOM_BLOCKING_HABITS
      - OVERAGE_DELEGATED_ACCESS
      - OVERAGE_INTEGRATION_ASANA
      - OVERAGE_INTEGRATION_CLICKUP
      - OVERAGE_INTEGRATION_JIRA
      - OVERAGE_INTEGRATION_LINEAR
      - OVERAGE_INTEGRATION_TODOIST
      - OVERAGE_SMART_MEETINGS_ORGANIZER
      - OVERAGE_CONNECTED_CALENDARS
      - OVERAGE_CUSTOM_TIME_SCHEMES
      - OVERAGE_HABITS
      - OVERAGE_SCHEDULING_LINKS
      - OVERAGE_CALENDAR_SYNCS
      - OVERAGE_SCHEDULING_LINK_ROUND_ROBIN
      - OVERAGE_SCHEDULING_LINKS_BRANDING
      - OVERAGE_SCHEDULING_LINKS_REDIRECTS
      - OVERAGE_SCHEDULING_LINKS_SURVEY
      - OVERAGE_WEBHOOKS
      - OVERAGE_SCHEDULING_WINDOW
      - OVERAGE_ANY
      - SMART_MEETINGS_DETECTED
      - SMART_HABITS_DETECTED
      - ONBOARD_SHOW_DOWNGRADE_ACKNOWLEDGEMENT
      - EDITION_HR_SNAPSHOT
      - EDITION_HR_SNAPSHOT_PREVIEW
      - ONBOARD_SHOW_UPGRADE_RESTORE_MODAL
      - HAS_WORKSPACE_CREDENTIAL
      - PRIMARY_CREDENTIAL_PROVIDER
      - FOCUS_TIME_AVAILABLE
      - FOCUS_TIME_ENABLED
      - FOCUS_TIME_BALLOON_FILL_GOAL_HOURS
      - FOCUS_TIME_SCHEDULING_TYPE
      - FOCUS_TIME_PREVIOUS_WEEK_HOURS_SCHEDULED
      - FOCUS_TIME_CURRENT_WEEK_HOURS_SCHEDULED
      - FOCUS_TIME_CIRCUIT_BREAKER_WEEKLY_GOAL_HOURS
      - FOCUS_TIME_CIRCUIT_BREAKER_DAILY_GOAL_HOURS
      - FOCUS_TIME_GOAL_PERCENTAGE_ACHIEVED
      - FOCUS_TIME_SUB_TYPE
      - POST_ONBOARD_WELCOMED
      - POST_ONBOARD_FOCUS
      - POST_ONBOARD_HOURS
      - POST_ONBOARD_HABITS
      - POST_ONBOARD_FIRST_TASK
      - POST_ONBOARD_INTEGRATION
      - POST_ONBOARD_SMART_MEETINGS
      - POST_ONBOARD_SCHEDULING_LINKS
      - POST_ONBOARD_SLACK_STATUS_SYNC
      - POST_ONBOARD_TRAVEL_TIME
      - POST_ONBOARD_ZOOM
      - POST_ONBOARD_CONNECTED_CALENDARS
      - POST_ONBOARD_COLORS
      - POST_ONBOARD_RECLAIM_FREE
      - POST_ONBOARD_GUIDED_TOURS
      x-enum-varnames:
      - EMAIL
      - AUTH_ID
      - FULL_NAME
      - FIRST_NAME
      - LAST_NAME
      - CREATED_AT
      - SIGNED_UP
      - MAIN_TIMEZONE
      - REFERRAL_CODE
      - ONBOARDED
      - LIKELY_PERSONAL
      - CLUSTERDEX
      - TRACKING_CODE
      - JOB_TITLE
      - COMPANY_NAME
      - COMPANY_SIZE
      - USECASE
      - ROLE
      - DEPARTMENT
      - GOALS_HEADS_DOWN_TIME
      - GOALS_MEETINGS
      - GOALS_WORK_LIFE_BALANCE
      - GOALS_MULTIPLE_CALENDARS
      - PRIMARY_CALENDAR_LINKED
      - PRIMARY_CALENDAR_ID
      - EDITION
      - EDITION_HR
      - EDITION_AFTER_TRIAL
      - EDITION_AFTER_TRIAL_HR
      - PREDICTED_EDITION
      - PREDICTED_EDITION_HR
      - PREDICTED_EDITION_BEFORE_LAST_DOWNGRADE
      - PREDICTED_EDITION_AFTER_LAST_DOWNGRADE
      - PREVIOUS_EDITION_BEFORE_LAST_DOWNGRADE
      - PREVIOUS_EDITION_BEFORE_LAST_DOWNGRADE_HR
      - ACCOUNT_ID
      - ACCOUNT_MEMBERS
      - ACCOUNT_SUBSCRIPTION_CHANGE
      - ACCOUNT_ROLE
      - ACCOUNT_PLAN_HR
      - ACCOUNT_TRIAL_END_DATE
      - ACCOUNT_TRIAL_DAYS_REMAINING
      - ACCOUNT_SUBSCRIPTION_STATUS
      - TRIAL_END_DATE
      - TRIAL_DAYS_REMAINING
      - USAGE_SYNC_POLICY_COUNT
      - USAGE_SYNC_POLICY_CUSTOM_COUNT
      - USAGE_CONNECTED_CALENDAR_COUNT
      - USAGE_HABIT_ACTIVE_COUNT
      - USAGE_SMART_11_ACTIVE_COUNT
      - USAGE_CUSTOM_DECOMPRESSION
      - PERSONAL_CALENDARS_COUNT
      - PERSONAL_CALENDAR_LINKED
      - PERSONAL_CALENDAR_ID
      - OUTLOOK_ENABLED
      - OUTLOOK_CALENDARS_COUNT
      - ONE_ON_ONES_ACTIVE
      - ONE_ON_ONES_PENDING
      - ONE_ON_ONES_ORGANIZED
      - ONE_ON_ONES_INVITED_TO
      - ONE_ON_ONES_TOTAL
      - ONE_ON_ONES_DETECTED
      - SMART_SERIES_ENABLED
      - SMART_MEETINGS_CAN_OPT_IN
      - SMART_HABITS_DISABLED
      - SMART_HABITS_TOTAL
      - SMART_HABITS_ACTIVE
      - SMART_MEETINGS_ACTIVE
      - SMART_MEETINGS_ORGANIZED
      - SMART_MEETINGS_1_1s
      - SMART_MEETINGS_GROUP_MEETINGS
      - SMART_MEETINGS_INVITED_TO
      - SMART_MEETINGS_TOTAL
      - SMART_MEETINGS_TOTAL_RECLAIM_USERS
      - SMART_MEETINGS_UNIQUE_RECLAIM_USERS
      - SMART_MEETINGS_UNIQUE_NON_RECLAIM_USERS
      - SMART_MEETINGS_TOTAL_NON_RECLAIM_USERS
      - DAILY_HABITS_ACTIVE
      - DAILY_HABITS_TOTAL
      - DAILY_HABITS_ACTIVATED
      - TASKS_TOTAL
      - TASKS_RECENT
      - SLACK_ACTION_TAKEN
      - DOMAIN
      - DOMAIN_IS_GOOGLE_WORKSPACE
      - HAS_GOOGLE_WORKSPACE_CREDENTIAL
      - HAS_GOOGLE_GMAIL_CREDENTIAL
      - HAS_MICROSOFT_WORKSPACE_CREDENTIAL
      - HAS_MICROSOFT_OUTLOOK_CREDENTIAL
      - DOMAIN_SLACK_USERS
      - FEATURE_ASSIST_TRAVEL
      - FEATURE_ASSIST_CONFERENCE_BUFFER
      - FEATURE_SLACK_ENABLED
      - FEATURE_SLACK_STATUS_SYNC
      - FEATURE_TASKS_ENABLED
      - FEATURE_GOOGLE_TASKS_ENABLED
      - FEATURE_COLORS_ENABLED
      - INTEREST_OFFICE365
      - INTEREST_INTEGRATION_TRELLO
      - INTEREST_INTEGRATION_MONDAY
      - INTEREST_INTEGRATION_MSTEAMS
      - ONBOARD_HABITS
      - ONBOARD_TASKS
      - ONBOARD_GOOGLE_TASKS
      - ONBOARD_PLAN_ITEM_PRIORITIZED
      - ONBOARD_SMART_ONE_ON_ONES
      - ONBOARD_BUFFER_TIME
      - ONBOARD_TASKS_REINDEX
      - ONBOARD_GOOGLE_ADDON
      - ONBOARD_SCHEDULING_LINKS
      - ONBOARD_V16_SCHEDULER
      - ONBOARD_HELP_MENUS
      - ONBOARD_SETUP_GUIDE_V2
      - ONBOARD_SMART_MEETINGS_JUST_NEW_QUEST
      - ONBOARD_SMART_HABITS_JUST_NEW_QUEST
      - ONBOARD_SMART_MEETINGS_NAV_ITEM
      - ONBOARD_SMART_MEETINGS_PRICING_WARNING
      - ONBOARD_ACCOUNT_AND_PERSONAL_SETTINGS
      - ONBOARD_WEBHOOKS
      - ONBOARD_FOCUS
      - SCHEDULER_VERSION
      - PRIORITIZATION_ENABLED
      - REFERRALS_SIGNED_UP
      - REFERRALS_ACTIVE
      - REFERRALS_DELETED
      - REFERRAL_CREDITS_CLAIMED
      - INVITES_SENT
      - INVITEES_SIGNED_UP
      - INVITEES_ACTIVE
      - INVITEES_DELETED
      - WEEKLY_REPORT_SUBSCRIBED
      - DAILY_DIGEST_EMAIL_REPORT_SUBSCRIBED
      - DAILY_DIGEST_SLACK_REPORT_SUBSCRIBED
      - ZOOM_ENABLED
      - LINEAR_ENABLED
      - JIRA_ENABLED
      - TODOIST_ENABLED
      - ASANA_ENABLED
      - CLICKUP_ENABLED
      - ADD_ON_INSTALLED
      - SCHEDULING_LINKS_LINK_COUNT
      - SCHEDULING_LINKS_MEETING_COUNT
      - QUEST_WELCOME_TO_RECLAIM
      - QUEST_SET_AVAILABILITY
      - QUEST_SYNC_CALENDAR
      - QUEST_SET_SCHEDULING_HOURS
      - QUEST_INSTALL_GCAL_ADDON
      - QUEST_INSTALL_SLACK_INTEGRATION
      - QUEST_HABITS_OVERVIEW
      - QUEST_CREATE_AND_CUSTOMIZE_HABITS
      - QUEST_MANAGE_HABITS
      - QUEST_SCHEDULING_LINKS_OVERVIEW
      - QUEST_SETUP_SCHEDULING_LINKS
      - QUEST_SETUP_TEAM_LINKS
      - QUEST_SMART_ONE_ON_ONE_OVERVIEW
      - QUEST_SETUP_FIRST_SMART_ONE_ON_ONE
      - QUEST_MANAGE_SMART_ONE_ON_ONE
      - QUEST_TASK_OVERVIEW
      - QUEST_ADD_FIRST_TASK
      - QUEST_ADD_TASK_INTEGRATION
      - QUEST_MANAGE_TASKS
      - QUEST_SET_TASK_DEFAULTS
      - QUEST_AUTO_SCHEDULE_BREAK_AND_TRAVEL_TIME
      - QUEST_SETUP_NO_MEETING_DAYS
      - QUEST_CUSTOMIZE_EVENT_COLOR_CODING
      - QUEST_TRACK_AND_ANALYZE_PRODUCTIVITY
      - QUEST_ADD_MEMBERS_TO_TEAM
      - QUEST_SELECT_PLAN
      - QUEST_PRIORITIZATION
      - QUEST_AUTO_COLOR_CODING
      - QUEST_EXTENSIONS_2
      - QUEST_FLEXIBLE_TIME_BLOCKING
      - QUEST_HABITS_OVERVIEW_2
      - QUEST_HOURS_OVERVIEW_2
      - QUEST_PLANNER_OVERVIEW_2
      - QUEST_TASK_INTEGRATIONS_2
      - QUEST_BUILD_YOUR_TEAM
      - QUEST_SETTINGS_OVERVIEW_2
      - QUEST_MEETING_BUFFERS
      - QUEST_SCHEDULING_LINK_OVERVIEW_2
      - QUEST_CALENDAR_SYNC_OVERVIEW_2
      - QUEST_SLACK_STATUS_SYNC_2
      - QUEST_NO_MEETING_DAYS
      - QUEST_SMART_1_1_2
      - QUEST_STATS_2
      - QUEST_TASKS_OVERVIEW_2
      - QUEST_TASKS_BATCH_ACTIONS
      - QUEST_SMART_MEETINGS_OVERVIEW
      - QUEST_SMART_HABITS_OVERVIEW
      - QUEST_SMART_MEETINGS_JUST_NEW
      - QUEST_SMART_HABITS_JUST_NEW
      - CANCELLATION_REASON
      - CHURN_DISCOUNT_APPLIED
      - TRIAL_EXTENSION_ELIGIBLE
      - TEAM_SEATS_CONSUMED
      - TEAM_SEATS_PURCHASED
      - TEAM_SEATS_OVERAGE
      - TEAM_HARD_DOWNGRADE_DATE
      - TEAM_HARD_DOWNGRADE_DAYS_REMAINING
      - TEAM_SUBSCRIPTION_END_DATE
      - FIRST_PURCHASE_DATE
      - OVERAGE_CUSTOM_BLOCKING_CALENDAR_SYNC
      - OVERAGE_CUSTOM_BLOCKING_DECOMPRESSION
      - OVERAGE_CUSTOM_BLOCKING_HABITS
      - OVERAGE_DELEGATED_ACCESS
      - OVERAGE_INTEGRATION_ASANA
      - OVERAGE_INTEGRATION_CLICKUP
      - OVERAGE_INTEGRATION_JIRA
      - OVERAGE_INTEGRATION_LINEAR
      - OVERAGE_INTEGRATION_TODOIST
      - OVERAGE_SMART_MEETINGS_ORGANIZER
      - OVERAGE_CONNECTED_CALENDARS
      - OVERAGE_CUSTOM_TIME_SCHEMES
      - OVERAGE_HABITS
      - OVERAGE_SCHEDULING_LINKS
      - OVERAGE_CALENDAR_SYNCS
      - OVERAGE_SCHEDULING_LINK_ROUND_ROBIN
      - OVERAGE_SCHEDULING_LINKS_BRANDING
      - OVERAGE_SCHEDULING_LINKS_REDIRECTS
      - OVERAGE_SCHEDULING_LINKS_SURVEY
      - OVERAGE_WEBHOOKS
      - OVERAGE_SCHEDULING_WINDOW
      - OVERAGE_ANY
      - SMART_MEETINGS_DETECTED
      - SMART_HABITS_DETECTED
      - ONBOARD_SHOW_DOWNGRADE_ACKNOWLEDGEMENT
      - EDITION_HR_SNAPSHOT
      - EDITION_HR_SNAPSHOT_PREVIEW
      - ONBOARD_SHOW_UPGRADE_RESTORE_MODAL
      - HAS_WORKSPACE_CREDENTIAL
      - PRIMARY_CREDENTIAL_PROVIDER
      - FOCUS_TIME_AVAILABLE
      - FOCUS_TIME_ENABLED
      - FOCUS_TIME_BALLOON_FILL_GOAL_HOURS
      - FOCUS_TIME_SCHEDULING_TYPE
      - FOCUS_TIME_PREVIOUS_WEEK_HOURS_SCHEDULED
      - FOCUS_TIME_CURRENT_WEEK_HOURS_SCHEDULED
      - FOCUS_TIME_CIRCUIT_BREAKER_WEEKLY_GOAL_HOURS
      - FOCUS_TIME_CIRCUIT_BREAKER_DAILY_GOAL_HOURS
      - FOCUS_TIME_GOAL_PERCENTAGE_ACHIEVED
      - FOCUS_TIME_SUB_TYPE
      - POST_ONBOARD_WELCOMED
      - POST_ONBOARD_FOCUS
      - POST_ONBOARD_HOURS
      - POST_ONBOARD_HABITS
      - POST_ONBOARD_FIRST_TASK
      - POST_ONBOARD_INTEGRATION
      - POST_ONBOARD_SMART_MEETINGS
      - POST_ONBOARD_SCHEDULING_LINKS
      - POST_ONBOARD_SLACK_STATUS_SYNC
      - POST_ONBOARD_TRAVEL_TIME
      - POST_ONBOARD_ZOOM
      - POST_ONBOARD_CONNECTED_CALENDARS
      - POST_ONBOARD_COLORS
      - POST_ONBOARD_RECLAIM_FREE
      - POST_ONBOARD_GUIDED_TOURS
    UserView:
      required:
      - email
      - mainAccountId
      - name
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        mainAccountId:
          type: integer
          format: int64
    UserWithIntercomHash:
      required:
      - edition
      - editionUsage
      type: object
      allOf:
      - $ref: "#/components/schemas/User"
      - properties:
          id:
            type: string
          email:
            type: string
          principal:
            type: string
          provider:
            type: string
          name:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          avatarUrl:
            type: string
          created:
            type: string
            format: date-time
          trackingCode:
            type: string
          locale:
            type: string
          edition:
            $ref: "#/components/schemas/ReclaimEdition"
          editionUsage:
            $ref: "#/components/schemas/ReclaimEdition"
          logContextUser:
            nullable: true
            allOf:
            - $ref: "#/components/schemas/ObservedUser"
          hostedDomain:
            type: string
            nullable: true
          timezone:
            type: string
          intercomHash:
            type: string
    WebSocketRequestAction:
      type: object
      discriminator:
        propertyName: action
        mapping:
          subscribe: "#/components/schemas/SubscribeAction"
          unsubscribe: "#/components/schemas/UnsubscribeAction"
    WebSocketResponseEnvelope:
      required:
      - compressed
      - data
      - delete
      - notificationKeys
      - subscriptionId
      - type
      type: object
      properties:
        data: {}
        delete:
          type: boolean
        type:
          $ref: "#/components/schemas/SubscriptionType"
        compressed:
          type: boolean
        subscriptionId:
          type: string
          nullable: true
        notificationKeys:
          type: array
          items:
            type: string
    WebhookApiVersion:
      type: string
      enum:
      - v2024-10-02
      - v2025-01-15
      x-enum-varnames:
      - V2024_10_02
      - V2025_01_15
    WebhookConfig:
      required:
      - apiVersion
      - createdAt
      - id
      - name
      - status
      - url
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        url:
          type: string
        status:
          $ref: "#/components/schemas/WebhookStatus"
        apiVersion:
          $ref: "#/components/schemas/WebhookApiVersion"
        createdAt:
          type: string
          format: date-time
    WebhookConfigRequest:
      required:
      - name
      - status
      - url
      type: object
      properties:
        name:
          maxLength: 40
          minLength: 3
          type: string
        url:
          type: string
        status:
          $ref: "#/components/schemas/WebhookStatus"
        apiVersion:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/WebhookApiVersion"
        secret:
          maxLength: 60
          minLength: 12
          type: string
          nullable: true
    WebhookEventType:
      type: string
      enum:
      - SCHEDULING_LINK_MEETING_CREATED
      - SCHEDULING_LINK_MEETING_UPDATED
      - SCHEDULING_LINK_MEETING_CANCELLED
    WebhookExternalConferenceLocation:
      type: string
      enum:
      - GOOGLE_MEET
      - MICROSOFT_TEAMS
      - ZOOM
      - CUSTOM
      - GENERIC_LOCATION
      - PHYSICAL_ADDRESS
      - PHONE_NUMBER
    WebhookExternalCustomData:
      required:
      - data
      - errors
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: string
        errors:
          type: array
          items:
            $ref: "#/components/schemas/CustomDataErrorType"
    WebhookExternalMeetingLocation:
      required:
      - conference_location
      type: object
      properties:
        conference_location:
          $ref: "#/components/schemas/WebhookExternalConferenceLocation"
        location:
          type: string
          nullable: true
        disabled:
          type: boolean
          nullable: true
    WebhookExternalMeetingOrganizer:
      required:
      - email
      - is_host
      - user_id
      type: object
      properties:
        is_host:
          type: boolean
        user_id:
          type: string
        email:
          type: string
        name:
          type: string
        zone_id:
          type: string
    WebhookExternalPayload:
      type: object
      discriminator:
        propertyName: type
        mapping:
          SchedulingLink.Meeting.Created: "#/components/schemas/WebhookExternalSchedulingLinkMeetingCreated"
          SchedulingLink.Meeting.Updated: "#/components/schemas/WebhookExternalSchedulingLinkMeetingUpdated"
          SchedulingLink.Meeting.Cancelled: "#/components/schemas/WebhookExternalSchedulingLinkMeetingCancelled"
    WebhookExternalSchedulingLinkMeeting:
      required:
      - attendee
      - custom_data
      - end_time
      - meeting_id
      - participants
      - scheduled_at
      - scheduling_link_id
      - start_time
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: "#/components/schemas/WebhookExternalMeetingOrganizer"
        attendee:
          $ref: "#/components/schemas/WebhookExternalSchedulingLinkMeetingAttendee"
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        scheduled_at:
          type: string
          format: date-time
        rescheduled_at:
          type: string
          format: date-time
          nullable: true
        cancelled_at:
          type: string
          format: date-time
          nullable: true
        scheduling_link_id:
          type: string
        parent_link_id:
          type: string
          nullable: true
        meeting_id:
          type: string
        ccs:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        meeting_location:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/WebhookExternalMeetingLocation"
        survey:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/WebhookExternalSurvey"
        custom_data:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/WebhookExternalCustomData"
    WebhookExternalSchedulingLinkMeetingAttendee:
      required:
      - attendee_email
      type: object
      properties:
        attendee_id:
          type: string
          nullable: true
        attendee_email:
          type: string
        attendee_name:
          type: string
          nullable: true
        attendee_zone_id:
          type: string
          nullable: true
    WebhookExternalSchedulingLinkMeetingCancelled:
      required:
      - api_version
      - event_ts
      - meeting
      - request_id
      - type
      - webhook_configuration_id
      type: object
      properties:
        type:
          type: string
        event_ts:
          type: string
          format: date-time
        webhook_sent_at:
          type: string
          format: date-time
        api_version:
          $ref: "#/components/schemas/WebhookApiVersion"
        request_id:
          type: string
        meeting:
          $ref: "#/components/schemas/WebhookExternalSchedulingLinkMeeting"
        cancellation_message:
          type: string
          nullable: true
        webhook_configuration_id:
          type: string
    WebhookExternalSchedulingLinkMeetingCreated:
      required:
      - api_version
      - event_ts
      - meeting
      - request_id
      - type
      - webhook_configuration_id
      - webhook_sent_at
      type: object
      properties:
        type:
          type: string
        event_ts:
          type: string
          format: date-time
        webhook_sent_at:
          type: string
          format: date-time
        api_version:
          $ref: "#/components/schemas/WebhookApiVersion"
        request_id:
          type: string
        meeting:
          $ref: "#/components/schemas/WebhookExternalSchedulingLinkMeeting"
        webhook_configuration_id:
          type: string
    WebhookExternalSchedulingLinkMeetingUpdated:
      required:
      - api_version
      - event_ts
      - new_meeting
      - previous_meeting
      - request_id
      - type
      - webhook_configuration_id
      - webhook_sent_at
      type: object
      properties:
        type:
          type: string
        event_ts:
          type: string
          format: date-time
        webhook_sent_at:
          type: string
          format: date-time
        api_version:
          $ref: "#/components/schemas/WebhookApiVersion"
        request_id:
          type: string
        previous_meeting:
          $ref: "#/components/schemas/WebhookExternalSchedulingLinkMeeting"
        new_meeting:
          $ref: "#/components/schemas/WebhookExternalSchedulingLinkMeeting"
        change_reason:
          type: string
          nullable: true
        webhook_configuration_id:
          type: string
    WebhookExternalSurvey:
      required:
      - survey_items
      type: object
      properties:
        survey_items:
          type: array
          items:
            $ref: "#/components/schemas/WebhookExternalSurveyItem"
    WebhookExternalSurveyItem:
      required:
      - answer
      - is_required
      - question
      type: object
      properties:
        question:
          type: string
        is_required:
          type: boolean
        answer:
          type: string
    WebhookMessageRequestHistoryView:
      required:
      - at
      - status
      - statusCode
      type: object
      properties:
        status:
          $ref: "#/components/schemas/HttpStatus"
        statusCode:
          type: integer
          format: int32
        at:
          type: string
          format: date-time
    WebhookMessageStatus:
      type: string
      enum:
      - PENDING
      - FAILURE_BUT_WILL_RETRY
      - FAILED
      - MANUAL_RETRY
      - COMPLETED
    WebhookMessageView:
      required:
      - assigmentId
      - assigmentSubId
      - eventTs
      - eventType
      - id
      - nextRetryAfter
      - payload
      - retries
      - retriesCount
      - status
      type: object
      properties:
        id:
          type: string
        assigmentId:
          type: string
        assigmentSubId:
          type: string
        eventType:
          $ref: "#/components/schemas/WebhookEventType"
        payload:
          $ref: "#/components/schemas/WebhookExternalPayload"
        status:
          $ref: "#/components/schemas/WebhookMessageStatus"
        retriesCount:
          type: integer
          format: int32
        eventTs:
          type: string
          format: date-time
        lastAttemptAt:
          type: string
          format: date-time
          nullable: true
        nextRetryAfter:
          type: string
          format: date-time
        succeedAt:
          type: string
          format: date-time
          nullable: true
        retries:
          type: array
          items:
            $ref: "#/components/schemas/WebhookMessageRequestHistoryView"
    WebhookRetryRequest:
      required:
      - messageIds
      type: object
      properties:
        messageIds:
          type: array
          items:
            type: string
    WebhookSecret:
      required:
      - generatedSecret
      type: object
      properties:
        generatedSecret:
          type: string
    WebhookSettings:
      type: object
      properties:
        enabled:
          type: boolean
        all:
          $ref: "#/components/schemas/WebhookSettings"
    WebhookStatus:
      type: string
      enum:
      - ACTIVE
      - SUSPENDED
      - DISABLED
      - DOWNGRADED
    WeeklyReport:
      type: object
      properties:
        enabled:
          type: boolean
        sendReport:
          type: boolean
    WeeklyReportAgenda:
      required:
      - firstRow
      - secondRow
      type: object
      properties:
        firstRow:
          type: array
          items:
            $ref: "#/components/schemas/WeeklyReportAgendaDay"
        secondRow:
          type: array
          items:
            $ref: "#/components/schemas/WeeklyReportAgendaDay"
    WeeklyReportAgendaDay:
      required:
      - day
      - extraClass
      - items
      type: object
      properties:
        day:
          type: string
        items:
          type: array
          items:
            type: string
        extraClass:
          type: string
    WeeklyReportCallout:
      required:
      - backgroundColor
      - icon
      - svgIcon
      - text
      - textColor
      type: object
      properties:
        text:
          type: string
        textColor:
          type: string
        backgroundColor:
          type: string
        icon:
          type: string
        svgIcon:
          type: string
    WeeklyReportHeadlineStats:
      required:
      - meetings
      - personal
      - work
      type: object
      properties:
        personal:
          $ref: "#/components/schemas/TimeSpentDuringWeek"
        work:
          $ref: "#/components/schemas/TimeSpentDuringWeek"
        meetings:
          $ref: "#/components/schemas/TimeSpentDuringWeek"
    WeeklyReportSocialShare:
      required:
      - id
      - verificationKey
      type: object
      properties:
        id:
          type: string
        verificationKey:
          type: string
    WeeklyReportTask:
      required:
      - chip
      - name
      - timeLeft
      type: object
      properties:
        name:
          type: string
        chip:
          type: string
        due:
          type: string
          nullable: true
        timeLeft:
          type: string
    WeeklyReportTemplateData:
      required:
      - agenda
      - baseUrl
      - callouts
      - celebration
      - reportRange
      - stats
      - tasks
      - user
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserTemplateData"
        reportRange:
          type: string
        reportRangeEncoded:
          type: string
        stats:
          $ref: "#/components/schemas/WeeklyReportHeadlineStats"
        celebration:
          type: string
        callouts:
          type: array
          items:
            $ref: "#/components/schemas/WeeklyReportCallout"
        agenda:
          $ref: "#/components/schemas/WeeklyReportAgenda"
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/WeeklyReportTask"
        baseUrl:
          type: string
        baseUrlEncoded:
          type: string
        social:
          $ref: "#/components/schemas/WeeklyReportSocialShare"
        unsubPayload:
          type: string
    WeeklyReportUnsubscribeRequest:
      required:
      - id
      - verificationKey
      type: object
      properties:
        id:
          type: string
        verificationKey:
          type: string
    ZoomMeetingType:
      type: string
      enum:
      - Instant
      - Scheduled
      - RecurringNoFixedTime
      - RecurringFixedTime
      x-enum-varnames:
      - Instant
      - Scheduled
      - RecurringNoFixedTime
      - RecurringFixedTime
    ZoomUser:
      type: object
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
  securitySchemes:
    Authorization:
      type: oauth2